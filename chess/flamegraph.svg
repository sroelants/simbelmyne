<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="4000" height="870" onload="init(evt)" viewBox="0 0 4000 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="870" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="853.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="3990" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="3990" y="853.00"> </text><svg id="frames" x="10" width="3980" total_samples="827"><g><title>_rjem_je_hook_invoke_dalloc (1 samples, 0.12%)</title><rect x="0.0000%" y="773" width="0.1209%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.0750%" y="783.50"></text></g><g><title>simbelmyne::bench::perft::perft (1 samples, 0.12%)</title><rect x="0.1209%" y="773" width="0.1209%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.1959%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.24%)</title><rect x="0.4837%" y="757" width="0.2418%" height="15" fill="rgb(221,193,54)" fg:x="4" fg:w="2"/><text x="0.5587%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.24%)</title><rect x="0.4837%" y="741" width="0.2418%" height="15" fill="rgb(248,212,6)" fg:x="4" fg:w="2"/><text x="0.5587%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.24%)</title><rect x="0.4837%" y="725" width="0.2418%" height="15" fill="rgb(208,68,35)" fg:x="4" fg:w="2"/><text x="0.5587%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.24%)</title><rect x="0.4837%" y="709" width="0.2418%" height="15" fill="rgb(232,128,0)" fg:x="4" fg:w="2"/><text x="0.5587%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.24%)</title><rect x="0.4837%" y="693" width="0.2418%" height="15" fill="rgb(207,160,47)" fg:x="4" fg:w="2"/><text x="0.5587%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.24%)</title><rect x="0.4837%" y="677" width="0.2418%" height="15" fill="rgb(228,23,34)" fg:x="4" fg:w="2"/><text x="0.5587%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.24%)</title><rect x="0.4837%" y="661" width="0.2418%" height="15" fill="rgb(218,30,26)" fg:x="4" fg:w="2"/><text x="0.5587%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (2 samples, 0.24%)</title><rect x="0.4837%" y="645" width="0.2418%" height="15" fill="rgb(220,122,19)" fg:x="4" fg:w="2"/><text x="0.5587%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.24%)</title><rect x="0.4837%" y="629" width="0.2418%" height="15" fill="rgb(250,228,42)" fg:x="4" fg:w="2"/><text x="0.5587%" y="639.50"></text></g><g><title>simbelmyne::movegen::legal_moves::_&lt;impl simbelmyne::board::Board&gt;::legal_moves::_{{closure}} (2 samples, 0.24%)</title><rect x="0.4837%" y="613" width="0.2418%" height="15" fill="rgb(240,193,28)" fg:x="4" fg:w="2"/><text x="0.5587%" y="623.50"></text></g><g><title>simbelmyne::movegen::castling::CastleType::is_allowed (2 samples, 0.24%)</title><rect x="0.4837%" y="597" width="0.2418%" height="15" fill="rgb(216,20,37)" fg:x="4" fg:w="2"/><text x="0.5587%" y="607.50"></text></g><g><title>simbelmyne::board::Board::attacked_by (2 samples, 0.24%)</title><rect x="0.4837%" y="581" width="0.2418%" height="15" fill="rgb(206,188,39)" fg:x="4" fg:w="2"/><text x="0.5587%" y="591.50"></text></g><g><title>simbelmyne::board::Board::compute_attacked_by (2 samples, 0.24%)</title><rect x="0.4837%" y="565" width="0.2418%" height="15" fill="rgb(217,207,13)" fg:x="4" fg:w="2"/><text x="0.5587%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.24%)</title><rect x="0.4837%" y="549" width="0.2418%" height="15" fill="rgb(231,73,38)" fg:x="4" fg:w="2"/><text x="0.5587%" y="559.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::collect::FromIterator&lt;simbelmyne::bitboard::Bitboard&gt;&gt;::from_iter (2 samples, 0.24%)</title><rect x="0.4837%" y="533" width="0.2418%" height="15" fill="rgb(225,20,46)" fg:x="4" fg:w="2"/><text x="0.5587%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.24%)</title><rect x="0.4837%" y="517" width="0.2418%" height="15" fill="rgb(210,31,41)" fg:x="4" fg:w="2"/><text x="0.5587%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.24%)</title><rect x="0.4837%" y="501" width="0.2418%" height="15" fill="rgb(221,200,47)" fg:x="4" fg:w="2"/><text x="0.5587%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.24%)</title><rect x="0.4837%" y="485" width="0.2418%" height="15" fill="rgb(226,26,5)" fg:x="4" fg:w="2"/><text x="0.5587%" y="495.50"></text></g><g><title>simbelmyne::board::Board::compute_attacked_by::_{{closure}} (2 samples, 0.24%)</title><rect x="0.4837%" y="469" width="0.2418%" height="15" fill="rgb(249,33,26)" fg:x="4" fg:w="2"/><text x="0.5587%" y="479.50"></text></g><g><title>simbelmyne::board::Board::compute_checkers (2 samples, 0.24%)</title><rect x="0.7255%" y="757" width="0.2418%" height="15" fill="rgb(235,183,28)" fg:x="6" fg:w="2"/><text x="0.8005%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.24%)</title><rect x="0.7255%" y="741" width="0.2418%" height="15" fill="rgb(221,5,38)" fg:x="6" fg:w="2"/><text x="0.8005%" y="751.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::collect::FromIterator&lt;simbelmyne::bitboard::Bitboard&gt;&gt;::from_iter (2 samples, 0.24%)</title><rect x="0.7255%" y="725" width="0.2418%" height="15" fill="rgb(247,18,42)" fg:x="6" fg:w="2"/><text x="0.8005%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.24%)</title><rect x="0.7255%" y="709" width="0.2418%" height="15" fill="rgb(241,131,45)" fg:x="6" fg:w="2"/><text x="0.8005%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.24%)</title><rect x="0.7255%" y="693" width="0.2418%" height="15" fill="rgb(249,31,29)" fg:x="6" fg:w="2"/><text x="0.8005%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.24%)</title><rect x="0.7255%" y="677" width="0.2418%" height="15" fill="rgb(225,111,53)" fg:x="6" fg:w="2"/><text x="0.8005%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.24%)</title><rect x="0.7255%" y="661" width="0.2418%" height="15" fill="rgb(238,160,17)" fg:x="6" fg:w="2"/><text x="0.8005%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.24%)</title><rect x="0.7255%" y="645" width="0.2418%" height="15" fill="rgb(214,148,48)" fg:x="6" fg:w="2"/><text x="0.8005%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.24%)</title><rect x="0.7255%" y="629" width="0.2418%" height="15" fill="rgb(232,36,49)" fg:x="6" fg:w="2"/><text x="0.8005%" y="639.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_try_fold (2 samples, 0.24%)</title><rect x="0.7255%" y="613" width="0.2418%" height="15" fill="rgb(209,103,24)" fg:x="6" fg:w="2"/><text x="0.8005%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.24%)</title><rect x="0.7255%" y="597" width="0.2418%" height="15" fill="rgb(229,88,8)" fg:x="6" fg:w="2"/><text x="0.8005%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (2 samples, 0.24%)</title><rect x="0.7255%" y="581" width="0.2418%" height="15" fill="rgb(213,181,19)" fg:x="6" fg:w="2"/><text x="0.8005%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.24%)</title><rect x="0.7255%" y="565" width="0.2418%" height="15" fill="rgb(254,191,54)" fg:x="6" fg:w="2"/><text x="0.8005%" y="575.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_try_fold::flatten::_{{closure}} (2 samples, 0.24%)</title><rect x="0.7255%" y="549" width="0.2418%" height="15" fill="rgb(241,83,37)" fg:x="6" fg:w="2"/><text x="0.8005%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::_{{closure}} (2 samples, 0.24%)</title><rect x="0.7255%" y="533" width="0.2418%" height="15" fill="rgb(233,36,39)" fg:x="6" fg:w="2"/><text x="0.8005%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.24%)</title><rect x="0.7255%" y="517" width="0.2418%" height="15" fill="rgb(226,3,54)" fg:x="6" fg:w="2"/><text x="0.8005%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.24%)</title><rect x="0.7255%" y="501" width="0.2418%" height="15" fill="rgb(245,192,40)" fg:x="6" fg:w="2"/><text x="0.8005%" y="511.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (2 samples, 0.24%)</title><rect x="0.7255%" y="485" width="0.2418%" height="15" fill="rgb(238,167,29)" fg:x="6" fg:w="2"/><text x="0.8005%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (2 samples, 0.24%)</title><rect x="0.7255%" y="469" width="0.2418%" height="15" fill="rgb(232,182,51)" fg:x="6" fg:w="2"/><text x="0.8005%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.24%)</title><rect x="0.7255%" y="453" width="0.2418%" height="15" fill="rgb(231,60,39)" fg:x="6" fg:w="2"/><text x="0.8005%" y="463.50"></text></g><g><title>simbelmyne::board::Board::compute_checkers::_{{closure}} (2 samples, 0.24%)</title><rect x="0.7255%" y="437" width="0.2418%" height="15" fill="rgb(208,69,12)" fg:x="6" fg:w="2"/><text x="0.8005%" y="447.50"></text></g><g><title>[[stack]] (10 samples, 1.21%)</title><rect x="0.0000%" y="789" width="1.2092%" height="15" fill="rgb(235,93,37)" fg:x="0" fg:w="10"/><text x="0.0750%" y="799.50">[[st..</text></g><g><title>simbelmyne::movegen::legal_moves::&lt;impl simbelmyne::board::Board&gt;::legal_moves (8 samples, 0.97%)</title><rect x="0.2418%" y="773" width="0.9674%" height="15" fill="rgb(213,116,39)" fg:x="2" fg:w="8"/><text x="0.3168%" y="783.50">sim..</text></g><g><title>simbelmyne::board::Board::king_danger_squares (2 samples, 0.24%)</title><rect x="0.9674%" y="757" width="0.2418%" height="15" fill="rgb(222,207,29)" fg:x="8" fg:w="2"/><text x="1.0424%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.24%)</title><rect x="0.9674%" y="741" width="0.2418%" height="15" fill="rgb(206,96,30)" fg:x="8" fg:w="2"/><text x="1.0424%" y="751.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::collect::FromIterator&lt;simbelmyne::bitboard::Bitboard&gt;&gt;::from_iter (2 samples, 0.24%)</title><rect x="0.9674%" y="725" width="0.2418%" height="15" fill="rgb(218,138,4)" fg:x="8" fg:w="2"/><text x="1.0424%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.24%)</title><rect x="0.9674%" y="709" width="0.2418%" height="15" fill="rgb(250,191,14)" fg:x="8" fg:w="2"/><text x="1.0424%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.24%)</title><rect x="0.9674%" y="693" width="0.2418%" height="15" fill="rgb(239,60,40)" fg:x="8" fg:w="2"/><text x="1.0424%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.24%)</title><rect x="0.9674%" y="677" width="0.2418%" height="15" fill="rgb(206,27,48)" fg:x="8" fg:w="2"/><text x="1.0424%" y="687.50"></text></g><g><title>simbelmyne::board::Board::king_danger_squares::_{{closure}} (2 samples, 0.24%)</title><rect x="0.9674%" y="661" width="0.2418%" height="15" fill="rgb(225,35,8)" fg:x="8" fg:w="2"/><text x="1.0424%" y="671.50"></text></g><g><title>[ld-linux-x86-64.so.2] (5 samples, 0.60%)</title><rect x="1.2092%" y="789" width="0.6046%" height="15" fill="rgb(250,213,24)" fg:x="10" fg:w="5"/><text x="1.2842%" y="799.50">[..</text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.12%)</title><rect x="1.6929%" y="773" width="0.1209%" height="15" fill="rgb(247,123,22)" fg:x="14" fg:w="1"/><text x="1.7679%" y="783.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.12%)</title><rect x="1.6929%" y="757" width="0.1209%" height="15" fill="rgb(231,138,38)" fg:x="14" fg:w="1"/><text x="1.7679%" y="767.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.12%)</title><rect x="1.6929%" y="741" width="0.1209%" height="15" fill="rgb(231,145,46)" fg:x="14" fg:w="1"/><text x="1.7679%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="6.5296%" y="261" width="0.1209%" height="15" fill="rgb(251,118,11)" fg:x="54" fg:w="1"/><text x="6.6046%" y="271.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::ops::bit::Not&gt;::not (2 samples, 0.24%)</title><rect x="6.6505%" y="261" width="0.2418%" height="15" fill="rgb(217,147,25)" fg:x="55" fg:w="2"/><text x="6.7255%" y="271.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.48%)</title><rect x="7.7388%" y="149" width="0.4837%" height="15" fill="rgb(247,81,37)" fg:x="64" fg:w="4"/><text x="7.8138%" y="159.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.48%)</title><rect x="7.7388%" y="133" width="0.4837%" height="15" fill="rgb(209,12,38)" fg:x="64" fg:w="4"/><text x="7.8138%" y="143.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add_signed (6 samples, 0.73%)</title><rect x="8.5852%" y="85" width="0.7255%" height="15" fill="rgb(227,1,9)" fg:x="71" fg:w="6"/><text x="8.6602%" y="95.50">co..</text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add_signed (4 samples, 0.48%)</title><rect x="8.8271%" y="69" width="0.4837%" height="15" fill="rgb(248,47,43)" fg:x="73" fg:w="4"/><text x="8.9021%" y="79.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 1.93%)</title><rect x="7.7388%" y="197" width="1.9347%" height="15" fill="rgb(221,10,30)" fg:x="64" fg:w="16"/><text x="7.8138%" y="207.50">&lt;core::i..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (16 samples, 1.93%)</title><rect x="7.7388%" y="181" width="1.9347%" height="15" fill="rgb(210,229,1)" fg:x="64" fg:w="16"/><text x="7.8138%" y="191.50">&lt;core::i..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 1.93%)</title><rect x="7.7388%" y="165" width="1.9347%" height="15" fill="rgb(222,148,37)" fg:x="64" fg:w="16"/><text x="7.8138%" y="175.50">&lt;core::i..</text></g><g><title>core::option::Option&lt;T&gt;::map (12 samples, 1.45%)</title><rect x="8.2225%" y="149" width="1.4510%" height="15" fill="rgb(234,67,33)" fg:x="68" fg:w="12"/><text x="8.2975%" y="159.50">core::..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (12 samples, 1.45%)</title><rect x="8.2225%" y="133" width="1.4510%" height="15" fill="rgb(247,98,35)" fg:x="68" fg:w="12"/><text x="8.2975%" y="143.50">core::..</text></g><g><title>simbelmyne::movegen::moves::_&lt;impl simbelmyne::board::Piece&gt;::visible_squares::_{{closure}} (12 samples, 1.45%)</title><rect x="8.2225%" y="117" width="1.4510%" height="15" fill="rgb(247,138,52)" fg:x="68" fg:w="12"/><text x="8.2975%" y="127.50">simbel..</text></g><g><title>simbelmyne::bitboard::Bitboard::offset (12 samples, 1.45%)</title><rect x="8.2225%" y="101" width="1.4510%" height="15" fill="rgb(213,79,30)" fg:x="68" fg:w="12"/><text x="8.2975%" y="111.50">simbel..</text></g><g><title>simbelmyne::bitboard::Bitboard::new (3 samples, 0.36%)</title><rect x="9.3108%" y="85" width="0.3628%" height="15" fill="rgb(246,177,23)" fg:x="77" fg:w="3"/><text x="9.3858%" y="95.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (3 samples, 0.36%)</title><rect x="9.3108%" y="69" width="0.3628%" height="15" fill="rgb(230,62,27)" fg:x="77" fg:w="3"/><text x="9.3858%" y="79.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (5 samples, 0.60%)</title><rect x="9.6735%" y="181" width="0.6046%" height="15" fill="rgb(216,154,8)" fg:x="80" fg:w="5"/><text x="9.7485%" y="191.50">c..</text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 3.63%)</title><rect x="7.1342%" y="229" width="3.6276%" height="15" fill="rgb(244,35,45)" fg:x="59" fg:w="30"/><text x="7.2092%" y="239.50">&lt;core::iter::adapt..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 3.63%)</title><rect x="7.1342%" y="213" width="3.6276%" height="15" fill="rgb(251,115,12)" fg:x="59" fg:w="30"/><text x="7.2092%" y="223.50">&lt;core::iter::adapt..</text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (9 samples, 1.09%)</title><rect x="9.6735%" y="197" width="1.0883%" height="15" fill="rgb(240,54,50)" fg:x="80" fg:w="9"/><text x="9.7485%" y="207.50">core..</text></g><g><title>core::option::Option&lt;T&gt;::is_none (4 samples, 0.48%)</title><rect x="10.2781%" y="181" width="0.4837%" height="15" fill="rgb(233,84,52)" fg:x="85" fg:w="4"/><text x="10.3531%" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (4 samples, 0.48%)</title><rect x="10.2781%" y="165" width="0.4837%" height="15" fill="rgb(207,117,47)" fg:x="85" fg:w="4"/><text x="10.3531%" y="175.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (6 samples, 0.73%)</title><rect x="12.8174%" y="181" width="0.7255%" height="15" fill="rgb(249,43,39)" fg:x="106" fg:w="6"/><text x="12.8924%" y="191.50">&lt;c..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add_signed (6 samples, 0.73%)</title><rect x="15.4776%" y="149" width="0.7255%" height="15" fill="rgb(209,38,44)" fg:x="128" fg:w="6"/><text x="15.5526%" y="159.50">co..</text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add_signed (6 samples, 0.73%)</title><rect x="15.4776%" y="133" width="0.7255%" height="15" fill="rgb(236,212,23)" fg:x="128" fg:w="6"/><text x="15.5526%" y="143.50">co..</text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (6 samples, 0.73%)</title><rect x="15.4776%" y="117" width="0.7255%" height="15" fill="rgb(242,79,21)" fg:x="128" fg:w="6"/><text x="15.5526%" y="127.50">co..</text></g><g><title>simbelmyne::bitboard::Bitboard::new (16 samples, 1.93%)</title><rect x="16.2031%" y="149" width="1.9347%" height="15" fill="rgb(211,96,35)" fg:x="134" fg:w="16"/><text x="16.2781%" y="159.50">simbelmy..</text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (16 samples, 1.93%)</title><rect x="16.2031%" y="133" width="1.9347%" height="15" fill="rgb(253,215,40)" fg:x="134" fg:w="16"/><text x="16.2781%" y="143.50">&lt;simbelm..</text></g><g><title>&lt;u32 as core::ops::arith::Div&gt;::div (13 samples, 1.57%)</title><rect x="18.1378%" y="133" width="1.5719%" height="15" fill="rgb(211,81,21)" fg:x="150" fg:w="13"/><text x="18.2128%" y="143.50">&lt;u32 a..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (75 samples, 9.07%)</title><rect x="11.7291%" y="213" width="9.0689%" height="15" fill="rgb(208,190,38)" fg:x="97" fg:w="75"/><text x="11.8041%" y="223.50">&lt;core::iter::adapters::take::Take&lt;I&gt; as core::ite..</text></g><g><title>&lt;core::iter::sources::successors::Successors&lt;T,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (69 samples, 8.34%)</title><rect x="12.4547%" y="197" width="8.3434%" height="15" fill="rgb(235,213,38)" fg:x="103" fg:w="69"/><text x="12.5297%" y="207.50">&lt;core::iter::sources::successors::Successors&lt;..</text></g><g><title>simbelmyne::movegen::moves::_&lt;impl simbelmyne::board::Piece&gt;::visible_squares::_{{closure}} (60 samples, 7.26%)</title><rect x="13.5429%" y="181" width="7.2551%" height="15" fill="rgb(237,122,38)" fg:x="112" fg:w="60"/><text x="13.6179%" y="191.50">simbelmyne::movegen::moves::_&lt;impl sim..</text></g><g><title>simbelmyne::bitboard::Bitboard::offset (53 samples, 6.41%)</title><rect x="14.3894%" y="165" width="6.4087%" height="15" fill="rgb(244,218,35)" fg:x="119" fg:w="53"/><text x="14.4644%" y="175.50">simbelmyne::bitboard::Bitboard::of..</text></g><g><title>simbelmyne::bitboard::Bitboard::rank (22 samples, 2.66%)</title><rect x="18.1378%" y="149" width="2.6602%" height="15" fill="rgb(240,68,47)" fg:x="150" fg:w="22"/><text x="18.2128%" y="159.50">simbelmyne::b..</text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (9 samples, 1.09%)</title><rect x="19.7098%" y="133" width="1.0883%" height="15" fill="rgb(210,16,53)" fg:x="163" fg:w="9"/><text x="19.7848%" y="143.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (120 samples, 14.51%)</title><rect x="6.8924%" y="261" width="14.5103%" height="15" fill="rgb(235,124,12)" fg:x="57" fg:w="120"/><text x="6.9674%" y="271.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::collect::FromIterator&lt;simbelmyne::bitboard::Bitboard&gt;&gt;::from_iter (120 samples, 14.51%)</title><rect x="6.8924%" y="245" width="14.5103%" height="15" fill="rgb(224,169,11)" fg:x="57" fg:w="120"/><text x="6.9674%" y="255.50">&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::collect::FromIterator&lt;si..</text></g><g><title>&lt;itertools::take_while_inclusive::TakeWhileInclusive&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (88 samples, 10.64%)</title><rect x="10.7618%" y="229" width="10.6409%" height="15" fill="rgb(250,166,2)" fg:x="89" fg:w="88"/><text x="10.8368%" y="239.50">&lt;itertools::take_while_inclusive::TakeWhileInclusive&lt;I,F&gt; ..</text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.60%)</title><rect x="20.7981%" y="213" width="0.6046%" height="15" fill="rgb(242,216,29)" fg:x="172" fg:w="5"/><text x="20.8731%" y="223.50">c..</text></g><g><title>&lt;itertools::take_while_inclusive::TakeWhileInclusive&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (5 samples, 0.60%)</title><rect x="20.7981%" y="197" width="0.6046%" height="15" fill="rgb(230,116,27)" fg:x="172" fg:w="5"/><text x="20.8731%" y="207.50">&lt;..</text></g><g><title>simbelmyne::movegen::moves::_&lt;impl simbelmyne::board::Piece&gt;::visible_squares::_{{closure}} (5 samples, 0.60%)</title><rect x="20.7981%" y="181" width="0.6046%" height="15" fill="rgb(228,99,48)" fg:x="172" fg:w="5"/><text x="20.8731%" y="191.50">s..</text></g><g><title>simbelmyne::bitboard::Bitboard::contains (5 samples, 0.60%)</title><rect x="20.7981%" y="165" width="0.6046%" height="15" fill="rgb(253,11,6)" fg:x="172" fg:w="5"/><text x="20.8731%" y="175.50">s..</text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::cmp::PartialEq&gt;::eq (5 samples, 0.60%)</title><rect x="20.7981%" y="149" width="0.6046%" height="15" fill="rgb(247,143,39)" fg:x="172" fg:w="5"/><text x="20.8731%" y="159.50">&lt;..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add_signed (16 samples, 1.93%)</title><rect x="22.7328%" y="245" width="1.9347%" height="15" fill="rgb(236,97,10)" fg:x="188" fg:w="16"/><text x="22.8078%" y="255.50">core::nu..</text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add_signed (10 samples, 1.21%)</title><rect x="23.4583%" y="229" width="1.2092%" height="15" fill="rgb(233,208,19)" fg:x="194" fg:w="10"/><text x="23.5333%" y="239.50">core..</text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (3 samples, 0.36%)</title><rect x="24.3047%" y="213" width="0.3628%" height="15" fill="rgb(216,164,2)" fg:x="201" fg:w="3"/><text x="24.3797%" y="223.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::offset (35 samples, 4.23%)</title><rect x="21.4027%" y="261" width="4.2322%" height="15" fill="rgb(220,129,5)" fg:x="177" fg:w="35"/><text x="21.4777%" y="271.50">simbelmyne::bitboard:..</text></g><g><title>simbelmyne::bitboard::Bitboard::new (8 samples, 0.97%)</title><rect x="24.6675%" y="245" width="0.9674%" height="15" fill="rgb(242,17,10)" fg:x="204" fg:w="8"/><text x="24.7425%" y="255.50">sim..</text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (5 samples, 0.60%)</title><rect x="25.0302%" y="229" width="0.6046%" height="15" fill="rgb(242,107,0)" fg:x="207" fg:w="5"/><text x="25.1052%" y="239.50">&lt;..</text></g><g><title>simbelmyne::movegen::moves::&lt;impl simbelmyne::board::Piece&gt;::directions (2 samples, 0.24%)</title><rect x="25.6348%" y="261" width="0.2418%" height="15" fill="rgb(251,28,31)" fg:x="212" fg:w="2"/><text x="25.7098%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (219 samples, 26.48%)</title><rect x="2.0556%" y="581" width="26.4813%" height="15" fill="rgb(233,223,10)" fg:x="17" fg:w="219"/><text x="2.1306%" y="591.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (219 samples, 26.48%)</title><rect x="2.0556%" y="565" width="26.4813%" height="15" fill="rgb(215,21,27)" fg:x="17" fg:w="219"/><text x="2.1306%" y="575.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (219 samples, 26.48%)</title><rect x="2.0556%" y="549" width="26.4813%" height="15" fill="rgb(232,23,21)" fg:x="17" fg:w="219"/><text x="2.1306%" y="559.50">alloc::vec::Vec&lt;T,A&gt;::extend_desugared</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (219 samples, 26.48%)</title><rect x="2.0556%" y="533" width="26.4813%" height="15" fill="rgb(244,5,23)" fg:x="17" fg:w="219"/><text x="2.1306%" y="543.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (219 samples, 26.48%)</title><rect x="2.0556%" y="517" width="26.4813%" height="15" fill="rgb(226,81,46)" fg:x="17" fg:w="219"/><text x="2.1306%" y="527.50">&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next</text></g><g><title>core::iter::traits::iterator::Iterator::find (219 samples, 26.48%)</title><rect x="2.0556%" y="501" width="26.4813%" height="15" fill="rgb(247,70,30)" fg:x="17" fg:w="219"/><text x="2.1306%" y="511.50">core::iter::traits::iterator::Iterator::find</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (219 samples, 26.48%)</title><rect x="2.0556%" y="485" width="26.4813%" height="15" fill="rgb(212,68,19)" fg:x="17" fg:w="219"/><text x="2.1306%" y="495.50">core::iter::traits::iterator::Iterator::try_fold</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (219 samples, 26.48%)</title><rect x="2.0556%" y="469" width="26.4813%" height="15" fill="rgb(240,187,13)" fg:x="17" fg:w="219"/><text x="2.1306%" y="479.50">core::iter::traits::iterator::Iterator::find::check::_{{closure}}</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (219 samples, 26.48%)</title><rect x="2.0556%" y="453" width="26.4813%" height="15" fill="rgb(223,113,26)" fg:x="17" fg:w="219"/><text x="2.1306%" y="463.50">core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut</text></g><g><title>simbelmyne::movegen::legal_moves::_&lt;impl simbelmyne::board::Board&gt;::legal_moves::_{{closure}} (219 samples, 26.48%)</title><rect x="2.0556%" y="437" width="26.4813%" height="15" fill="rgb(206,192,2)" fg:x="17" fg:w="219"/><text x="2.1306%" y="447.50">simbelmyne::movegen::legal_moves::_&lt;impl simbelmyne::board::Board&gt;::legal_moves::_{{closure}}</text></g><g><title>simbelmyne::movegen::castling::CastleType::is_allowed (219 samples, 26.48%)</title><rect x="2.0556%" y="421" width="26.4813%" height="15" fill="rgb(241,108,4)" fg:x="17" fg:w="219"/><text x="2.1306%" y="431.50">simbelmyne::movegen::castling::CastleType::is_allowed</text></g><g><title>simbelmyne::board::Board::attacked_by (219 samples, 26.48%)</title><rect x="2.0556%" y="405" width="26.4813%" height="15" fill="rgb(247,173,49)" fg:x="17" fg:w="219"/><text x="2.1306%" y="415.50">simbelmyne::board::Board::attacked_by</text></g><g><title>simbelmyne::board::Board::compute_attacked_by (219 samples, 26.48%)</title><rect x="2.0556%" y="389" width="26.4813%" height="15" fill="rgb(224,114,35)" fg:x="17" fg:w="219"/><text x="2.1306%" y="399.50">simbelmyne::board::Board::compute_attacked_by</text></g><g><title>core::iter::traits::iterator::Iterator::collect (219 samples, 26.48%)</title><rect x="2.0556%" y="373" width="26.4813%" height="15" fill="rgb(245,159,27)" fg:x="17" fg:w="219"/><text x="2.1306%" y="383.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::collect::FromIterator&lt;simbelmyne::bitboard::Bitboard&gt;&gt;::from_iter (219 samples, 26.48%)</title><rect x="2.0556%" y="357" width="26.4813%" height="15" fill="rgb(245,172,44)" fg:x="17" fg:w="219"/><text x="2.1306%" y="367.50">&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::collect::FromIterator&lt;simbelmyne::bitboard::Bitboard&gt;&gt;::from_iter</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (219 samples, 26.48%)</title><rect x="2.0556%" y="341" width="26.4813%" height="15" fill="rgb(236,23,11)" fg:x="17" fg:w="219"/><text x="2.1306%" y="351.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next</text></g><g><title>core::option::Option&lt;T&gt;::map (219 samples, 26.48%)</title><rect x="2.0556%" y="325" width="26.4813%" height="15" fill="rgb(205,117,38)" fg:x="17" fg:w="219"/><text x="2.1306%" y="335.50">core::option::Option&lt;T&gt;::map</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (219 samples, 26.48%)</title><rect x="2.0556%" y="309" width="26.4813%" height="15" fill="rgb(237,72,25)" fg:x="17" fg:w="219"/><text x="2.1306%" y="319.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once</text></g><g><title>simbelmyne::board::Board::compute_attacked_by::_{{closure}} (219 samples, 26.48%)</title><rect x="2.0556%" y="293" width="26.4813%" height="15" fill="rgb(244,70,9)" fg:x="17" fg:w="219"/><text x="2.1306%" y="303.50">simbelmyne::board::Board::compute_attacked_by::_{{closure}}</text></g><g><title>simbelmyne::movegen::moves::&lt;impl simbelmyne::board::Piece&gt;::visible_squares (219 samples, 26.48%)</title><rect x="2.0556%" y="277" width="26.4813%" height="15" fill="rgb(217,125,39)" fg:x="17" fg:w="219"/><text x="2.1306%" y="287.50">simbelmyne::movegen::moves::&lt;impl simbelmyne::board::Piece&gt;::visible_squares</text></g><g><title>simbelmyne::movegen::moves::&lt;impl simbelmyne::board::Piece&gt;::range (22 samples, 2.66%)</title><rect x="25.8767%" y="261" width="2.6602%" height="15" fill="rgb(235,36,10)" fg:x="214" fg:w="22"/><text x="25.9517%" y="271.50">simbelmyne::m..</text></g><g><title>simbelmyne::bitboard::Bitboard::on_pawn_rank (3 samples, 0.36%)</title><rect x="28.1741%" y="245" width="0.3628%" height="15" fill="rgb(251,123,47)" fg:x="233" fg:w="3"/><text x="28.2491%" y="255.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::contains (3 samples, 0.36%)</title><rect x="28.1741%" y="229" width="0.3628%" height="15" fill="rgb(221,13,13)" fg:x="233" fg:w="3"/><text x="28.2491%" y="239.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::cmp::PartialEq&gt;::eq (3 samples, 0.36%)</title><rect x="28.1741%" y="213" width="0.3628%" height="15" fill="rgb(238,131,9)" fg:x="233" fg:w="3"/><text x="28.2491%" y="223.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::ops::bit::Not&gt;::not (2 samples, 0.24%)</title><rect x="29.8670%" y="229" width="0.2418%" height="15" fill="rgb(211,50,8)" fg:x="247" fg:w="2"/><text x="29.9420%" y="239.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="30.4716%" y="101" width="0.1209%" height="15" fill="rgb(245,182,24)" fg:x="252" fg:w="1"/><text x="30.5466%" y="111.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.48%)</title><rect x="30.4716%" y="117" width="0.4837%" height="15" fill="rgb(242,14,37)" fg:x="252" fg:w="4"/><text x="30.5466%" y="127.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.36%)</title><rect x="30.5925%" y="101" width="0.3628%" height="15" fill="rgb(246,228,12)" fg:x="253" fg:w="3"/><text x="30.6675%" y="111.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (3 samples, 0.36%)</title><rect x="30.5925%" y="85" width="0.3628%" height="15" fill="rgb(213,55,15)" fg:x="253" fg:w="3"/><text x="30.6675%" y="95.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (3 samples, 0.36%)</title><rect x="30.5925%" y="69" width="0.3628%" height="15" fill="rgb(209,9,3)" fg:x="253" fg:w="3"/><text x="30.6675%" y="79.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (3 samples, 0.36%)</title><rect x="30.5925%" y="53" width="0.3628%" height="15" fill="rgb(230,59,30)" fg:x="253" fg:w="3"/><text x="30.6675%" y="63.50"></text></g><g><title>core::ptr::read (3 samples, 0.36%)</title><rect x="30.5925%" y="37" width="0.3628%" height="15" fill="rgb(209,121,21)" fg:x="253" fg:w="3"/><text x="30.6675%" y="47.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.85%)</title><rect x="30.4716%" y="165" width="0.8464%" height="15" fill="rgb(220,109,13)" fg:x="252" fg:w="7"/><text x="30.5466%" y="175.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (7 samples, 0.85%)</title><rect x="30.4716%" y="149" width="0.8464%" height="15" fill="rgb(232,18,1)" fg:x="252" fg:w="7"/><text x="30.5466%" y="159.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.85%)</title><rect x="30.4716%" y="133" width="0.8464%" height="15" fill="rgb(215,41,42)" fg:x="252" fg:w="7"/><text x="30.5466%" y="143.50">&lt;c..</text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.36%)</title><rect x="30.9553%" y="117" width="0.3628%" height="15" fill="rgb(224,123,36)" fg:x="256" fg:w="3"/><text x="31.0303%" y="127.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.36%)</title><rect x="30.9553%" y="101" width="0.3628%" height="15" fill="rgb(240,125,3)" fg:x="256" fg:w="3"/><text x="31.0303%" y="111.50"></text></g><g><title>simbelmyne::movegen::moves::_&lt;impl simbelmyne::board::Piece&gt;::visible_squares::_{{closure}} (3 samples, 0.36%)</title><rect x="30.9553%" y="85" width="0.3628%" height="15" fill="rgb(205,98,50)" fg:x="256" fg:w="3"/><text x="31.0303%" y="95.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::offset (3 samples, 0.36%)</title><rect x="30.9553%" y="69" width="0.3628%" height="15" fill="rgb(205,185,37)" fg:x="256" fg:w="3"/><text x="31.0303%" y="79.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::new (2 samples, 0.24%)</title><rect x="31.0762%" y="53" width="0.2418%" height="15" fill="rgb(238,207,15)" fg:x="257" fg:w="2"/><text x="31.1512%" y="63.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (2 samples, 0.24%)</title><rect x="31.0762%" y="37" width="0.2418%" height="15" fill="rgb(213,199,42)" fg:x="257" fg:w="2"/><text x="31.1512%" y="47.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (2 samples, 0.24%)</title><rect x="31.5599%" y="149" width="0.2418%" height="15" fill="rgb(235,201,11)" fg:x="261" fg:w="2"/><text x="31.6349%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 1.81%)</title><rect x="30.2297%" y="197" width="1.8138%" height="15" fill="rgb(207,46,11)" fg:x="250" fg:w="15"/><text x="30.3047%" y="207.50">&lt;core::i..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 1.81%)</title><rect x="30.2297%" y="181" width="1.8138%" height="15" fill="rgb(241,35,35)" fg:x="250" fg:w="15"/><text x="30.3047%" y="191.50">&lt;core::i..</text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (6 samples, 0.73%)</title><rect x="31.3180%" y="165" width="0.7255%" height="15" fill="rgb(243,32,47)" fg:x="259" fg:w="6"/><text x="31.3930%" y="175.50">co..</text></g><g><title>core::option::Option&lt;T&gt;::is_none (2 samples, 0.24%)</title><rect x="31.8017%" y="149" width="0.2418%" height="15" fill="rgb(247,202,23)" fg:x="263" fg:w="2"/><text x="31.8767%" y="159.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (2 samples, 0.24%)</title><rect x="31.8017%" y="133" width="0.2418%" height="15" fill="rgb(219,102,11)" fg:x="263" fg:w="2"/><text x="31.8767%" y="143.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.48%)</title><rect x="32.7690%" y="149" width="0.4837%" height="15" fill="rgb(243,110,44)" fg:x="271" fg:w="4"/><text x="32.8440%" y="159.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add_signed (3 samples, 0.36%)</title><rect x="34.0992%" y="117" width="0.3628%" height="15" fill="rgb(222,74,54)" fg:x="282" fg:w="3"/><text x="34.1742%" y="127.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add_signed (3 samples, 0.36%)</title><rect x="34.0992%" y="101" width="0.3628%" height="15" fill="rgb(216,99,12)" fg:x="282" fg:w="3"/><text x="34.1742%" y="111.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (3 samples, 0.36%)</title><rect x="34.0992%" y="85" width="0.3628%" height="15" fill="rgb(226,22,26)" fg:x="282" fg:w="3"/><text x="34.1742%" y="95.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::new (8 samples, 0.97%)</title><rect x="34.4619%" y="117" width="0.9674%" height="15" fill="rgb(217,163,10)" fg:x="285" fg:w="8"/><text x="34.5369%" y="127.50">sim..</text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (8 samples, 0.97%)</title><rect x="34.4619%" y="101" width="0.9674%" height="15" fill="rgb(213,25,53)" fg:x="285" fg:w="8"/><text x="34.5369%" y="111.50">&lt;si..</text></g><g><title>&lt;u32 as core::ops::arith::Div&gt;::div (6 samples, 0.73%)</title><rect x="35.4293%" y="101" width="0.7255%" height="15" fill="rgb(252,105,26)" fg:x="293" fg:w="6"/><text x="35.5043%" y="111.50">&lt;u..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 4.72%)</title><rect x="32.2854%" y="181" width="4.7158%" height="15" fill="rgb(220,39,43)" fg:x="267" fg:w="39"/><text x="32.3604%" y="191.50">&lt;core::iter::adapters::t..</text></g><g><title>&lt;core::iter::sources::successors::Successors&lt;T,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 4.47%)</title><rect x="32.5272%" y="165" width="4.4740%" height="15" fill="rgb(229,68,48)" fg:x="269" fg:w="37"/><text x="32.6022%" y="175.50">&lt;core::iter::sources::s..</text></g><g><title>simbelmyne::movegen::moves::_&lt;impl simbelmyne::board::Piece&gt;::visible_squares::_{{closure}} (31 samples, 3.75%)</title><rect x="33.2527%" y="149" width="3.7485%" height="15" fill="rgb(252,8,32)" fg:x="275" fg:w="31"/><text x="33.3277%" y="159.50">simbelmyne::movegen..</text></g><g><title>simbelmyne::bitboard::Bitboard::offset (26 samples, 3.14%)</title><rect x="33.8573%" y="133" width="3.1439%" height="15" fill="rgb(223,20,43)" fg:x="280" fg:w="26"/><text x="33.9323%" y="143.50">simbelmyne::bit..</text></g><g><title>simbelmyne::bitboard::Bitboard::rank (13 samples, 1.57%)</title><rect x="35.4293%" y="117" width="1.5719%" height="15" fill="rgb(229,81,49)" fg:x="293" fg:w="13"/><text x="35.5043%" y="127.50">simbel..</text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (7 samples, 0.85%)</title><rect x="36.1548%" y="101" width="0.8464%" height="15" fill="rgb(236,28,36)" fg:x="299" fg:w="7"/><text x="36.2298%" y="111.50">co..</text></g><g><title>&lt;itertools::take_while_inclusive::TakeWhileInclusive&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 5.20%)</title><rect x="32.0435%" y="197" width="5.1995%" height="15" fill="rgb(249,185,26)" fg:x="265" fg:w="43"/><text x="32.1185%" y="207.50">&lt;itertools::take_while_incl..</text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.24%)</title><rect x="37.0012%" y="181" width="0.2418%" height="15" fill="rgb(249,174,33)" fg:x="306" fg:w="2"/><text x="37.0762%" y="191.50"></text></g><g><title>&lt;itertools::take_while_inclusive::TakeWhileInclusive&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (2 samples, 0.24%)</title><rect x="37.0012%" y="165" width="0.2418%" height="15" fill="rgb(233,201,37)" fg:x="306" fg:w="2"/><text x="37.0762%" y="175.50"></text></g><g><title>simbelmyne::movegen::moves::_&lt;impl simbelmyne::board::Piece&gt;::visible_squares::_{{closure}} (2 samples, 0.24%)</title><rect x="37.0012%" y="149" width="0.2418%" height="15" fill="rgb(221,78,26)" fg:x="306" fg:w="2"/><text x="37.0762%" y="159.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::contains (2 samples, 0.24%)</title><rect x="37.0012%" y="133" width="0.2418%" height="15" fill="rgb(250,127,30)" fg:x="306" fg:w="2"/><text x="37.0762%" y="143.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::cmp::PartialEq&gt;::eq (2 samples, 0.24%)</title><rect x="37.0012%" y="117" width="0.2418%" height="15" fill="rgb(230,49,44)" fg:x="306" fg:w="2"/><text x="37.0762%" y="127.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (61 samples, 7.38%)</title><rect x="30.1088%" y="229" width="7.3761%" height="15" fill="rgb(229,67,23)" fg:x="249" fg:w="61"/><text x="30.1838%" y="239.50">core::iter::traits::iterator::Iterator:..</text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::collect::FromIterator&lt;simbelmyne::bitboard::Bitboard&gt;&gt;::from_iter (61 samples, 7.38%)</title><rect x="30.1088%" y="213" width="7.3761%" height="15" fill="rgb(249,83,47)" fg:x="249" fg:w="61"/><text x="30.1838%" y="223.50">&lt;simbelmyne::bitboard::Bitboard as core..</text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::ops::bit::BitOrAssign&gt;::bitor_assign (2 samples, 0.24%)</title><rect x="37.2430%" y="197" width="0.2418%" height="15" fill="rgb(215,43,3)" fg:x="308" fg:w="2"/><text x="37.3180%" y="207.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add_signed (5 samples, 0.60%)</title><rect x="37.9686%" y="213" width="0.6046%" height="15" fill="rgb(238,154,13)" fg:x="314" fg:w="5"/><text x="38.0436%" y="223.50">c..</text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add_signed (2 samples, 0.24%)</title><rect x="38.3313%" y="197" width="0.2418%" height="15" fill="rgb(219,56,2)" fg:x="317" fg:w="2"/><text x="38.4063%" y="207.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.12%)</title><rect x="38.4522%" y="181" width="0.1209%" height="15" fill="rgb(233,0,4)" fg:x="318" fg:w="1"/><text x="38.5272%" y="191.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::offset (12 samples, 1.45%)</title><rect x="37.4849%" y="229" width="1.4510%" height="15" fill="rgb(235,30,7)" fg:x="310" fg:w="12"/><text x="37.5599%" y="239.50">simbel..</text></g><g><title>simbelmyne::bitboard::Bitboard::new (3 samples, 0.36%)</title><rect x="38.5732%" y="213" width="0.3628%" height="15" fill="rgb(250,79,13)" fg:x="319" fg:w="3"/><text x="38.6482%" y="223.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (3 samples, 0.36%)</title><rect x="38.5732%" y="197" width="0.3628%" height="15" fill="rgb(211,146,34)" fg:x="319" fg:w="3"/><text x="38.6482%" y="207.50"></text></g><g><title>simbelmyne::board::Board::compute_checkers (93 samples, 11.25%)</title><rect x="28.5369%" y="581" width="11.2455%" height="15" fill="rgb(228,22,38)" fg:x="236" fg:w="93"/><text x="28.6119%" y="591.50">simbelmyne::board::Board::compute_checkers</text></g><g><title>core::iter::traits::iterator::Iterator::collect (93 samples, 11.25%)</title><rect x="28.5369%" y="565" width="11.2455%" height="15" fill="rgb(235,168,5)" fg:x="236" fg:w="93"/><text x="28.6119%" y="575.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::collect::FromIterator&lt;simbelmyne::bitboard::Bitboard&gt;&gt;::from_iter (93 samples, 11.25%)</title><rect x="28.5369%" y="549" width="11.2455%" height="15" fill="rgb(221,155,16)" fg:x="236" fg:w="93"/><text x="28.6119%" y="559.50">&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::collec..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (93 samples, 11.25%)</title><rect x="28.5369%" y="533" width="11.2455%" height="15" fill="rgb(215,215,53)" fg:x="236" fg:w="93"/><text x="28.6119%" y="543.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::i..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (93 samples, 11.25%)</title><rect x="28.5369%" y="517" width="11.2455%" height="15" fill="rgb(223,4,10)" fg:x="236" fg:w="93"/><text x="28.6119%" y="527.50">&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::tra..</text></g><g><title>core::iter::traits::iterator::Iterator::find (93 samples, 11.25%)</title><rect x="28.5369%" y="501" width="11.2455%" height="15" fill="rgb(234,103,6)" fg:x="236" fg:w="93"/><text x="28.6119%" y="511.50">core::iter::traits::iterator::Iterator::find</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (93 samples, 11.25%)</title><rect x="28.5369%" y="485" width="11.2455%" height="15" fill="rgb(227,97,0)" fg:x="236" fg:w="93"/><text x="28.6119%" y="495.50">&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::tra..</text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (93 samples, 11.25%)</title><rect x="28.5369%" y="469" width="11.2455%" height="15" fill="rgb(234,150,53)" fg:x="236" fg:w="93"/><text x="28.6119%" y="479.50">&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::tra..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (93 samples, 11.25%)</title><rect x="28.5369%" y="453" width="11.2455%" height="15" fill="rgb(228,201,54)" fg:x="236" fg:w="93"/><text x="28.6119%" y="463.50">&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::i..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_try_fold (93 samples, 11.25%)</title><rect x="28.5369%" y="437" width="11.2455%" height="15" fill="rgb(222,22,37)" fg:x="236" fg:w="93"/><text x="28.6119%" y="447.50">core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_try_f..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (93 samples, 11.25%)</title><rect x="28.5369%" y="421" width="11.2455%" height="15" fill="rgb(237,53,32)" fg:x="236" fg:w="93"/><text x="28.6119%" y="431.50">&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::i..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (93 samples, 11.25%)</title><rect x="28.5369%" y="405" width="11.2455%" height="15" fill="rgb(233,25,53)" fg:x="236" fg:w="93"/><text x="28.6119%" y="415.50">&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters:..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (93 samples, 11.25%)</title><rect x="28.5369%" y="389" width="11.2455%" height="15" fill="rgb(210,40,34)" fg:x="236" fg:w="93"/><text x="28.6119%" y="399.50">core::iter::traits::iterator::Iterator::try_fold</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_try_fold::flatten::_{{closure}} (93 samples, 11.25%)</title><rect x="28.5369%" y="373" width="11.2455%" height="15" fill="rgb(241,220,44)" fg:x="236" fg:w="93"/><text x="28.6119%" y="383.50">core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_try_f..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::_{{closure}} (93 samples, 11.25%)</title><rect x="28.5369%" y="357" width="11.2455%" height="15" fill="rgb(235,28,35)" fg:x="236" fg:w="93"/><text x="28.6119%" y="367.50">&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (93 samples, 11.25%)</title><rect x="28.5369%" y="341" width="11.2455%" height="15" fill="rgb(210,56,17)" fg:x="236" fg:w="93"/><text x="28.6119%" y="351.50">core::iter::traits::iterator::Iterator::try_fold</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (93 samples, 11.25%)</title><rect x="28.5369%" y="325" width="11.2455%" height="15" fill="rgb(224,130,29)" fg:x="236" fg:w="93"/><text x="28.6119%" y="335.50">core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;..</text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (93 samples, 11.25%)</title><rect x="28.5369%" y="309" width="11.2455%" height="15" fill="rgb(235,212,8)" fg:x="236" fg:w="93"/><text x="28.6119%" y="319.50">core::iter::adapters::filter::filter_try_fold::_{{closure}}</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (93 samples, 11.25%)</title><rect x="28.5369%" y="293" width="11.2455%" height="15" fill="rgb(223,33,50)" fg:x="236" fg:w="93"/><text x="28.6119%" y="303.50">core::iter::traits::iterator::Iterator::find::check::_{{closu..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (93 samples, 11.25%)</title><rect x="28.5369%" y="277" width="11.2455%" height="15" fill="rgb(219,149,13)" fg:x="236" fg:w="93"/><text x="28.6119%" y="287.50">core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;..</text></g><g><title>simbelmyne::board::Board::compute_checkers::_{{closure}} (93 samples, 11.25%)</title><rect x="28.5369%" y="261" width="11.2455%" height="15" fill="rgb(250,156,29)" fg:x="236" fg:w="93"/><text x="28.6119%" y="271.50">simbelmyne::board::Board::compute_checkers::_{{closure}}</text></g><g><title>simbelmyne::movegen::moves::&lt;impl simbelmyne::board::Piece&gt;::visible_squares (93 samples, 11.25%)</title><rect x="28.5369%" y="245" width="11.2455%" height="15" fill="rgb(216,193,19)" fg:x="236" fg:w="93"/><text x="28.6119%" y="255.50">simbelmyne::movegen::moves::&lt;impl simbelmyne::board::Piece&gt;::..</text></g><g><title>simbelmyne::movegen::moves::&lt;impl simbelmyne::board::Piece&gt;::range (7 samples, 0.85%)</title><rect x="38.9359%" y="229" width="0.8464%" height="15" fill="rgb(216,135,14)" fg:x="322" fg:w="7"/><text x="39.0109%" y="239.50">si..</text></g><g><title>simbelmyne::bitboard::Bitboard::on_pawn_rank (1 samples, 0.12%)</title><rect x="39.6614%" y="213" width="0.1209%" height="15" fill="rgb(241,47,5)" fg:x="328" fg:w="1"/><text x="39.7364%" y="223.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::contains (1 samples, 0.12%)</title><rect x="39.6614%" y="197" width="0.1209%" height="15" fill="rgb(233,42,35)" fg:x="328" fg:w="1"/><text x="39.7364%" y="207.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::cmp::PartialEq&gt;::eq (1 samples, 0.12%)</title><rect x="39.6614%" y="181" width="0.1209%" height="15" fill="rgb(231,13,6)" fg:x="328" fg:w="1"/><text x="39.7364%" y="191.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.24%)</title><rect x="42.0798%" y="453" width="0.2418%" height="15" fill="rgb(207,181,40)" fg:x="348" fg:w="2"/><text x="42.1548%" y="463.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.24%)</title><rect x="42.9262%" y="341" width="0.2418%" height="15" fill="rgb(254,173,49)" fg:x="355" fg:w="2"/><text x="43.0012%" y="351.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.24%)</title><rect x="42.9262%" y="325" width="0.2418%" height="15" fill="rgb(221,1,38)" fg:x="355" fg:w="2"/><text x="43.0012%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.73%)</title><rect x="42.9262%" y="389" width="0.7255%" height="15" fill="rgb(206,124,46)" fg:x="355" fg:w="6"/><text x="43.0012%" y="399.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (6 samples, 0.73%)</title><rect x="42.9262%" y="373" width="0.7255%" height="15" fill="rgb(249,21,11)" fg:x="355" fg:w="6"/><text x="43.0012%" y="383.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.73%)</title><rect x="42.9262%" y="357" width="0.7255%" height="15" fill="rgb(222,201,40)" fg:x="355" fg:w="6"/><text x="43.0012%" y="367.50">&lt;c..</text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.48%)</title><rect x="43.1681%" y="341" width="0.4837%" height="15" fill="rgb(235,61,29)" fg:x="357" fg:w="4"/><text x="43.2431%" y="351.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.48%)</title><rect x="43.1681%" y="325" width="0.4837%" height="15" fill="rgb(219,207,3)" fg:x="357" fg:w="4"/><text x="43.2431%" y="335.50"></text></g><g><title>simbelmyne::movegen::moves::_&lt;impl simbelmyne::board::Piece&gt;::visible_squares::_{{closure}} (4 samples, 0.48%)</title><rect x="43.1681%" y="309" width="0.4837%" height="15" fill="rgb(222,56,46)" fg:x="357" fg:w="4"/><text x="43.2431%" y="319.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::offset (4 samples, 0.48%)</title><rect x="43.1681%" y="293" width="0.4837%" height="15" fill="rgb(239,76,54)" fg:x="357" fg:w="4"/><text x="43.2431%" y="303.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add_signed (2 samples, 0.24%)</title><rect x="43.4099%" y="277" width="0.2418%" height="15" fill="rgb(231,124,27)" fg:x="359" fg:w="2"/><text x="43.4849%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add_signed (2 samples, 0.24%)</title><rect x="43.4099%" y="261" width="0.2418%" height="15" fill="rgb(249,195,6)" fg:x="359" fg:w="2"/><text x="43.4849%" y="271.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.12%)</title><rect x="43.5308%" y="245" width="0.1209%" height="15" fill="rgb(237,174,47)" fg:x="360" fg:w="1"/><text x="43.6058%" y="255.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (2 samples, 0.24%)</title><rect x="44.1354%" y="373" width="0.2418%" height="15" fill="rgb(206,201,31)" fg:x="365" fg:w="2"/><text x="44.2104%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 1.69%)</title><rect x="42.8053%" y="421" width="1.6929%" height="15" fill="rgb(231,57,52)" fg:x="354" fg:w="14"/><text x="42.8803%" y="431.50">&lt;core::..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 1.69%)</title><rect x="42.8053%" y="405" width="1.6929%" height="15" fill="rgb(248,177,22)" fg:x="354" fg:w="14"/><text x="42.8803%" y="415.50">&lt;core::..</text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (7 samples, 0.85%)</title><rect x="43.6518%" y="389" width="0.8464%" height="15" fill="rgb(215,211,37)" fg:x="361" fg:w="7"/><text x="43.7268%" y="399.50">co..</text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.12%)</title><rect x="44.3773%" y="373" width="0.1209%" height="15" fill="rgb(241,128,51)" fg:x="367" fg:w="1"/><text x="44.4523%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.12%)</title><rect x="44.3773%" y="357" width="0.1209%" height="15" fill="rgb(227,165,31)" fg:x="367" fg:w="1"/><text x="44.4523%" y="367.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.12%)</title><rect x="45.2237%" y="373" width="0.1209%" height="15" fill="rgb(228,167,24)" fg:x="374" fg:w="1"/><text x="45.2987%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add_signed (4 samples, 0.48%)</title><rect x="46.3120%" y="341" width="0.4837%" height="15" fill="rgb(228,143,12)" fg:x="383" fg:w="4"/><text x="46.3870%" y="351.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add_signed (4 samples, 0.48%)</title><rect x="46.3120%" y="325" width="0.4837%" height="15" fill="rgb(249,149,8)" fg:x="383" fg:w="4"/><text x="46.3870%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (4 samples, 0.48%)</title><rect x="46.3120%" y="309" width="0.4837%" height="15" fill="rgb(243,35,44)" fg:x="383" fg:w="4"/><text x="46.3870%" y="319.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::new (7 samples, 0.85%)</title><rect x="46.7956%" y="341" width="0.8464%" height="15" fill="rgb(246,89,9)" fg:x="387" fg:w="7"/><text x="46.8706%" y="351.50">si..</text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (7 samples, 0.85%)</title><rect x="46.7956%" y="325" width="0.8464%" height="15" fill="rgb(233,213,13)" fg:x="387" fg:w="7"/><text x="46.8706%" y="335.50">&lt;s..</text></g><g><title>&lt;u32 as core::ops::arith::Div&gt;::div (5 samples, 0.60%)</title><rect x="47.6421%" y="325" width="0.6046%" height="15" fill="rgb(233,141,41)" fg:x="394" fg:w="5"/><text x="47.7171%" y="335.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 3.99%)</title><rect x="44.7400%" y="405" width="3.9903%" height="15" fill="rgb(239,167,4)" fg:x="370" fg:w="33"/><text x="44.8150%" y="415.50">&lt;core::iter::adapter..</text></g><g><title>&lt;core::iter::sources::successors::Successors&lt;T,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 3.63%)</title><rect x="45.1028%" y="389" width="3.6276%" height="15" fill="rgb(209,217,16)" fg:x="373" fg:w="30"/><text x="45.1778%" y="399.50">&lt;core::iter::sourc..</text></g><g><title>simbelmyne::movegen::moves::_&lt;impl simbelmyne::board::Piece&gt;::visible_squares::_{{closure}} (28 samples, 3.39%)</title><rect x="45.3446%" y="373" width="3.3857%" height="15" fill="rgb(219,88,35)" fg:x="375" fg:w="28"/><text x="45.4196%" y="383.50">simbelmyne::moveg..</text></g><g><title>simbelmyne::bitboard::Bitboard::offset (23 samples, 2.78%)</title><rect x="45.9492%" y="357" width="2.7811%" height="15" fill="rgb(220,193,23)" fg:x="380" fg:w="23"/><text x="46.0242%" y="367.50">simbelmyne::b..</text></g><g><title>simbelmyne::bitboard::Bitboard::rank (9 samples, 1.09%)</title><rect x="47.6421%" y="341" width="1.0883%" height="15" fill="rgb(230,90,52)" fg:x="394" fg:w="9"/><text x="47.7171%" y="351.50">simb..</text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (4 samples, 0.48%)</title><rect x="48.2467%" y="325" width="0.4837%" height="15" fill="rgb(252,106,19)" fg:x="399" fg:w="4"/><text x="48.3217%" y="335.50"></text></g><g><title>&lt;itertools::take_while_inclusive::TakeWhileInclusive&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 4.35%)</title><rect x="44.4982%" y="421" width="4.3531%" height="15" fill="rgb(206,74,20)" fg:x="368" fg:w="36"/><text x="44.5732%" y="431.50">&lt;itertools::take_while..</text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.12%)</title><rect x="48.7304%" y="405" width="0.1209%" height="15" fill="rgb(230,138,44)" fg:x="403" fg:w="1"/><text x="48.8054%" y="415.50"></text></g><g><title>&lt;itertools::take_while_inclusive::TakeWhileInclusive&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (1 samples, 0.12%)</title><rect x="48.7304%" y="389" width="0.1209%" height="15" fill="rgb(235,182,43)" fg:x="403" fg:w="1"/><text x="48.8054%" y="399.50"></text></g><g><title>simbelmyne::movegen::moves::_&lt;impl simbelmyne::board::Piece&gt;::visible_squares::_{{closure}} (1 samples, 0.12%)</title><rect x="48.7304%" y="373" width="0.1209%" height="15" fill="rgb(242,16,51)" fg:x="403" fg:w="1"/><text x="48.8054%" y="383.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::contains (1 samples, 0.12%)</title><rect x="48.7304%" y="357" width="0.1209%" height="15" fill="rgb(248,9,4)" fg:x="403" fg:w="1"/><text x="48.8054%" y="367.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::cmp::PartialEq&gt;::eq (1 samples, 0.12%)</title><rect x="48.7304%" y="341" width="0.1209%" height="15" fill="rgb(210,31,22)" fg:x="403" fg:w="1"/><text x="48.8054%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (55 samples, 6.65%)</title><rect x="42.3216%" y="453" width="6.6505%" height="15" fill="rgb(239,54,39)" fg:x="350" fg:w="55"/><text x="42.3966%" y="463.50">core::iter::traits::iterator::Itera..</text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::collect::FromIterator&lt;simbelmyne::bitboard::Bitboard&gt;&gt;::from_iter (55 samples, 6.65%)</title><rect x="42.3216%" y="437" width="6.6505%" height="15" fill="rgb(230,99,41)" fg:x="350" fg:w="55"/><text x="42.3966%" y="447.50">&lt;simbelmyne::bitboard::Bitboard as ..</text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::ops::bit::BitOrAssign&gt;::bitor_assign (1 samples, 0.12%)</title><rect x="48.8513%" y="421" width="0.1209%" height="15" fill="rgb(253,106,12)" fg:x="404" fg:w="1"/><text x="48.9263%" y="431.50"></text></g><g><title>core::slice::iter::&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (1 samples, 0.12%)</title><rect x="48.9722%" y="453" width="0.1209%" height="15" fill="rgb(213,46,41)" fg:x="405" fg:w="1"/><text x="49.0472%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.12%)</title><rect x="48.9722%" y="437" width="0.1209%" height="15" fill="rgb(215,133,35)" fg:x="405" fg:w="1"/><text x="49.0472%" y="447.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.12%)</title><rect x="48.9722%" y="421" width="0.1209%" height="15" fill="rgb(213,28,5)" fg:x="405" fg:w="1"/><text x="49.0472%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.12%)</title><rect x="48.9722%" y="405" width="0.1209%" height="15" fill="rgb(215,77,49)" fg:x="405" fg:w="1"/><text x="49.0472%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.12%)</title><rect x="48.9722%" y="389" width="0.1209%" height="15" fill="rgb(248,100,22)" fg:x="405" fg:w="1"/><text x="49.0472%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add_signed (14 samples, 1.69%)</title><rect x="49.6977%" y="437" width="1.6929%" height="15" fill="rgb(208,67,9)" fg:x="411" fg:w="14"/><text x="49.7727%" y="447.50">core::n..</text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add_signed (7 samples, 0.85%)</title><rect x="50.5441%" y="421" width="0.8464%" height="15" fill="rgb(219,133,21)" fg:x="418" fg:w="7"/><text x="50.6191%" y="431.50">co..</text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.24%)</title><rect x="51.1487%" y="405" width="0.2418%" height="15" fill="rgb(246,46,29)" fg:x="423" fg:w="2"/><text x="51.2237%" y="415.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::offset (23 samples, 2.78%)</title><rect x="49.0931%" y="453" width="2.7811%" height="15" fill="rgb(246,185,52)" fg:x="406" fg:w="23"/><text x="49.1681%" y="463.50">simbelmyne::b..</text></g><g><title>simbelmyne::bitboard::Bitboard::new (4 samples, 0.48%)</title><rect x="51.3906%" y="437" width="0.4837%" height="15" fill="rgb(252,136,11)" fg:x="425" fg:w="4"/><text x="51.4656%" y="447.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (3 samples, 0.36%)</title><rect x="51.5115%" y="421" width="0.3628%" height="15" fill="rgb(219,138,53)" fg:x="426" fg:w="3"/><text x="51.5865%" y="431.50"></text></g><g><title>simbelmyne::board::Board::king_danger_squares (106 samples, 12.82%)</title><rect x="39.7823%" y="581" width="12.8174%" height="15" fill="rgb(211,51,23)" fg:x="329" fg:w="106"/><text x="39.8573%" y="591.50">simbelmyne::board::Board::king_danger_squares</text></g><g><title>core::iter::traits::iterator::Iterator::collect (106 samples, 12.82%)</title><rect x="39.7823%" y="565" width="12.8174%" height="15" fill="rgb(247,221,28)" fg:x="329" fg:w="106"/><text x="39.8573%" y="575.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::collect::FromIterator&lt;simbelmyne::bitboard::Bitboard&gt;&gt;::from_iter (106 samples, 12.82%)</title><rect x="39.7823%" y="549" width="12.8174%" height="15" fill="rgb(251,222,45)" fg:x="329" fg:w="106"/><text x="39.8573%" y="559.50">&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::collect::FromIt..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (106 samples, 12.82%)</title><rect x="39.7823%" y="533" width="12.8174%" height="15" fill="rgb(217,162,53)" fg:x="329" fg:w="106"/><text x="39.8573%" y="543.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::..</text></g><g><title>core::option::Option&lt;T&gt;::map (106 samples, 12.82%)</title><rect x="39.7823%" y="517" width="12.8174%" height="15" fill="rgb(229,93,14)" fg:x="329" fg:w="106"/><text x="39.8573%" y="527.50">core::option::Option&lt;T&gt;::map</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (106 samples, 12.82%)</title><rect x="39.7823%" y="501" width="12.8174%" height="15" fill="rgb(209,67,49)" fg:x="329" fg:w="106"/><text x="39.8573%" y="511.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;..</text></g><g><title>simbelmyne::board::Board::king_danger_squares::_{{closure}} (106 samples, 12.82%)</title><rect x="39.7823%" y="485" width="12.8174%" height="15" fill="rgb(213,87,29)" fg:x="329" fg:w="106"/><text x="39.8573%" y="495.50">simbelmyne::board::Board::king_danger_squares::_{{closure}}</text></g><g><title>simbelmyne::movegen::moves::&lt;impl simbelmyne::board::Piece&gt;::visible_squares (106 samples, 12.82%)</title><rect x="39.7823%" y="469" width="12.8174%" height="15" fill="rgb(205,151,52)" fg:x="329" fg:w="106"/><text x="39.8573%" y="479.50">simbelmyne::movegen::moves::&lt;impl simbelmyne::board::Piece&gt;::visible_s..</text></g><g><title>simbelmyne::movegen::moves::&lt;impl simbelmyne::board::Piece&gt;::range (6 samples, 0.73%)</title><rect x="51.8742%" y="453" width="0.7255%" height="15" fill="rgb(253,215,39)" fg:x="429" fg:w="6"/><text x="51.9492%" y="463.50">si..</text></g><g><title>simbelmyne::bitboard::Bitboard::on_pawn_rank (1 samples, 0.12%)</title><rect x="52.4788%" y="437" width="0.1209%" height="15" fill="rgb(221,220,41)" fg:x="434" fg:w="1"/><text x="52.5538%" y="447.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::contains (1 samples, 0.12%)</title><rect x="52.4788%" y="421" width="0.1209%" height="15" fill="rgb(218,133,21)" fg:x="434" fg:w="1"/><text x="52.5538%" y="431.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::cmp::PartialEq&gt;::eq (1 samples, 0.12%)</title><rect x="52.4788%" y="405" width="0.1209%" height="15" fill="rgb(221,193,43)" fg:x="434" fg:w="1"/><text x="52.5538%" y="415.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.24%)</title><rect x="55.5018%" y="453" width="0.2418%" height="15" fill="rgb(240,128,52)" fg:x="459" fg:w="2"/><text x="55.5768%" y="463.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.24%)</title><rect x="55.5018%" y="437" width="0.2418%" height="15" fill="rgb(253,114,12)" fg:x="459" fg:w="2"/><text x="55.5768%" y="447.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add_signed (2 samples, 0.24%)</title><rect x="55.7437%" y="389" width="0.2418%" height="15" fill="rgb(215,223,47)" fg:x="461" fg:w="2"/><text x="55.8187%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add_signed (2 samples, 0.24%)</title><rect x="55.7437%" y="373" width="0.2418%" height="15" fill="rgb(248,225,23)" fg:x="461" fg:w="2"/><text x="55.8187%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.73%)</title><rect x="55.5018%" y="501" width="0.7255%" height="15" fill="rgb(250,108,0)" fg:x="459" fg:w="6"/><text x="55.5768%" y="511.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (6 samples, 0.73%)</title><rect x="55.5018%" y="485" width="0.7255%" height="15" fill="rgb(228,208,7)" fg:x="459" fg:w="6"/><text x="55.5768%" y="495.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.73%)</title><rect x="55.5018%" y="469" width="0.7255%" height="15" fill="rgb(244,45,10)" fg:x="459" fg:w="6"/><text x="55.5768%" y="479.50">&lt;c..</text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.48%)</title><rect x="55.7437%" y="453" width="0.4837%" height="15" fill="rgb(207,125,25)" fg:x="461" fg:w="4"/><text x="55.8187%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.48%)</title><rect x="55.7437%" y="437" width="0.4837%" height="15" fill="rgb(210,195,18)" fg:x="461" fg:w="4"/><text x="55.8187%" y="447.50"></text></g><g><title>simbelmyne::movegen::moves::_&lt;impl simbelmyne::board::Piece&gt;::visible_squares::_{{closure}} (4 samples, 0.48%)</title><rect x="55.7437%" y="421" width="0.4837%" height="15" fill="rgb(249,80,12)" fg:x="461" fg:w="4"/><text x="55.8187%" y="431.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::offset (4 samples, 0.48%)</title><rect x="55.7437%" y="405" width="0.4837%" height="15" fill="rgb(221,65,9)" fg:x="461" fg:w="4"/><text x="55.8187%" y="415.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::new (2 samples, 0.24%)</title><rect x="55.9855%" y="389" width="0.2418%" height="15" fill="rgb(235,49,36)" fg:x="463" fg:w="2"/><text x="56.0605%" y="399.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (2 samples, 0.24%)</title><rect x="55.9855%" y="373" width="0.2418%" height="15" fill="rgb(225,32,20)" fg:x="463" fg:w="2"/><text x="56.0605%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 1.69%)</title><rect x="54.8972%" y="533" width="1.6929%" height="15" fill="rgb(215,141,46)" fg:x="454" fg:w="14"/><text x="54.9722%" y="543.50">&lt;core::..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 1.69%)</title><rect x="54.8972%" y="517" width="1.6929%" height="15" fill="rgb(250,160,47)" fg:x="454" fg:w="14"/><text x="54.9722%" y="527.50">&lt;core::..</text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (3 samples, 0.36%)</title><rect x="56.2273%" y="501" width="0.3628%" height="15" fill="rgb(216,222,40)" fg:x="465" fg:w="3"/><text x="56.3023%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (2 samples, 0.24%)</title><rect x="56.3482%" y="485" width="0.2418%" height="15" fill="rgb(234,217,39)" fg:x="466" fg:w="2"/><text x="56.4232%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (2 samples, 0.24%)</title><rect x="56.3482%" y="469" width="0.2418%" height="15" fill="rgb(207,178,40)" fg:x="466" fg:w="2"/><text x="56.4232%" y="479.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.24%)</title><rect x="57.3156%" y="485" width="0.2418%" height="15" fill="rgb(221,136,13)" fg:x="474" fg:w="2"/><text x="57.3906%" y="495.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add_signed (3 samples, 0.36%)</title><rect x="58.4039%" y="453" width="0.3628%" height="15" fill="rgb(249,199,10)" fg:x="483" fg:w="3"/><text x="58.4789%" y="463.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add_signed (3 samples, 0.36%)</title><rect x="58.4039%" y="437" width="0.3628%" height="15" fill="rgb(249,222,13)" fg:x="483" fg:w="3"/><text x="58.4789%" y="447.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (3 samples, 0.36%)</title><rect x="58.4039%" y="421" width="0.3628%" height="15" fill="rgb(244,185,38)" fg:x="483" fg:w="3"/><text x="58.4789%" y="431.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::new (8 samples, 0.97%)</title><rect x="58.7666%" y="453" width="0.9674%" height="15" fill="rgb(236,202,9)" fg:x="486" fg:w="8"/><text x="58.8416%" y="463.50">sim..</text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (8 samples, 0.97%)</title><rect x="58.7666%" y="437" width="0.9674%" height="15" fill="rgb(250,229,37)" fg:x="486" fg:w="8"/><text x="58.8416%" y="447.50">&lt;si..</text></g><g><title>&lt;u32 as core::ops::arith::Div&gt;::div (3 samples, 0.36%)</title><rect x="59.7340%" y="437" width="0.3628%" height="15" fill="rgb(206,174,23)" fg:x="494" fg:w="3"/><text x="59.8090%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 3.75%)</title><rect x="56.8319%" y="517" width="3.7485%" height="15" fill="rgb(211,33,43)" fg:x="470" fg:w="31"/><text x="56.9069%" y="527.50">&lt;core::iter::adapte..</text></g><g><title>&lt;core::iter::sources::successors::Successors&lt;T,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 3.63%)</title><rect x="56.9528%" y="501" width="3.6276%" height="15" fill="rgb(245,58,50)" fg:x="471" fg:w="30"/><text x="57.0278%" y="511.50">&lt;core::iter::sourc..</text></g><g><title>simbelmyne::movegen::moves::_&lt;impl simbelmyne::board::Piece&gt;::visible_squares::_{{closure}} (25 samples, 3.02%)</title><rect x="57.5574%" y="485" width="3.0230%" height="15" fill="rgb(244,68,36)" fg:x="476" fg:w="25"/><text x="57.6324%" y="495.50">simbelmyne::mov..</text></g><g><title>simbelmyne::bitboard::Bitboard::offset (23 samples, 2.78%)</title><rect x="57.7993%" y="469" width="2.7811%" height="15" fill="rgb(232,229,15)" fg:x="478" fg:w="23"/><text x="57.8743%" y="479.50">simbelmyne::b..</text></g><g><title>simbelmyne::bitboard::Bitboard::rank (7 samples, 0.85%)</title><rect x="59.7340%" y="453" width="0.8464%" height="15" fill="rgb(254,30,23)" fg:x="494" fg:w="7"/><text x="59.8090%" y="463.50">si..</text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (4 samples, 0.48%)</title><rect x="60.0967%" y="437" width="0.4837%" height="15" fill="rgb(235,160,14)" fg:x="497" fg:w="4"/><text x="60.1717%" y="447.50"></text></g><g><title>&lt;itertools::take_while_inclusive::TakeWhileInclusive&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 4.11%)</title><rect x="56.5901%" y="533" width="4.1112%" height="15" fill="rgb(212,155,44)" fg:x="468" fg:w="34"/><text x="56.6651%" y="543.50">&lt;itertools::take_whil..</text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.12%)</title><rect x="60.5804%" y="517" width="0.1209%" height="15" fill="rgb(226,2,50)" fg:x="501" fg:w="1"/><text x="60.6554%" y="527.50"></text></g><g><title>&lt;itertools::take_while_inclusive::TakeWhileInclusive&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (1 samples, 0.12%)</title><rect x="60.5804%" y="501" width="0.1209%" height="15" fill="rgb(234,177,6)" fg:x="501" fg:w="1"/><text x="60.6554%" y="511.50"></text></g><g><title>simbelmyne::movegen::moves::_&lt;impl simbelmyne::board::Piece&gt;::visible_squares::_{{closure}} (1 samples, 0.12%)</title><rect x="60.5804%" y="485" width="0.1209%" height="15" fill="rgb(217,24,9)" fg:x="501" fg:w="1"/><text x="60.6554%" y="495.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::contains (1 samples, 0.12%)</title><rect x="60.5804%" y="469" width="0.1209%" height="15" fill="rgb(220,13,46)" fg:x="501" fg:w="1"/><text x="60.6554%" y="479.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::cmp::PartialEq&gt;::eq (1 samples, 0.12%)</title><rect x="60.5804%" y="453" width="0.1209%" height="15" fill="rgb(239,221,27)" fg:x="501" fg:w="1"/><text x="60.6554%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (51 samples, 6.17%)</title><rect x="54.6554%" y="565" width="6.1669%" height="15" fill="rgb(222,198,25)" fg:x="452" fg:w="51"/><text x="54.7304%" y="575.50">core::iter::traits::iterator::It..</text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::collect::FromIterator&lt;simbelmyne::bitboard::Bitboard&gt;&gt;::from_iter (51 samples, 6.17%)</title><rect x="54.6554%" y="549" width="6.1669%" height="15" fill="rgb(211,99,13)" fg:x="452" fg:w="51"/><text x="54.7304%" y="559.50">&lt;simbelmyne::bitboard::Bitboard ..</text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::ops::bit::BitOrAssign&gt;::bitor_assign (1 samples, 0.12%)</title><rect x="60.7013%" y="533" width="0.1209%" height="15" fill="rgb(232,111,31)" fg:x="502" fg:w="1"/><text x="60.7763%" y="543.50"></text></g><g><title>core::slice::iter::&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (2 samples, 0.24%)</title><rect x="60.8222%" y="565" width="0.2418%" height="15" fill="rgb(245,82,37)" fg:x="503" fg:w="2"/><text x="60.8972%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (2 samples, 0.24%)</title><rect x="60.8222%" y="549" width="0.2418%" height="15" fill="rgb(227,149,46)" fg:x="503" fg:w="2"/><text x="60.8972%" y="559.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (2 samples, 0.24%)</title><rect x="60.8222%" y="533" width="0.2418%" height="15" fill="rgb(218,36,50)" fg:x="503" fg:w="2"/><text x="60.8972%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.24%)</title><rect x="60.8222%" y="517" width="0.2418%" height="15" fill="rgb(226,80,48)" fg:x="503" fg:w="2"/><text x="60.8972%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (2 samples, 0.24%)</title><rect x="60.8222%" y="501" width="0.2418%" height="15" fill="rgb(238,224,15)" fg:x="503" fg:w="2"/><text x="60.8972%" y="511.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add_signed (6 samples, 0.73%)</title><rect x="61.5478%" y="549" width="0.7255%" height="15" fill="rgb(241,136,10)" fg:x="509" fg:w="6"/><text x="61.6228%" y="559.50">co..</text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add_signed (6 samples, 0.73%)</title><rect x="61.5478%" y="533" width="0.7255%" height="15" fill="rgb(208,32,45)" fg:x="509" fg:w="6"/><text x="61.6228%" y="543.50">co..</text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.12%)</title><rect x="62.1524%" y="517" width="0.1209%" height="15" fill="rgb(207,135,9)" fg:x="514" fg:w="1"/><text x="62.2274%" y="527.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::offset (18 samples, 2.18%)</title><rect x="61.0641%" y="565" width="2.1765%" height="15" fill="rgb(206,86,44)" fg:x="505" fg:w="18"/><text x="61.1391%" y="575.50">simbelmyne..</text></g><g><title>simbelmyne::bitboard::Bitboard::new (8 samples, 0.97%)</title><rect x="62.2733%" y="549" width="0.9674%" height="15" fill="rgb(245,177,15)" fg:x="515" fg:w="8"/><text x="62.3483%" y="559.50">sim..</text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (8 samples, 0.97%)</title><rect x="62.2733%" y="533" width="0.9674%" height="15" fill="rgb(206,64,50)" fg:x="515" fg:w="8"/><text x="62.3483%" y="543.50">&lt;si..</text></g><g><title>simbelmyne::movegen::moves::&lt;impl simbelmyne::board::Piece&gt;::directions (1 samples, 0.12%)</title><rect x="63.2406%" y="565" width="0.1209%" height="15" fill="rgb(234,36,40)" fg:x="523" fg:w="1"/><text x="63.3156%" y="575.50"></text></g><g><title>__libc_start_main (517 samples, 62.52%)</title><rect x="2.0556%" y="773" width="62.5151%" height="15" fill="rgb(213,64,8)" fg:x="17" fg:w="517"/><text x="2.1306%" y="783.50">__libc_start_main</text></g><g><title>[libc.so.6] (517 samples, 62.52%)</title><rect x="2.0556%" y="757" width="62.5151%" height="15" fill="rgb(210,75,36)" fg:x="17" fg:w="517"/><text x="2.1306%" y="767.50">[libc.so.6]</text></g><g><title>main (517 samples, 62.52%)</title><rect x="2.0556%" y="741" width="62.5151%" height="15" fill="rgb(229,88,21)" fg:x="17" fg:w="517"/><text x="2.1306%" y="751.50">main</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (517 samples, 62.52%)</title><rect x="2.0556%" y="725" width="62.5151%" height="15" fill="rgb(252,204,47)" fg:x="17" fg:w="517"/><text x="2.1306%" y="735.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (517 samples, 62.52%)</title><rect x="2.0556%" y="709" width="62.5151%" height="15" fill="rgb(208,77,27)" fg:x="17" fg:w="517"/><text x="2.1306%" y="719.50">core::ops::function::FnOnce::call_once</text></g><g><title>simbelmyne::main (517 samples, 62.52%)</title><rect x="2.0556%" y="693" width="62.5151%" height="15" fill="rgb(221,76,26)" fg:x="17" fg:w="517"/><text x="2.1306%" y="703.50">simbelmyne::main</text></g><g><title>simbelmyne::bench::perft::perft (517 samples, 62.52%)</title><rect x="2.0556%" y="677" width="62.5151%" height="15" fill="rgb(225,139,18)" fg:x="17" fg:w="517"/><text x="2.1306%" y="687.50">simbelmyne::bench::perft::perft</text></g><g><title>simbelmyne::bench::perft::perft (517 samples, 62.52%)</title><rect x="2.0556%" y="661" width="62.5151%" height="15" fill="rgb(230,137,11)" fg:x="17" fg:w="517"/><text x="2.1306%" y="671.50">simbelmyne::bench::perft::perft</text></g><g><title>simbelmyne::bench::perft::perft (517 samples, 62.52%)</title><rect x="2.0556%" y="645" width="62.5151%" height="15" fill="rgb(212,28,1)" fg:x="17" fg:w="517"/><text x="2.1306%" y="655.50">simbelmyne::bench::perft::perft</text></g><g><title>simbelmyne::bench::perft::perft (517 samples, 62.52%)</title><rect x="2.0556%" y="629" width="62.5151%" height="15" fill="rgb(248,164,17)" fg:x="17" fg:w="517"/><text x="2.1306%" y="639.50">simbelmyne::bench::perft::perft</text></g><g><title>simbelmyne::bench::perft::perft (517 samples, 62.52%)</title><rect x="2.0556%" y="613" width="62.5151%" height="15" fill="rgb(222,171,42)" fg:x="17" fg:w="517"/><text x="2.1306%" y="623.50">simbelmyne::bench::perft::perft</text></g><g><title>simbelmyne::movegen::legal_moves::&lt;impl simbelmyne::board::Board&gt;::legal_moves (517 samples, 62.52%)</title><rect x="2.0556%" y="597" width="62.5151%" height="15" fill="rgb(243,84,45)" fg:x="17" fg:w="517"/><text x="2.1306%" y="607.50">simbelmyne::movegen::legal_moves::&lt;impl simbelmyne::board::Board&gt;::legal_moves</text></g><g><title>simbelmyne::movegen::moves::&lt;impl simbelmyne::board::Piece&gt;::visible_squares (99 samples, 11.97%)</title><rect x="52.5998%" y="581" width="11.9710%" height="15" fill="rgb(252,49,23)" fg:x="435" fg:w="99"/><text x="52.6748%" y="591.50">simbelmyne::movegen::moves::&lt;impl simbelmyne::board::Piece&gt;::visi..</text></g><g><title>simbelmyne::movegen::moves::&lt;impl simbelmyne::board::Piece&gt;::range (10 samples, 1.21%)</title><rect x="63.3615%" y="565" width="1.2092%" height="15" fill="rgb(215,19,7)" fg:x="524" fg:w="10"/><text x="63.4365%" y="575.50">simb..</text></g><g><title>simbelmyne::bitboard::Bitboard::on_pawn_rank (1 samples, 0.12%)</title><rect x="64.4498%" y="549" width="0.1209%" height="15" fill="rgb(238,81,41)" fg:x="533" fg:w="1"/><text x="64.5248%" y="559.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::contains (1 samples, 0.12%)</title><rect x="64.4498%" y="533" width="0.1209%" height="15" fill="rgb(210,199,37)" fg:x="533" fg:w="1"/><text x="64.5248%" y="543.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::cmp::PartialEq&gt;::eq (1 samples, 0.12%)</title><rect x="64.4498%" y="517" width="0.1209%" height="15" fill="rgb(244,192,49)" fg:x="533" fg:w="1"/><text x="64.5248%" y="527.50"></text></g><g><title>_rjem_je_arena_ralloc (1 samples, 0.12%)</title><rect x="64.5707%" y="773" width="0.1209%" height="15" fill="rgb(226,211,11)" fg:x="534" fg:w="1"/><text x="64.6457%" y="783.50"></text></g><g><title>do_rallocx (1 samples, 0.12%)</title><rect x="64.6917%" y="773" width="0.1209%" height="15" fill="rgb(236,162,54)" fg:x="535" fg:w="1"/><text x="64.7667%" y="783.50"></text></g><g><title>main (7 samples, 0.85%)</title><rect x="64.8126%" y="773" width="0.8464%" height="15" fill="rgb(220,229,9)" fg:x="536" fg:w="7"/><text x="64.8876%" y="783.50">ma..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7 samples, 0.85%)</title><rect x="64.8126%" y="757" width="0.8464%" height="15" fill="rgb(250,87,22)" fg:x="536" fg:w="7"/><text x="64.8876%" y="767.50">st..</text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 0.85%)</title><rect x="64.8126%" y="741" width="0.8464%" height="15" fill="rgb(239,43,17)" fg:x="536" fg:w="7"/><text x="64.8876%" y="751.50">co..</text></g><g><title>simbelmyne::main (7 samples, 0.85%)</title><rect x="64.8126%" y="725" width="0.8464%" height="15" fill="rgb(231,177,25)" fg:x="536" fg:w="7"/><text x="64.8876%" y="735.50">si..</text></g><g><title>simbelmyne::bench::perft::perft (7 samples, 0.85%)</title><rect x="64.8126%" y="709" width="0.8464%" height="15" fill="rgb(219,179,1)" fg:x="536" fg:w="7"/><text x="64.8876%" y="719.50">si..</text></g><g><title>simbelmyne::bench::perft::perft (7 samples, 0.85%)</title><rect x="64.8126%" y="693" width="0.8464%" height="15" fill="rgb(238,219,53)" fg:x="536" fg:w="7"/><text x="64.8876%" y="703.50">si..</text></g><g><title>simbelmyne::bench::perft::perft (7 samples, 0.85%)</title><rect x="64.8126%" y="677" width="0.8464%" height="15" fill="rgb(232,167,36)" fg:x="536" fg:w="7"/><text x="64.8876%" y="687.50">si..</text></g><g><title>simbelmyne::bench::perft::perft (7 samples, 0.85%)</title><rect x="64.8126%" y="661" width="0.8464%" height="15" fill="rgb(244,19,51)" fg:x="536" fg:w="7"/><text x="64.8876%" y="671.50">si..</text></g><g><title>simbelmyne::bench::perft::perft (7 samples, 0.85%)</title><rect x="64.8126%" y="645" width="0.8464%" height="15" fill="rgb(224,6,22)" fg:x="536" fg:w="7"/><text x="64.8876%" y="655.50">si..</text></g><g><title>simbelmyne::movegen::legal_moves::&lt;impl simbelmyne::board::Board&gt;::legal_moves (7 samples, 0.85%)</title><rect x="64.8126%" y="629" width="0.8464%" height="15" fill="rgb(224,145,5)" fg:x="536" fg:w="7"/><text x="64.8876%" y="639.50">si..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.85%)</title><rect x="64.8126%" y="613" width="0.8464%" height="15" fill="rgb(234,130,49)" fg:x="536" fg:w="7"/><text x="64.8876%" y="623.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (7 samples, 0.85%)</title><rect x="64.8126%" y="597" width="0.8464%" height="15" fill="rgb(254,6,2)" fg:x="536" fg:w="7"/><text x="64.8876%" y="607.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.85%)</title><rect x="64.8126%" y="581" width="0.8464%" height="15" fill="rgb(208,96,46)" fg:x="536" fg:w="7"/><text x="64.8876%" y="591.50">al..</text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.85%)</title><rect x="64.8126%" y="565" width="0.8464%" height="15" fill="rgb(239,3,39)" fg:x="536" fg:w="7"/><text x="64.8876%" y="575.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.85%)</title><rect x="64.8126%" y="549" width="0.8464%" height="15" fill="rgb(233,210,1)" fg:x="536" fg:w="7"/><text x="64.8876%" y="559.50">&lt;a..</text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.85%)</title><rect x="64.8126%" y="533" width="0.8464%" height="15" fill="rgb(244,137,37)" fg:x="536" fg:w="7"/><text x="64.8876%" y="543.50">al..</text></g><g><title>alloc::alloc::realloc (7 samples, 0.85%)</title><rect x="64.8126%" y="517" width="0.8464%" height="15" fill="rgb(240,136,2)" fg:x="536" fg:w="7"/><text x="64.8876%" y="527.50">al..</text></g><g><title>__rg_realloc (7 samples, 0.85%)</title><rect x="64.8126%" y="501" width="0.8464%" height="15" fill="rgb(239,18,37)" fg:x="536" fg:w="7"/><text x="64.8876%" y="511.50">__..</text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (7 samples, 0.85%)</title><rect x="64.8126%" y="485" width="0.8464%" height="15" fill="rgb(218,185,22)" fg:x="536" fg:w="7"/><text x="64.8876%" y="495.50">&lt;t..</text></g><g><title>do_rallocx (7 samples, 0.85%)</title><rect x="64.8126%" y="469" width="0.8464%" height="15" fill="rgb(225,218,4)" fg:x="536" fg:w="7"/><text x="64.8876%" y="479.50">do..</text></g><g><title>thread_alloc_event (2 samples, 0.24%)</title><rect x="65.4172%" y="453" width="0.2418%" height="15" fill="rgb(230,182,32)" fg:x="541" fg:w="2"/><text x="65.4922%" y="463.50"></text></g><g><title>te_event_advance (2 samples, 0.24%)</title><rect x="65.4172%" y="437" width="0.2418%" height="15" fill="rgb(242,56,43)" fg:x="541" fg:w="2"/><text x="65.4922%" y="447.50"></text></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.12%)</title><rect x="66.3845%" y="421" width="0.1209%" height="15" fill="rgb(233,99,24)" fg:x="549" fg:w="1"/><text x="66.4595%" y="431.50"></text></g><g><title>rtree_leafkey (1 samples, 0.12%)</title><rect x="66.3845%" y="405" width="0.1209%" height="15" fill="rgb(234,209,42)" fg:x="549" fg:w="1"/><text x="66.4595%" y="415.50"></text></g><g><title>_rjem_je_arena_ralloc_no_move (2 samples, 0.24%)</title><rect x="66.3845%" y="469" width="0.2418%" height="15" fill="rgb(227,7,12)" fg:x="549" fg:w="2"/><text x="66.4595%" y="479.50"></text></g><g><title>emap_edata_lookup (2 samples, 0.24%)</title><rect x="66.3845%" y="453" width="0.2418%" height="15" fill="rgb(245,203,43)" fg:x="549" fg:w="2"/><text x="66.4595%" y="463.50"></text></g><g><title>rtree_read (2 samples, 0.24%)</title><rect x="66.3845%" y="437" width="0.2418%" height="15" fill="rgb(238,205,33)" fg:x="549" fg:w="2"/><text x="66.4595%" y="447.50"></text></g><g><title>rtree_leaf_elm_read (1 samples, 0.12%)</title><rect x="66.5054%" y="421" width="0.1209%" height="15" fill="rgb(231,56,7)" fg:x="550" fg:w="1"/><text x="66.5804%" y="431.50"></text></g><g><title>rtree_leaf_elm_bits_decode (1 samples, 0.12%)</title><rect x="66.5054%" y="405" width="0.1209%" height="15" fill="rgb(244,186,29)" fg:x="550" fg:w="1"/><text x="66.5804%" y="415.50"></text></g><g><title>_rjem_je_hook_invoke_alloc (2 samples, 0.24%)</title><rect x="66.6264%" y="469" width="0.2418%" height="15" fill="rgb(234,111,31)" fg:x="551" fg:w="2"/><text x="66.7014%" y="479.50"></text></g><g><title>_rjem_je_hook_invoke_dalloc (1 samples, 0.12%)</title><rect x="66.8682%" y="469" width="0.1209%" height="15" fill="rgb(241,149,10)" fg:x="553" fg:w="1"/><text x="66.9432%" y="479.50"></text></g><g><title>isdalloct (2 samples, 0.24%)</title><rect x="66.9891%" y="469" width="0.2418%" height="15" fill="rgb(249,206,44)" fg:x="554" fg:w="2"/><text x="67.0641%" y="479.50"></text></g><g><title>arena_sdalloc (2 samples, 0.24%)</title><rect x="66.9891%" y="453" width="0.2418%" height="15" fill="rgb(251,153,30)" fg:x="554" fg:w="2"/><text x="67.0641%" y="463.50"></text></g><g><title>arena_dalloc_large (2 samples, 0.24%)</title><rect x="66.9891%" y="437" width="0.2418%" height="15" fill="rgb(239,152,38)" fg:x="554" fg:w="2"/><text x="67.0641%" y="447.50"></text></g><g><title>tcache_dalloc_large (2 samples, 0.24%)</title><rect x="66.9891%" y="421" width="0.2418%" height="15" fill="rgb(249,139,47)" fg:x="554" fg:w="2"/><text x="67.0641%" y="431.50"></text></g><g><title>cache_bin_dalloc_easy (2 samples, 0.24%)</title><rect x="66.9891%" y="405" width="0.2418%" height="15" fill="rgb(244,64,35)" fg:x="554" fg:w="2"/><text x="67.0641%" y="415.50"></text></g><g><title>simbelmyne::main (14 samples, 1.69%)</title><rect x="65.6590%" y="773" width="1.6929%" height="15" fill="rgb(216,46,15)" fg:x="543" fg:w="14"/><text x="65.7340%" y="783.50">simbelm..</text></g><g><title>simbelmyne::bench::perft::perft (14 samples, 1.69%)</title><rect x="65.6590%" y="757" width="1.6929%" height="15" fill="rgb(250,74,19)" fg:x="543" fg:w="14"/><text x="65.7340%" y="767.50">simbelm..</text></g><g><title>simbelmyne::bench::perft::perft (14 samples, 1.69%)</title><rect x="65.6590%" y="741" width="1.6929%" height="15" fill="rgb(249,42,33)" fg:x="543" fg:w="14"/><text x="65.7340%" y="751.50">simbelm..</text></g><g><title>simbelmyne::bench::perft::perft (14 samples, 1.69%)</title><rect x="65.6590%" y="725" width="1.6929%" height="15" fill="rgb(242,149,17)" fg:x="543" fg:w="14"/><text x="65.7340%" y="735.50">simbelm..</text></g><g><title>simbelmyne::bench::perft::perft (14 samples, 1.69%)</title><rect x="65.6590%" y="709" width="1.6929%" height="15" fill="rgb(244,29,21)" fg:x="543" fg:w="14"/><text x="65.7340%" y="719.50">simbelm..</text></g><g><title>simbelmyne::bench::perft::perft (14 samples, 1.69%)</title><rect x="65.6590%" y="693" width="1.6929%" height="15" fill="rgb(220,130,37)" fg:x="543" fg:w="14"/><text x="65.7340%" y="703.50">simbelm..</text></g><g><title>simbelmyne::movegen::legal_moves::&lt;impl simbelmyne::board::Board&gt;::legal_moves (14 samples, 1.69%)</title><rect x="65.6590%" y="677" width="1.6929%" height="15" fill="rgb(211,67,2)" fg:x="543" fg:w="14"/><text x="65.7340%" y="687.50">simbelm..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (14 samples, 1.69%)</title><rect x="65.6590%" y="661" width="1.6929%" height="15" fill="rgb(235,68,52)" fg:x="543" fg:w="14"/><text x="65.7340%" y="671.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (14 samples, 1.69%)</title><rect x="65.6590%" y="645" width="1.6929%" height="15" fill="rgb(246,142,3)" fg:x="543" fg:w="14"/><text x="65.7340%" y="655.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (14 samples, 1.69%)</title><rect x="65.6590%" y="629" width="1.6929%" height="15" fill="rgb(241,25,7)" fg:x="543" fg:w="14"/><text x="65.7340%" y="639.50">alloc::..</text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 1.69%)</title><rect x="65.6590%" y="613" width="1.6929%" height="15" fill="rgb(242,119,39)" fg:x="543" fg:w="14"/><text x="65.7340%" y="623.50">alloc::..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (14 samples, 1.69%)</title><rect x="65.6590%" y="597" width="1.6929%" height="15" fill="rgb(241,98,45)" fg:x="543" fg:w="14"/><text x="65.7340%" y="607.50">&lt;alloc:..</text></g><g><title>alloc::alloc::Global::grow_impl (14 samples, 1.69%)</title><rect x="65.6590%" y="581" width="1.6929%" height="15" fill="rgb(254,28,30)" fg:x="543" fg:w="14"/><text x="65.7340%" y="591.50">alloc::..</text></g><g><title>alloc::alloc::realloc (14 samples, 1.69%)</title><rect x="65.6590%" y="565" width="1.6929%" height="15" fill="rgb(241,142,54)" fg:x="543" fg:w="14"/><text x="65.7340%" y="575.50">alloc::..</text></g><g><title>__rg_realloc (14 samples, 1.69%)</title><rect x="65.6590%" y="549" width="1.6929%" height="15" fill="rgb(222,85,15)" fg:x="543" fg:w="14"/><text x="65.7340%" y="559.50">__rg_re..</text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (14 samples, 1.69%)</title><rect x="65.6590%" y="533" width="1.6929%" height="15" fill="rgb(210,85,47)" fg:x="543" fg:w="14"/><text x="65.7340%" y="543.50">&lt;tikv_j..</text></g><g><title>do_rallocx (14 samples, 1.69%)</title><rect x="65.6590%" y="517" width="1.6929%" height="15" fill="rgb(224,206,25)" fg:x="543" fg:w="14"/><text x="65.7340%" y="527.50">do_rall..</text></g><g><title>iralloct (14 samples, 1.69%)</title><rect x="65.6590%" y="501" width="1.6929%" height="15" fill="rgb(243,201,19)" fg:x="543" fg:w="14"/><text x="65.7340%" y="511.50">iralloct</text></g><g><title>_rjem_je_arena_ralloc (14 samples, 1.69%)</title><rect x="65.6590%" y="485" width="1.6929%" height="15" fill="rgb(236,59,4)" fg:x="543" fg:w="14"/><text x="65.7340%" y="495.50">_rjem_j..</text></g><g><title>sz_s2u (1 samples, 0.12%)</title><rect x="67.2310%" y="469" width="0.1209%" height="15" fill="rgb(254,179,45)" fg:x="556" fg:w="1"/><text x="67.3060%" y="479.50"></text></g><g><title>sz_s2u_lookup (1 samples, 0.12%)</title><rect x="67.2310%" y="453" width="0.1209%" height="15" fill="rgb(226,14,10)" fg:x="556" fg:w="1"/><text x="67.3060%" y="463.50"></text></g><g><title>sz_index2size_lookup (1 samples, 0.12%)</title><rect x="67.2310%" y="437" width="0.1209%" height="15" fill="rgb(244,27,41)" fg:x="556" fg:w="1"/><text x="67.3060%" y="447.50"></text></g><g><title>sz_index2size_lookup_impl (1 samples, 0.12%)</title><rect x="67.2310%" y="421" width="0.1209%" height="15" fill="rgb(235,35,32)" fg:x="556" fg:w="1"/><text x="67.3060%" y="431.50"></text></g><g><title>[unknown] (561 samples, 67.84%)</title><rect x="1.8138%" y="789" width="67.8356%" height="15" fill="rgb(218,68,31)" fg:x="15" fg:w="561"/><text x="1.8888%" y="799.50">[unknown]</text></g><g><title>simbelmyne::movegen::moves::&lt;impl simbelmyne::board::Piece&gt;::visible_squares (19 samples, 2.30%)</title><rect x="67.3519%" y="773" width="2.2975%" height="15" fill="rgb(207,120,37)" fg:x="557" fg:w="19"/><text x="67.4269%" y="783.50">simbelmyne..</text></g><g><title>[libc.so.6] (6 samples, 0.73%)</title><rect x="69.6493%" y="613" width="0.7255%" height="15" fill="rgb(227,98,0)" fg:x="576" fg:w="6"/><text x="69.7243%" y="623.50">[l..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;simbelmyne::movegen::moves::Move&gt;&gt; (1 samples, 0.12%)</title><rect x="70.3748%" y="613" width="0.1209%" height="15" fill="rgb(207,7,3)" fg:x="582" fg:w="1"/><text x="70.4498%" y="623.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="70.3748%" y="597" width="0.1209%" height="15" fill="rgb(206,98,19)" fg:x="582" fg:w="1"/><text x="70.4498%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;simbelmyne::movegen::moves::Move,alloc::alloc::Global&gt;&gt; (1 samples, 0.12%)</title><rect x="70.3748%" y="581" width="0.1209%" height="15" fill="rgb(217,5,26)" fg:x="582" fg:w="1"/><text x="70.4498%" y="591.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="70.3748%" y="565" width="0.1209%" height="15" fill="rgb(235,190,38)" fg:x="582" fg:w="1"/><text x="70.4498%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;simbelmyne::movegen::moves::Move&gt;&gt; (1 samples, 0.12%)</title><rect x="70.3748%" y="549" width="0.1209%" height="15" fill="rgb(247,86,24)" fg:x="582" fg:w="1"/><text x="70.4498%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="70.3748%" y="533" width="0.1209%" height="15" fill="rgb(205,101,16)" fg:x="582" fg:w="1"/><text x="70.4498%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.12%)</title><rect x="70.3748%" y="517" width="0.1209%" height="15" fill="rgb(246,168,33)" fg:x="582" fg:w="1"/><text x="70.4498%" y="527.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.12%)</title><rect x="70.3748%" y="501" width="0.1209%" height="15" fill="rgb(231,114,1)" fg:x="582" fg:w="1"/><text x="70.4498%" y="511.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.12%)</title><rect x="70.3748%" y="485" width="0.1209%" height="15" fill="rgb(207,184,53)" fg:x="582" fg:w="1"/><text x="70.4498%" y="495.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.12%)</title><rect x="72.4305%" y="581" width="0.1209%" height="15" fill="rgb(224,95,51)" fg:x="599" fg:w="1"/><text x="72.5055%" y="591.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::convert::From&lt;simbelmyne::board::Square&gt;&gt;::from (1 samples, 0.12%)</title><rect x="72.4305%" y="565" width="0.1209%" height="15" fill="rgb(212,188,45)" fg:x="599" fg:w="1"/><text x="72.5055%" y="575.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (1 samples, 0.12%)</title><rect x="72.4305%" y="549" width="0.1209%" height="15" fill="rgb(223,154,38)" fg:x="599" fg:w="1"/><text x="72.5055%" y="559.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="72.5514%" y="469" width="0.1209%" height="15" fill="rgb(251,22,52)" fg:x="600" fg:w="1"/><text x="72.6264%" y="479.50"></text></g><g><title>simbelmyne::board::Board::all_occupied (3 samples, 0.36%)</title><rect x="72.6723%" y="405" width="0.3628%" height="15" fill="rgb(229,209,22)" fg:x="601" fg:w="3"/><text x="72.7473%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.36%)</title><rect x="72.6723%" y="389" width="0.3628%" height="15" fill="rgb(234,138,34)" fg:x="601" fg:w="3"/><text x="72.7473%" y="399.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::collect::FromIterator&lt;simbelmyne::bitboard::Bitboard&gt;&gt;::from_iter (3 samples, 0.36%)</title><rect x="72.6723%" y="373" width="0.3628%" height="15" fill="rgb(212,95,11)" fg:x="601" fg:w="3"/><text x="72.7473%" y="383.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="72.9141%" y="357" width="0.1209%" height="15" fill="rgb(240,179,47)" fg:x="603" fg:w="1"/><text x="72.9891%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.12%)</title><rect x="72.9141%" y="341" width="0.1209%" height="15" fill="rgb(240,163,11)" fg:x="603" fg:w="1"/><text x="72.9891%" y="351.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (1 samples, 0.12%)</title><rect x="72.9141%" y="325" width="0.1209%" height="15" fill="rgb(236,37,12)" fg:x="603" fg:w="1"/><text x="72.9891%" y="335.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (1 samples, 0.12%)</title><rect x="72.9141%" y="309" width="0.1209%" height="15" fill="rgb(232,164,16)" fg:x="603" fg:w="1"/><text x="72.9891%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (1 samples, 0.12%)</title><rect x="72.9141%" y="293" width="0.1209%" height="15" fill="rgb(244,205,15)" fg:x="603" fg:w="1"/><text x="72.9891%" y="303.50"></text></g><g><title>core::ptr::read (1 samples, 0.12%)</title><rect x="72.9141%" y="277" width="0.1209%" height="15" fill="rgb(223,117,47)" fg:x="603" fg:w="1"/><text x="72.9891%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 1.81%)</title><rect x="73.0351%" y="197" width="1.8138%" height="15" fill="rgb(244,107,35)" fg:x="604" fg:w="15"/><text x="73.1101%" y="207.50">&lt;core::s..</text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (11 samples, 1.33%)</title><rect x="73.5187%" y="181" width="1.3301%" height="15" fill="rgb(205,140,8)" fg:x="608" fg:w="11"/><text x="73.5937%" y="191.50">core:..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (11 samples, 1.33%)</title><rect x="73.5187%" y="165" width="1.3301%" height="15" fill="rgb(228,84,46)" fg:x="608" fg:w="11"/><text x="73.5937%" y="175.50">core:..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (11 samples, 1.33%)</title><rect x="73.5187%" y="149" width="1.3301%" height="15" fill="rgb(254,188,9)" fg:x="608" fg:w="11"/><text x="73.5937%" y="159.50">core:..</text></g><g><title>&lt;&amp;core::option::Option&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.48%)</title><rect x="74.9698%" y="181" width="0.4837%" height="15" fill="rgb(206,112,54)" fg:x="620" fg:w="4"/><text x="75.0448%" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::iter (4 samples, 0.48%)</title><rect x="74.9698%" y="165" width="0.4837%" height="15" fill="rgb(216,84,49)" fg:x="620" fg:w="4"/><text x="75.0448%" y="175.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (4 samples, 0.48%)</title><rect x="74.9698%" y="149" width="0.4837%" height="15" fill="rgb(214,194,35)" fg:x="620" fg:w="4"/><text x="75.0448%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (40 samples, 4.84%)</title><rect x="72.5514%" y="581" width="4.8368%" height="15" fill="rgb(249,28,3)" fg:x="600" fg:w="40"/><text x="72.6264%" y="591.50">&lt;alloc::vec::Vec&lt;T,A&gt; as ..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (40 samples, 4.84%)</title><rect x="72.5514%" y="565" width="4.8368%" height="15" fill="rgb(222,56,52)" fg:x="600" fg:w="40"/><text x="72.6264%" y="575.50">&lt;alloc::vec::Vec&lt;T,A&gt; as ..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (40 samples, 4.84%)</title><rect x="72.5514%" y="549" width="4.8368%" height="15" fill="rgb(245,217,50)" fg:x="600" fg:w="40"/><text x="72.6264%" y="559.50">alloc::vec::Vec&lt;T,A&gt;::ext..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 4.84%)</title><rect x="72.5514%" y="533" width="4.8368%" height="15" fill="rgb(213,201,24)" fg:x="600" fg:w="40"/><text x="72.6264%" y="543.50">&lt;core::iter::adapters::ma..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 4.84%)</title><rect x="72.5514%" y="517" width="4.8368%" height="15" fill="rgb(248,116,28)" fg:x="600" fg:w="40"/><text x="72.6264%" y="527.50">&lt;core::iter::adapters::fi..</text></g><g><title>core::iter::traits::iterator::Iterator::find (40 samples, 4.84%)</title><rect x="72.5514%" y="501" width="4.8368%" height="15" fill="rgb(219,72,43)" fg:x="600" fg:w="40"/><text x="72.6264%" y="511.50">core::iter::traits::itera..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (40 samples, 4.84%)</title><rect x="72.5514%" y="485" width="4.8368%" height="15" fill="rgb(209,138,14)" fg:x="600" fg:w="40"/><text x="72.6264%" y="495.50">core::iter::traits::itera..</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (39 samples, 4.72%)</title><rect x="72.6723%" y="469" width="4.7158%" height="15" fill="rgb(222,18,33)" fg:x="601" fg:w="39"/><text x="72.7473%" y="479.50">core::iter::traits::iter..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (39 samples, 4.72%)</title><rect x="72.6723%" y="453" width="4.7158%" height="15" fill="rgb(213,199,7)" fg:x="601" fg:w="39"/><text x="72.7473%" y="463.50">core::ops::function::imp..</text></g><g><title>simbelmyne::movegen::legal_moves::_&lt;impl simbelmyne::board::Board&gt;::legal_moves::_{{closure}} (39 samples, 4.72%)</title><rect x="72.6723%" y="437" width="4.7158%" height="15" fill="rgb(250,110,10)" fg:x="601" fg:w="39"/><text x="72.7473%" y="447.50">simbelmyne::movegen::leg..</text></g><g><title>simbelmyne::movegen::castling::CastleType::is_allowed (39 samples, 4.72%)</title><rect x="72.6723%" y="421" width="4.7158%" height="15" fill="rgb(248,123,6)" fg:x="601" fg:w="39"/><text x="72.7473%" y="431.50">simbelmyne::movegen::cas..</text></g><g><title>simbelmyne::board::Board::attacked_by (36 samples, 4.35%)</title><rect x="73.0351%" y="405" width="4.3531%" height="15" fill="rgb(206,91,31)" fg:x="604" fg:w="36"/><text x="73.1101%" y="415.50">simbelmyne::board::Boa..</text></g><g><title>simbelmyne::board::Board::compute_attacked_by (36 samples, 4.35%)</title><rect x="73.0351%" y="389" width="4.3531%" height="15" fill="rgb(211,154,13)" fg:x="604" fg:w="36"/><text x="73.1101%" y="399.50">simbelmyne::board::Boa..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (36 samples, 4.35%)</title><rect x="73.0351%" y="373" width="4.3531%" height="15" fill="rgb(225,148,7)" fg:x="604" fg:w="36"/><text x="73.1101%" y="383.50">core::iter::traits::it..</text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::collect::FromIterator&lt;simbelmyne::bitboard::Bitboard&gt;&gt;::from_iter (36 samples, 4.35%)</title><rect x="73.0351%" y="357" width="4.3531%" height="15" fill="rgb(220,160,43)" fg:x="604" fg:w="36"/><text x="73.1101%" y="367.50">&lt;simbelmyne::bitboard:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 4.35%)</title><rect x="73.0351%" y="341" width="4.3531%" height="15" fill="rgb(213,52,39)" fg:x="604" fg:w="36"/><text x="73.1101%" y="351.50">&lt;core::iter::adapters:..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 4.35%)</title><rect x="73.0351%" y="325" width="4.3531%" height="15" fill="rgb(243,137,7)" fg:x="604" fg:w="36"/><text x="73.1101%" y="335.50">&lt;core::iter::adapters:..</text></g><g><title>core::iter::traits::iterator::Iterator::find (36 samples, 4.35%)</title><rect x="73.0351%" y="309" width="4.3531%" height="15" fill="rgb(230,79,13)" fg:x="604" fg:w="36"/><text x="73.1101%" y="319.50">core::iter::traits::it..</text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (36 samples, 4.35%)</title><rect x="73.0351%" y="293" width="4.3531%" height="15" fill="rgb(247,105,23)" fg:x="604" fg:w="36"/><text x="73.1101%" y="303.50">&lt;core::iter::adapters:..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (36 samples, 4.35%)</title><rect x="73.0351%" y="277" width="4.3531%" height="15" fill="rgb(223,179,41)" fg:x="604" fg:w="36"/><text x="73.1101%" y="287.50">&lt;core::iter::adapters:..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_try_fold (36 samples, 4.35%)</title><rect x="73.0351%" y="261" width="4.3531%" height="15" fill="rgb(218,9,34)" fg:x="604" fg:w="36"/><text x="73.1101%" y="271.50">core::iter::adapters::..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (36 samples, 4.35%)</title><rect x="73.0351%" y="245" width="4.3531%" height="15" fill="rgb(222,106,8)" fg:x="604" fg:w="36"/><text x="73.1101%" y="255.50">&lt;core::iter::adapters:..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (36 samples, 4.35%)</title><rect x="73.0351%" y="229" width="4.3531%" height="15" fill="rgb(211,220,0)" fg:x="604" fg:w="36"/><text x="73.1101%" y="239.50">&lt;core::iter::adapters:..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (36 samples, 4.35%)</title><rect x="73.0351%" y="213" width="4.3531%" height="15" fill="rgb(229,52,16)" fg:x="604" fg:w="36"/><text x="73.1101%" y="223.50">core::iter::traits::it..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_try_fold::flatten::_{{closure}} (21 samples, 2.54%)</title><rect x="74.8489%" y="197" width="2.5393%" height="15" fill="rgb(212,155,18)" fg:x="619" fg:w="21"/><text x="74.9239%" y="207.50">core::iter::..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::_{{closure}} (16 samples, 1.93%)</title><rect x="75.4534%" y="181" width="1.9347%" height="15" fill="rgb(242,21,14)" fg:x="624" fg:w="16"/><text x="75.5284%" y="191.50">&lt;core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (16 samples, 1.93%)</title><rect x="75.4534%" y="165" width="1.9347%" height="15" fill="rgb(222,19,48)" fg:x="624" fg:w="16"/><text x="75.5284%" y="175.50">core::it..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.36%)</title><rect x="77.0254%" y="149" width="0.3628%" height="15" fill="rgb(232,45,27)" fg:x="637" fg:w="3"/><text x="77.1004%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (3 samples, 0.36%)</title><rect x="77.0254%" y="133" width="0.3628%" height="15" fill="rgb(249,103,42)" fg:x="637" fg:w="3"/><text x="77.1004%" y="143.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.36%)</title><rect x="77.0254%" y="117" width="0.3628%" height="15" fill="rgb(246,81,33)" fg:x="637" fg:w="3"/><text x="77.1004%" y="127.50"></text></g><g><title>simbelmyne::board::Board::compute_attacked_by::_{{closure}} (3 samples, 0.36%)</title><rect x="77.0254%" y="101" width="0.3628%" height="15" fill="rgb(252,33,42)" fg:x="637" fg:w="3"/><text x="77.1004%" y="111.50"></text></g><g><title>&lt;simbelmyne::board::Color as core::cmp::PartialEq&gt;::eq (3 samples, 0.36%)</title><rect x="77.0254%" y="85" width="0.3628%" height="15" fill="rgb(209,212,41)" fg:x="637" fg:w="3"/><text x="77.1004%" y="95.50"></text></g><g><title>core::num::&lt;impl u64&gt;::checked_shl (1 samples, 0.12%)</title><rect x="77.6300%" y="565" width="0.1209%" height="15" fill="rgb(207,154,6)" fg:x="642" fg:w="1"/><text x="77.7050%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_shl (1 samples, 0.12%)</title><rect x="77.6300%" y="549" width="0.1209%" height="15" fill="rgb(223,64,47)" fg:x="642" fg:w="1"/><text x="77.7050%" y="559.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.73%)</title><rect x="77.3881%" y="581" width="0.7255%" height="15" fill="rgb(211,161,38)" fg:x="640" fg:w="6"/><text x="77.4631%" y="591.50">&lt;s..</text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (3 samples, 0.36%)</title><rect x="77.7509%" y="565" width="0.3628%" height="15" fill="rgb(219,138,40)" fg:x="643" fg:w="3"/><text x="77.8259%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.12%)</title><rect x="78.2346%" y="533" width="0.1209%" height="15" fill="rgb(241,228,46)" fg:x="647" fg:w="1"/><text x="78.3096%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.12%)</title><rect x="78.3555%" y="533" width="0.1209%" height="15" fill="rgb(223,209,38)" fg:x="648" fg:w="1"/><text x="78.4305%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.12%)</title><rect x="78.3555%" y="517" width="0.1209%" height="15" fill="rgb(236,164,45)" fg:x="648" fg:w="1"/><text x="78.4305%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.12%)</title><rect x="78.3555%" y="501" width="0.1209%" height="15" fill="rgb(231,15,5)" fg:x="648" fg:w="1"/><text x="78.4305%" y="511.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.12%)</title><rect x="78.3555%" y="485" width="0.1209%" height="15" fill="rgb(252,35,15)" fg:x="648" fg:w="1"/><text x="78.4305%" y="495.50"></text></g><g><title>__rg_realloc (1 samples, 0.12%)</title><rect x="78.3555%" y="469" width="0.1209%" height="15" fill="rgb(248,181,18)" fg:x="648" fg:w="1"/><text x="78.4305%" y="479.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (1 samples, 0.12%)</title><rect x="78.3555%" y="453" width="0.1209%" height="15" fill="rgb(233,39,42)" fg:x="648" fg:w="1"/><text x="78.4305%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.60%)</title><rect x="78.1137%" y="581" width="0.6046%" height="15" fill="rgb(238,110,33)" fg:x="646" fg:w="5"/><text x="78.1887%" y="591.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.48%)</title><rect x="78.2346%" y="565" width="0.4837%" height="15" fill="rgb(233,195,10)" fg:x="647" fg:w="4"/><text x="78.3096%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.48%)</title><rect x="78.2346%" y="549" width="0.4837%" height="15" fill="rgb(254,105,3)" fg:x="647" fg:w="4"/><text x="78.3096%" y="559.50"></text></g><g><title>core::cmp::max (2 samples, 0.24%)</title><rect x="78.4764%" y="533" width="0.2418%" height="15" fill="rgb(221,225,9)" fg:x="649" fg:w="2"/><text x="78.5514%" y="543.50"></text></g><g><title>core::cmp::Ord::max (2 samples, 0.24%)</title><rect x="78.4764%" y="517" width="0.2418%" height="15" fill="rgb(224,227,45)" fg:x="649" fg:w="2"/><text x="78.5514%" y="527.50"></text></g><g><title>core::cmp::max_by (2 samples, 0.24%)</title><rect x="78.4764%" y="501" width="0.2418%" height="15" fill="rgb(229,198,43)" fg:x="649" fg:w="2"/><text x="78.5514%" y="511.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::contains (2 samples, 0.24%)</title><rect x="78.7183%" y="581" width="0.2418%" height="15" fill="rgb(206,209,35)" fg:x="651" fg:w="2"/><text x="78.7933%" y="591.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::cmp::PartialEq&gt;::eq (2 samples, 0.24%)</title><rect x="78.7183%" y="565" width="0.2418%" height="15" fill="rgb(245,195,53)" fg:x="651" fg:w="2"/><text x="78.7933%" y="575.50"></text></g><g><title>&lt;&amp;core::option::Option&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (7 samples, 0.85%)</title><rect x="78.9601%" y="357" width="0.8464%" height="15" fill="rgb(240,92,26)" fg:x="653" fg:w="7"/><text x="79.0351%" y="367.50">&lt;&amp;..</text></g><g><title>core::option::Option&lt;T&gt;::iter (7 samples, 0.85%)</title><rect x="78.9601%" y="341" width="0.8464%" height="15" fill="rgb(207,40,23)" fg:x="653" fg:w="7"/><text x="79.0351%" y="351.50">co..</text></g><g><title>core::option::Option&lt;T&gt;::as_ref (7 samples, 0.85%)</title><rect x="78.9601%" y="325" width="0.8464%" height="15" fill="rgb(223,111,35)" fg:x="653" fg:w="7"/><text x="79.0351%" y="335.50">co..</text></g><g><title>simbelmyne::board::Board::compute_checkers (13 samples, 1.57%)</title><rect x="78.9601%" y="581" width="1.5719%" height="15" fill="rgb(229,147,28)" fg:x="653" fg:w="13"/><text x="79.0351%" y="591.50">simbel..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (13 samples, 1.57%)</title><rect x="78.9601%" y="565" width="1.5719%" height="15" fill="rgb(211,29,28)" fg:x="653" fg:w="13"/><text x="79.0351%" y="575.50">core::..</text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::collect::FromIterator&lt;simbelmyne::bitboard::Bitboard&gt;&gt;::from_iter (13 samples, 1.57%)</title><rect x="78.9601%" y="549" width="1.5719%" height="15" fill="rgb(228,72,33)" fg:x="653" fg:w="13"/><text x="79.0351%" y="559.50">&lt;simbe..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 1.57%)</title><rect x="78.9601%" y="533" width="1.5719%" height="15" fill="rgb(205,214,31)" fg:x="653" fg:w="13"/><text x="79.0351%" y="543.50">&lt;core:..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 1.57%)</title><rect x="78.9601%" y="517" width="1.5719%" height="15" fill="rgb(224,111,15)" fg:x="653" fg:w="13"/><text x="79.0351%" y="527.50">&lt;core:..</text></g><g><title>core::iter::traits::iterator::Iterator::find (13 samples, 1.57%)</title><rect x="78.9601%" y="501" width="1.5719%" height="15" fill="rgb(253,21,26)" fg:x="653" fg:w="13"/><text x="79.0351%" y="511.50">core::..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 1.57%)</title><rect x="78.9601%" y="485" width="1.5719%" height="15" fill="rgb(245,139,43)" fg:x="653" fg:w="13"/><text x="79.0351%" y="495.50">&lt;core:..</text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 1.57%)</title><rect x="78.9601%" y="469" width="1.5719%" height="15" fill="rgb(252,170,7)" fg:x="653" fg:w="13"/><text x="79.0351%" y="479.50">&lt;core:..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 1.57%)</title><rect x="78.9601%" y="453" width="1.5719%" height="15" fill="rgb(231,118,14)" fg:x="653" fg:w="13"/><text x="79.0351%" y="463.50">&lt;core:..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_try_fold (13 samples, 1.57%)</title><rect x="78.9601%" y="437" width="1.5719%" height="15" fill="rgb(238,83,0)" fg:x="653" fg:w="13"/><text x="79.0351%" y="447.50">core::..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 1.57%)</title><rect x="78.9601%" y="421" width="1.5719%" height="15" fill="rgb(221,39,39)" fg:x="653" fg:w="13"/><text x="79.0351%" y="431.50">&lt;core:..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (13 samples, 1.57%)</title><rect x="78.9601%" y="405" width="1.5719%" height="15" fill="rgb(222,119,46)" fg:x="653" fg:w="13"/><text x="79.0351%" y="415.50">&lt;core:..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 1.57%)</title><rect x="78.9601%" y="389" width="1.5719%" height="15" fill="rgb(222,165,49)" fg:x="653" fg:w="13"/><text x="79.0351%" y="399.50">core::..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_try_fold::flatten::_{{closure}} (13 samples, 1.57%)</title><rect x="78.9601%" y="373" width="1.5719%" height="15" fill="rgb(219,113,52)" fg:x="653" fg:w="13"/><text x="79.0351%" y="383.50">core::..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::_{{closure}} (6 samples, 0.73%)</title><rect x="79.8065%" y="357" width="0.7255%" height="15" fill="rgb(214,7,15)" fg:x="660" fg:w="6"/><text x="79.8815%" y="367.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.73%)</title><rect x="79.8065%" y="341" width="0.7255%" height="15" fill="rgb(235,32,4)" fg:x="660" fg:w="6"/><text x="79.8815%" y="351.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.24%)</title><rect x="80.2902%" y="325" width="0.2418%" height="15" fill="rgb(238,90,54)" fg:x="664" fg:w="2"/><text x="80.3652%" y="335.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (2 samples, 0.24%)</title><rect x="80.2902%" y="309" width="0.2418%" height="15" fill="rgb(213,208,19)" fg:x="664" fg:w="2"/><text x="80.3652%" y="319.50"></text></g><g><title>simbelmyne::board::Board::compute_checkers::_{{closure}} (1 samples, 0.12%)</title><rect x="80.4111%" y="293" width="0.1209%" height="15" fill="rgb(233,156,4)" fg:x="665" fg:w="1"/><text x="80.4861%" y="303.50"></text></g><g><title>&lt;simbelmyne::board::Color as core::cmp::PartialEq&gt;::eq (1 samples, 0.12%)</title><rect x="80.4111%" y="277" width="0.1209%" height="15" fill="rgb(207,194,5)" fg:x="665" fg:w="1"/><text x="80.4861%" y="287.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.36%)</title><rect x="80.8948%" y="437" width="0.3628%" height="15" fill="rgb(206,111,30)" fg:x="669" fg:w="3"/><text x="80.9698%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.36%)</title><rect x="80.8948%" y="421" width="0.3628%" height="15" fill="rgb(243,70,54)" fg:x="669" fg:w="3"/><text x="80.9698%" y="431.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (3 samples, 0.36%)</title><rect x="80.8948%" y="405" width="0.3628%" height="15" fill="rgb(242,28,8)" fg:x="669" fg:w="3"/><text x="80.9698%" y="415.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (3 samples, 0.36%)</title><rect x="80.8948%" y="389" width="0.3628%" height="15" fill="rgb(219,106,18)" fg:x="669" fg:w="3"/><text x="80.9698%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (3 samples, 0.36%)</title><rect x="80.8948%" y="373" width="0.3628%" height="15" fill="rgb(244,222,10)" fg:x="669" fg:w="3"/><text x="80.9698%" y="383.50"></text></g><g><title>core::ptr::read (3 samples, 0.36%)</title><rect x="80.8948%" y="357" width="0.3628%" height="15" fill="rgb(236,179,52)" fg:x="669" fg:w="3"/><text x="80.9698%" y="367.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (1 samples, 0.12%)</title><rect x="81.2576%" y="421" width="0.1209%" height="15" fill="rgb(213,23,39)" fg:x="672" fg:w="1"/><text x="81.3326%" y="431.50"></text></g><g><title>&lt;core::iter::sources::successors::Successors&lt;T,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="82.4667%" y="325" width="0.1209%" height="15" fill="rgb(238,48,10)" fg:x="682" fg:w="1"/><text x="82.5417%" y="335.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::visible_ray::_{{closure}} (1 samples, 0.12%)</title><rect x="82.4667%" y="309" width="0.1209%" height="15" fill="rgb(251,196,23)" fg:x="682" fg:w="1"/><text x="82.5417%" y="319.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::offset (1 samples, 0.12%)</title><rect x="82.4667%" y="293" width="0.1209%" height="15" fill="rgb(250,152,24)" fg:x="682" fg:w="1"/><text x="82.5417%" y="303.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::rank (1 samples, 0.12%)</title><rect x="82.4667%" y="277" width="0.1209%" height="15" fill="rgb(209,150,17)" fg:x="682" fg:w="1"/><text x="82.5417%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (1 samples, 0.12%)</title><rect x="82.4667%" y="261" width="0.1209%" height="15" fill="rgb(234,202,34)" fg:x="682" fg:w="1"/><text x="82.5417%" y="271.50"></text></g><g><title>&lt;u32 as core::ops::arith::Div&gt;::div (1 samples, 0.12%)</title><rect x="83.0713%" y="229" width="0.1209%" height="15" fill="rgb(253,148,53)" fg:x="687" fg:w="1"/><text x="83.1463%" y="239.50"></text></g><g><title>simbelmyne::board::Board::compute_pinrays (26 samples, 3.14%)</title><rect x="80.5320%" y="581" width="3.1439%" height="15" fill="rgb(218,129,16)" fg:x="666" fg:w="26"/><text x="80.6070%" y="591.50">simbelmyne::boa..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (26 samples, 3.14%)</title><rect x="80.5320%" y="565" width="3.1439%" height="15" fill="rgb(216,85,19)" fg:x="666" fg:w="26"/><text x="80.6070%" y="575.50">&lt;alloc::vec::Ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (26 samples, 3.14%)</title><rect x="80.5320%" y="549" width="3.1439%" height="15" fill="rgb(235,228,7)" fg:x="666" fg:w="26"/><text x="80.6070%" y="559.50">&lt;alloc::vec::Ve..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (23 samples, 2.78%)</title><rect x="80.8948%" y="533" width="2.7811%" height="15" fill="rgb(245,175,0)" fg:x="669" fg:w="23"/><text x="80.9698%" y="543.50">alloc::vec::V..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 2.78%)</title><rect x="80.8948%" y="517" width="2.7811%" height="15" fill="rgb(208,168,36)" fg:x="669" fg:w="23"/><text x="80.9698%" y="527.50">&lt;core::iter::..</text></g><g><title>core::iter::traits::iterator::Iterator::find (23 samples, 2.78%)</title><rect x="80.8948%" y="501" width="2.7811%" height="15" fill="rgb(246,171,24)" fg:x="669" fg:w="23"/><text x="80.9698%" y="511.50">core::iter::t..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (23 samples, 2.78%)</title><rect x="80.8948%" y="485" width="2.7811%" height="15" fill="rgb(215,142,24)" fg:x="669" fg:w="23"/><text x="80.9698%" y="495.50">&lt;core::iter::..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (23 samples, 2.78%)</title><rect x="80.8948%" y="469" width="2.7811%" height="15" fill="rgb(250,187,7)" fg:x="669" fg:w="23"/><text x="80.9698%" y="479.50">&lt;core::iter::..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (23 samples, 2.78%)</title><rect x="80.8948%" y="453" width="2.7811%" height="15" fill="rgb(228,66,33)" fg:x="669" fg:w="23"/><text x="80.9698%" y="463.50">core::iter::t..</text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (20 samples, 2.42%)</title><rect x="81.2576%" y="437" width="2.4184%" height="15" fill="rgb(234,215,21)" fg:x="672" fg:w="20"/><text x="81.3326%" y="447.50">core::iter:..</text></g><g><title>simbelmyne::board::Board::compute_pinrays::_{{closure}} (19 samples, 2.30%)</title><rect x="81.3785%" y="421" width="2.2975%" height="15" fill="rgb(222,191,20)" fg:x="673" fg:w="19"/><text x="81.4535%" y="431.50">simbelmyne..</text></g><g><title>simbelmyne::bitboard::Bitboard::visible_ray (19 samples, 2.30%)</title><rect x="81.3785%" y="405" width="2.2975%" height="15" fill="rgb(245,79,54)" fg:x="673" fg:w="19"/><text x="81.4535%" y="415.50">simbelmyne..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (19 samples, 2.30%)</title><rect x="81.3785%" y="389" width="2.2975%" height="15" fill="rgb(240,10,37)" fg:x="673" fg:w="19"/><text x="81.4535%" y="399.50">core::iter..</text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::collect::FromIterator&lt;simbelmyne::bitboard::Bitboard&gt;&gt;::from_iter (19 samples, 2.30%)</title><rect x="81.3785%" y="373" width="2.2975%" height="15" fill="rgb(214,192,32)" fg:x="673" fg:w="19"/><text x="81.4535%" y="383.50">&lt;simbelmyn..</text></g><g><title>&lt;itertools::take_while_inclusive::TakeWhileInclusive&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 2.30%)</title><rect x="81.3785%" y="357" width="2.2975%" height="15" fill="rgb(209,36,54)" fg:x="673" fg:w="19"/><text x="81.4535%" y="367.50">&lt;itertools..</text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 1.93%)</title><rect x="81.7412%" y="341" width="1.9347%" height="15" fill="rgb(220,10,11)" fg:x="676" fg:w="16"/><text x="81.8162%" y="351.50">&lt;core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::nth (9 samples, 1.09%)</title><rect x="82.5877%" y="325" width="1.0883%" height="15" fill="rgb(221,106,17)" fg:x="683" fg:w="9"/><text x="82.6627%" y="335.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (8 samples, 0.97%)</title><rect x="82.7086%" y="309" width="0.9674%" height="15" fill="rgb(251,142,44)" fg:x="684" fg:w="8"/><text x="82.7836%" y="319.50">cor..</text></g><g><title>&lt;core::iter::sources::successors::Successors&lt;T,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.97%)</title><rect x="82.7086%" y="293" width="0.9674%" height="15" fill="rgb(238,13,15)" fg:x="684" fg:w="8"/><text x="82.7836%" y="303.50">&lt;co..</text></g><g><title>simbelmyne::bitboard::Bitboard::visible_ray::_{{closure}} (8 samples, 0.97%)</title><rect x="82.7086%" y="277" width="0.9674%" height="15" fill="rgb(208,107,27)" fg:x="684" fg:w="8"/><text x="82.7836%" y="287.50">sim..</text></g><g><title>simbelmyne::bitboard::Bitboard::offset (8 samples, 0.97%)</title><rect x="82.7086%" y="261" width="0.9674%" height="15" fill="rgb(205,136,37)" fg:x="684" fg:w="8"/><text x="82.7836%" y="271.50">sim..</text></g><g><title>simbelmyne::bitboard::Bitboard::rank (5 samples, 0.60%)</title><rect x="83.0713%" y="245" width="0.6046%" height="15" fill="rgb(250,205,27)" fg:x="687" fg:w="5"/><text x="83.1463%" y="255.50">s..</text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (4 samples, 0.48%)</title><rect x="83.1923%" y="229" width="0.4837%" height="15" fill="rgb(210,80,43)" fg:x="688" fg:w="4"/><text x="83.2673%" y="239.50"></text></g><g><title>simbelmyne::board::Board::get_at (4 samples, 0.48%)</title><rect x="83.6759%" y="581" width="0.4837%" height="15" fill="rgb(247,160,36)" fg:x="692" fg:w="4"/><text x="83.7509%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (4 samples, 0.48%)</title><rect x="83.6759%" y="565" width="0.4837%" height="15" fill="rgb(234,13,49)" fg:x="692" fg:w="4"/><text x="83.7509%" y="575.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.60%)</title><rect x="84.1596%" y="389" width="0.6046%" height="15" fill="rgb(234,122,0)" fg:x="696" fg:w="5"/><text x="84.2346%" y="399.50">&lt;..</text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (5 samples, 0.60%)</title><rect x="84.1596%" y="373" width="0.6046%" height="15" fill="rgb(207,146,38)" fg:x="696" fg:w="5"/><text x="84.2346%" y="383.50">c..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (5 samples, 0.60%)</title><rect x="84.1596%" y="357" width="0.6046%" height="15" fill="rgb(207,177,25)" fg:x="696" fg:w="5"/><text x="84.2346%" y="367.50">c..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (5 samples, 0.60%)</title><rect x="84.1596%" y="341" width="0.6046%" height="15" fill="rgb(211,178,42)" fg:x="696" fg:w="5"/><text x="84.2346%" y="351.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (19 samples, 2.30%)</title><rect x="84.1596%" y="565" width="2.2975%" height="15" fill="rgb(230,69,54)" fg:x="696" fg:w="19"/><text x="84.2346%" y="575.50">core::iter..</text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::collect::FromIterator&lt;simbelmyne::bitboard::Bitboard&gt;&gt;::from_iter (19 samples, 2.30%)</title><rect x="84.1596%" y="549" width="2.2975%" height="15" fill="rgb(214,135,41)" fg:x="696" fg:w="19"/><text x="84.2346%" y="559.50">&lt;simbelmyn..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 2.30%)</title><rect x="84.1596%" y="533" width="2.2975%" height="15" fill="rgb(237,67,25)" fg:x="696" fg:w="19"/><text x="84.2346%" y="543.50">&lt;core::ite..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 2.30%)</title><rect x="84.1596%" y="517" width="2.2975%" height="15" fill="rgb(222,189,50)" fg:x="696" fg:w="19"/><text x="84.2346%" y="527.50">&lt;core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::find (19 samples, 2.30%)</title><rect x="84.1596%" y="501" width="2.2975%" height="15" fill="rgb(245,148,34)" fg:x="696" fg:w="19"/><text x="84.2346%" y="511.50">core::iter..</text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (19 samples, 2.30%)</title><rect x="84.1596%" y="485" width="2.2975%" height="15" fill="rgb(222,29,6)" fg:x="696" fg:w="19"/><text x="84.2346%" y="495.50">&lt;core::ite..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (19 samples, 2.30%)</title><rect x="84.1596%" y="469" width="2.2975%" height="15" fill="rgb(221,189,43)" fg:x="696" fg:w="19"/><text x="84.2346%" y="479.50">&lt;core::ite..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_try_fold (19 samples, 2.30%)</title><rect x="84.1596%" y="453" width="2.2975%" height="15" fill="rgb(207,36,27)" fg:x="696" fg:w="19"/><text x="84.2346%" y="463.50">core::iter..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (19 samples, 2.30%)</title><rect x="84.1596%" y="437" width="2.2975%" height="15" fill="rgb(217,90,24)" fg:x="696" fg:w="19"/><text x="84.2346%" y="447.50">&lt;core::ite..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (19 samples, 2.30%)</title><rect x="84.1596%" y="421" width="2.2975%" height="15" fill="rgb(224,66,35)" fg:x="696" fg:w="19"/><text x="84.2346%" y="431.50">&lt;core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (19 samples, 2.30%)</title><rect x="84.1596%" y="405" width="2.2975%" height="15" fill="rgb(221,13,50)" fg:x="696" fg:w="19"/><text x="84.2346%" y="415.50">core::iter..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_try_fold::flatten::_{{closure}} (14 samples, 1.69%)</title><rect x="84.7642%" y="389" width="1.6929%" height="15" fill="rgb(236,68,49)" fg:x="701" fg:w="14"/><text x="84.8392%" y="399.50">core::i..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::_{{closure}} (5 samples, 0.60%)</title><rect x="85.8525%" y="373" width="0.6046%" height="15" fill="rgb(229,146,28)" fg:x="710" fg:w="5"/><text x="85.9275%" y="383.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.60%)</title><rect x="85.8525%" y="357" width="0.6046%" height="15" fill="rgb(225,31,38)" fg:x="710" fg:w="5"/><text x="85.9275%" y="367.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.12%)</title><rect x="86.3362%" y="341" width="0.1209%" height="15" fill="rgb(250,208,3)" fg:x="714" fg:w="1"/><text x="86.4112%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (1 samples, 0.12%)</title><rect x="86.3362%" y="325" width="0.1209%" height="15" fill="rgb(246,54,23)" fg:x="714" fg:w="1"/><text x="86.4112%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.12%)</title><rect x="86.3362%" y="309" width="0.1209%" height="15" fill="rgb(243,76,11)" fg:x="714" fg:w="1"/><text x="86.4112%" y="319.50"></text></g><g><title>simbelmyne::board::Board::king_danger_squares::_{{closure}} (1 samples, 0.12%)</title><rect x="86.3362%" y="293" width="0.1209%" height="15" fill="rgb(245,21,50)" fg:x="714" fg:w="1"/><text x="86.4112%" y="303.50"></text></g><g><title>simbelmyne::board::Piece::color (1 samples, 0.12%)</title><rect x="86.3362%" y="277" width="0.1209%" height="15" fill="rgb(228,9,43)" fg:x="714" fg:w="1"/><text x="86.4112%" y="287.50"></text></g><g><title>simbelmyne::board::Board::king_danger_squares (20 samples, 2.42%)</title><rect x="84.1596%" y="581" width="2.4184%" height="15" fill="rgb(208,100,47)" fg:x="696" fg:w="20"/><text x="84.2346%" y="591.50">simbelmyne:..</text></g><g><title>simbelmyne::bitboard::Bitboard::remove (1 samples, 0.12%)</title><rect x="86.4571%" y="565" width="0.1209%" height="15" fill="rgb(232,26,8)" fg:x="715" fg:w="1"/><text x="86.5321%" y="575.50"></text></g><g><title>simbelmyne::board::Color::opp (1 samples, 0.12%)</title><rect x="86.5780%" y="581" width="0.1209%" height="15" fill="rgb(216,166,38)" fg:x="716" fg:w="1"/><text x="86.6530%" y="591.50"></text></g><g><title>simbelmyne::board::Piece::is_pawn (3 samples, 0.36%)</title><rect x="86.6989%" y="581" width="0.3628%" height="15" fill="rgb(251,202,51)" fg:x="717" fg:w="3"/><text x="86.7739%" y="591.50"></text></g><g><title>&lt;simbelmyne::board::PieceType as core::cmp::PartialEq&gt;::eq (3 samples, 0.36%)</title><rect x="86.6989%" y="565" width="0.3628%" height="15" fill="rgb(254,216,34)" fg:x="717" fg:w="3"/><text x="86.7739%" y="575.50"></text></g><g><title>simbelmyne::board::Square::is_double_push (3 samples, 0.36%)</title><rect x="87.0617%" y="581" width="0.3628%" height="15" fill="rgb(251,32,27)" fg:x="720" fg:w="3"/><text x="87.1367%" y="591.50"></text></g><g><title>simbelmyne::movegen::castling::CastlingRights::get_available (2 samples, 0.24%)</title><rect x="87.4244%" y="581" width="0.2418%" height="15" fill="rgb(208,127,28)" fg:x="723" fg:w="2"/><text x="87.4994%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.24%)</title><rect x="87.4244%" y="565" width="0.2418%" height="15" fill="rgb(224,137,22)" fg:x="723" fg:w="2"/><text x="87.4994%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.24%)</title><rect x="87.4244%" y="549" width="0.2418%" height="15" fill="rgb(254,70,32)" fg:x="723" fg:w="2"/><text x="87.4994%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.24%)</title><rect x="87.4244%" y="533" width="0.2418%" height="15" fill="rgb(229,75,37)" fg:x="723" fg:w="2"/><text x="87.4994%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.24%)</title><rect x="87.4244%" y="517" width="0.2418%" height="15" fill="rgb(252,64,23)" fg:x="723" fg:w="2"/><text x="87.4994%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.24%)</title><rect x="87.4244%" y="501" width="0.2418%" height="15" fill="rgb(232,162,48)" fg:x="723" fg:w="2"/><text x="87.4994%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.24%)</title><rect x="87.4244%" y="485" width="0.2418%" height="15" fill="rgb(246,160,12)" fg:x="723" fg:w="2"/><text x="87.4994%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.24%)</title><rect x="87.4244%" y="469" width="0.2418%" height="15" fill="rgb(247,166,0)" fg:x="723" fg:w="2"/><text x="87.4994%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.24%)</title><rect x="87.4244%" y="453" width="0.2418%" height="15" fill="rgb(249,219,21)" fg:x="723" fg:w="2"/><text x="87.4994%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.24%)</title><rect x="87.4244%" y="437" width="0.2418%" height="15" fill="rgb(205,209,3)" fg:x="723" fg:w="2"/><text x="87.4994%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.24%)</title><rect x="87.4244%" y="421" width="0.2418%" height="15" fill="rgb(243,44,1)" fg:x="723" fg:w="2"/><text x="87.4994%" y="431.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.24%)</title><rect x="87.4244%" y="405" width="0.2418%" height="15" fill="rgb(206,159,16)" fg:x="723" fg:w="2"/><text x="87.4994%" y="415.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.24%)</title><rect x="87.4244%" y="389" width="0.2418%" height="15" fill="rgb(244,77,30)" fg:x="723" fg:w="2"/><text x="87.4994%" y="399.50"></text></g><g><title>simbelmyne::movegen::moves::&lt;impl simbelmyne::board::Piece&gt;::visible_rays (1 samples, 0.12%)</title><rect x="87.6663%" y="581" width="0.1209%" height="15" fill="rgb(218,69,12)" fg:x="725" fg:w="1"/><text x="87.7413%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.12%)</title><rect x="87.6663%" y="565" width="0.1209%" height="15" fill="rgb(212,87,7)" fg:x="725" fg:w="1"/><text x="87.7413%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="87.6663%" y="549" width="0.1209%" height="15" fill="rgb(245,114,25)" fg:x="725" fg:w="1"/><text x="87.7413%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="87.6663%" y="533" width="0.1209%" height="15" fill="rgb(210,61,42)" fg:x="725" fg:w="1"/><text x="87.7413%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="87.6663%" y="517" width="0.1209%" height="15" fill="rgb(211,52,33)" fg:x="725" fg:w="1"/><text x="87.7413%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.12%)</title><rect x="87.6663%" y="501" width="0.1209%" height="15" fill="rgb(234,58,33)" fg:x="725" fg:w="1"/><text x="87.7413%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.12%)</title><rect x="87.6663%" y="485" width="0.1209%" height="15" fill="rgb(220,115,36)" fg:x="725" fg:w="1"/><text x="87.7413%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.12%)</title><rect x="87.6663%" y="469" width="0.1209%" height="15" fill="rgb(243,153,54)" fg:x="725" fg:w="1"/><text x="87.7413%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.12%)</title><rect x="87.6663%" y="453" width="0.1209%" height="15" fill="rgb(251,47,18)" fg:x="725" fg:w="1"/><text x="87.7413%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.12%)</title><rect x="87.6663%" y="437" width="0.1209%" height="15" fill="rgb(242,102,42)" fg:x="725" fg:w="1"/><text x="87.7413%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.12%)</title><rect x="87.6663%" y="421" width="0.1209%" height="15" fill="rgb(234,31,38)" fg:x="725" fg:w="1"/><text x="87.7413%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.12%)</title><rect x="87.6663%" y="405" width="0.1209%" height="15" fill="rgb(221,117,51)" fg:x="725" fg:w="1"/><text x="87.7413%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (1 samples, 0.12%)</title><rect x="87.6663%" y="389" width="0.1209%" height="15" fill="rgb(212,20,18)" fg:x="725" fg:w="1"/><text x="87.7413%" y="399.50"></text></g><g><title>core::ptr::write (1 samples, 0.12%)</title><rect x="87.6663%" y="373" width="0.1209%" height="15" fill="rgb(245,133,36)" fg:x="725" fg:w="1"/><text x="87.7413%" y="383.50"></text></g><g><title>simbelmyne::bench::perft::perft (145 samples, 17.53%)</title><rect x="70.4958%" y="613" width="17.5333%" height="15" fill="rgb(212,6,19)" fg:x="583" fg:w="145"/><text x="70.5708%" y="623.50">simbelmyne::bench::perft::perft</text></g><g><title>simbelmyne::movegen::legal_moves::&lt;impl simbelmyne::board::Board&gt;::legal_moves (144 samples, 17.41%)</title><rect x="70.6167%" y="597" width="17.4123%" height="15" fill="rgb(218,1,36)" fg:x="584" fg:w="144"/><text x="70.6917%" y="607.50">simbelmyne::movegen::legal_moves::&lt;impl simbelmyne::board::Board&gt;::legal_moves</text></g><g><title>simbelmyne::movegen::moves::Move::new (2 samples, 0.24%)</title><rect x="87.7872%" y="581" width="0.2418%" height="15" fill="rgb(246,84,54)" fg:x="726" fg:w="2"/><text x="87.8622%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 1.21%)</title><rect x="88.0290%" y="341" width="1.2092%" height="15" fill="rgb(242,110,6)" fg:x="728" fg:w="10"/><text x="88.1040%" y="351.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::find (10 samples, 1.21%)</title><rect x="88.0290%" y="325" width="1.2092%" height="15" fill="rgb(214,47,5)" fg:x="728" fg:w="10"/><text x="88.1040%" y="335.50">core..</text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 1.21%)</title><rect x="88.0290%" y="309" width="1.2092%" height="15" fill="rgb(218,159,25)" fg:x="728" fg:w="10"/><text x="88.1040%" y="319.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 1.21%)</title><rect x="88.0290%" y="293" width="1.2092%" height="15" fill="rgb(215,211,28)" fg:x="728" fg:w="10"/><text x="88.1040%" y="303.50">&lt;cor..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_try_fold (10 samples, 1.21%)</title><rect x="88.0290%" y="277" width="1.2092%" height="15" fill="rgb(238,59,32)" fg:x="728" fg:w="10"/><text x="88.1040%" y="287.50">core..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 1.21%)</title><rect x="88.0290%" y="261" width="1.2092%" height="15" fill="rgb(226,82,3)" fg:x="728" fg:w="10"/><text x="88.1040%" y="271.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (10 samples, 1.21%)</title><rect x="88.0290%" y="245" width="1.2092%" height="15" fill="rgb(240,164,32)" fg:x="728" fg:w="10"/><text x="88.1040%" y="255.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 1.21%)</title><rect x="88.0290%" y="229" width="1.2092%" height="15" fill="rgb(232,46,7)" fg:x="728" fg:w="10"/><text x="88.1040%" y="239.50">core..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_try_fold::flatten::_{{closure}} (10 samples, 1.21%)</title><rect x="88.0290%" y="213" width="1.2092%" height="15" fill="rgb(229,129,53)" fg:x="728" fg:w="10"/><text x="88.1040%" y="223.50">core..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::_{{closure}} (10 samples, 1.21%)</title><rect x="88.0290%" y="197" width="1.2092%" height="15" fill="rgb(234,188,29)" fg:x="728" fg:w="10"/><text x="88.1040%" y="207.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 1.21%)</title><rect x="88.0290%" y="181" width="1.2092%" height="15" fill="rgb(246,141,4)" fg:x="728" fg:w="10"/><text x="88.1040%" y="191.50">core..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.12%)</title><rect x="89.1173%" y="165" width="0.1209%" height="15" fill="rgb(229,23,39)" fg:x="737" fg:w="1"/><text x="89.1923%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (1 samples, 0.12%)</title><rect x="89.1173%" y="149" width="0.1209%" height="15" fill="rgb(206,12,3)" fg:x="737" fg:w="1"/><text x="89.1923%" y="159.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.12%)</title><rect x="89.1173%" y="133" width="0.1209%" height="15" fill="rgb(252,226,20)" fg:x="737" fg:w="1"/><text x="89.1923%" y="143.50"></text></g><g><title>simbelmyne::board::Board::compute_attacked_by::_{{closure}} (1 samples, 0.12%)</title><rect x="89.1173%" y="117" width="0.1209%" height="15" fill="rgb(216,123,35)" fg:x="737" fg:w="1"/><text x="89.1923%" y="127.50"></text></g><g><title>&lt;simbelmyne::board::Color as core::cmp::PartialEq&gt;::eq (1 samples, 0.12%)</title><rect x="89.1173%" y="101" width="0.1209%" height="15" fill="rgb(212,68,40)" fg:x="737" fg:w="1"/><text x="89.1923%" y="111.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.24%)</title><rect x="89.9637%" y="213" width="0.2418%" height="15" fill="rgb(254,125,32)" fg:x="744" fg:w="2"/><text x="90.0387%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (2 samples, 0.24%)</title><rect x="89.9637%" y="197" width="0.2418%" height="15" fill="rgb(253,97,22)" fg:x="744" fg:w="2"/><text x="90.0387%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.24%)</title><rect x="89.9637%" y="181" width="0.2418%" height="15" fill="rgb(241,101,14)" fg:x="744" fg:w="2"/><text x="90.0387%" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.24%)</title><rect x="89.9637%" y="165" width="0.2418%" height="15" fill="rgb(238,103,29)" fg:x="744" fg:w="2"/><text x="90.0387%" y="175.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.24%)</title><rect x="89.9637%" y="149" width="0.2418%" height="15" fill="rgb(233,195,47)" fg:x="744" fg:w="2"/><text x="90.0387%" y="159.50"></text></g><g><title>simbelmyne::movegen::moves::_&lt;impl simbelmyne::board::Piece&gt;::visible_squares::_{{closure}} (2 samples, 0.24%)</title><rect x="89.9637%" y="133" width="0.2418%" height="15" fill="rgb(246,218,30)" fg:x="744" fg:w="2"/><text x="90.0387%" y="143.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::offset (2 samples, 0.24%)</title><rect x="89.9637%" y="117" width="0.2418%" height="15" fill="rgb(219,145,47)" fg:x="744" fg:w="2"/><text x="90.0387%" y="127.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add_signed (2 samples, 0.24%)</title><rect x="89.9637%" y="101" width="0.2418%" height="15" fill="rgb(243,12,26)" fg:x="744" fg:w="2"/><text x="90.0387%" y="111.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add_signed (1 samples, 0.12%)</title><rect x="90.0846%" y="85" width="0.1209%" height="15" fill="rgb(214,87,16)" fg:x="745" fg:w="1"/><text x="90.1596%" y="95.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.12%)</title><rect x="90.0846%" y="69" width="0.1209%" height="15" fill="rgb(208,99,42)" fg:x="745" fg:w="1"/><text x="90.1596%" y="79.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.48%)</title><rect x="89.9637%" y="245" width="0.4837%" height="15" fill="rgb(253,99,2)" fg:x="744" fg:w="4"/><text x="90.0387%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.48%)</title><rect x="89.9637%" y="229" width="0.4837%" height="15" fill="rgb(220,168,23)" fg:x="744" fg:w="4"/><text x="90.0387%" y="239.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (2 samples, 0.24%)</title><rect x="90.2056%" y="213" width="0.2418%" height="15" fill="rgb(242,38,24)" fg:x="746" fg:w="2"/><text x="90.2806%" y="223.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.12%)</title><rect x="90.3265%" y="197" width="0.1209%" height="15" fill="rgb(225,182,9)" fg:x="747" fg:w="1"/><text x="90.4015%" y="207.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.12%)</title><rect x="90.3265%" y="181" width="0.1209%" height="15" fill="rgb(243,178,37)" fg:x="747" fg:w="1"/><text x="90.4015%" y="191.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.12%)</title><rect x="90.8102%" y="197" width="0.1209%" height="15" fill="rgb(232,139,19)" fg:x="751" fg:w="1"/><text x="90.8852%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (17 samples, 2.06%)</title><rect x="89.8428%" y="277" width="2.0556%" height="15" fill="rgb(225,201,24)" fg:x="743" fg:w="17"/><text x="89.9178%" y="287.50">core::ite..</text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::collect::FromIterator&lt;simbelmyne::bitboard::Bitboard&gt;&gt;::from_iter (17 samples, 2.06%)</title><rect x="89.8428%" y="261" width="2.0556%" height="15" fill="rgb(221,47,46)" fg:x="743" fg:w="17"/><text x="89.9178%" y="271.50">&lt;simbelmy..</text></g><g><title>&lt;itertools::take_while_inclusive::TakeWhileInclusive&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 1.45%)</title><rect x="90.4474%" y="245" width="1.4510%" height="15" fill="rgb(249,23,13)" fg:x="748" fg:w="12"/><text x="90.5224%" y="255.50">&lt;itert..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 1.45%)</title><rect x="90.4474%" y="229" width="1.4510%" height="15" fill="rgb(219,9,5)" fg:x="748" fg:w="12"/><text x="90.5224%" y="239.50">&lt;core:..</text></g><g><title>&lt;core::iter::sources::successors::Successors&lt;T,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 1.45%)</title><rect x="90.4474%" y="213" width="1.4510%" height="15" fill="rgb(254,171,16)" fg:x="748" fg:w="12"/><text x="90.5224%" y="223.50">&lt;core:..</text></g><g><title>simbelmyne::movegen::moves::_&lt;impl simbelmyne::board::Piece&gt;::visible_squares::_{{closure}} (8 samples, 0.97%)</title><rect x="90.9311%" y="197" width="0.9674%" height="15" fill="rgb(230,171,20)" fg:x="752" fg:w="8"/><text x="91.0061%" y="207.50">sim..</text></g><g><title>simbelmyne::bitboard::Bitboard::offset (8 samples, 0.97%)</title><rect x="90.9311%" y="181" width="0.9674%" height="15" fill="rgb(210,71,41)" fg:x="752" fg:w="8"/><text x="91.0061%" y="191.50">sim..</text></g><g><title>simbelmyne::bitboard::Bitboard::rank (3 samples, 0.36%)</title><rect x="91.5357%" y="165" width="0.3628%" height="15" fill="rgb(206,173,20)" fg:x="757" fg:w="3"/><text x="91.6107%" y="175.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (3 samples, 0.36%)</title><rect x="91.5357%" y="149" width="0.3628%" height="15" fill="rgb(233,88,34)" fg:x="757" fg:w="3"/><text x="91.6107%" y="159.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add_signed (2 samples, 0.24%)</title><rect x="92.2612%" y="261" width="0.2418%" height="15" fill="rgb(223,209,46)" fg:x="763" fg:w="2"/><text x="92.3362%" y="271.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add_signed (1 samples, 0.12%)</title><rect x="92.3821%" y="245" width="0.1209%" height="15" fill="rgb(250,43,18)" fg:x="764" fg:w="1"/><text x="92.4571%" y="255.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::offset (7 samples, 0.85%)</title><rect x="91.8984%" y="277" width="0.8464%" height="15" fill="rgb(208,13,10)" fg:x="760" fg:w="7"/><text x="91.9734%" y="287.50">si..</text></g><g><title>simbelmyne::bitboard::Bitboard::new (2 samples, 0.24%)</title><rect x="92.5030%" y="261" width="0.2418%" height="15" fill="rgb(212,200,36)" fg:x="765" fg:w="2"/><text x="92.5780%" y="271.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (2 samples, 0.24%)</title><rect x="92.5030%" y="245" width="0.2418%" height="15" fill="rgb(225,90,30)" fg:x="765" fg:w="2"/><text x="92.5780%" y="255.50"></text></g><g><title>simbelmyne::board::Board::attacked_by (41 samples, 4.96%)</title><rect x="88.0290%" y="421" width="4.9577%" height="15" fill="rgb(236,182,39)" fg:x="728" fg:w="41"/><text x="88.1040%" y="431.50">simbelmyne::board::Board::..</text></g><g><title>simbelmyne::board::Board::compute_attacked_by (41 samples, 4.96%)</title><rect x="88.0290%" y="405" width="4.9577%" height="15" fill="rgb(212,144,35)" fg:x="728" fg:w="41"/><text x="88.1040%" y="415.50">simbelmyne::board::Board::..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (41 samples, 4.96%)</title><rect x="88.0290%" y="389" width="4.9577%" height="15" fill="rgb(228,63,44)" fg:x="728" fg:w="41"/><text x="88.1040%" y="399.50">core::iter::traits::iterat..</text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::collect::FromIterator&lt;simbelmyne::bitboard::Bitboard&gt;&gt;::from_iter (41 samples, 4.96%)</title><rect x="88.0290%" y="373" width="4.9577%" height="15" fill="rgb(228,109,6)" fg:x="728" fg:w="41"/><text x="88.1040%" y="383.50">&lt;simbelmyne::bitboard::Bit..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 4.96%)</title><rect x="88.0290%" y="357" width="4.9577%" height="15" fill="rgb(238,117,24)" fg:x="728" fg:w="41"/><text x="88.1040%" y="367.50">&lt;core::iter::adapters::map..</text></g><g><title>core::option::Option&lt;T&gt;::map (31 samples, 3.75%)</title><rect x="89.2382%" y="341" width="3.7485%" height="15" fill="rgb(242,26,26)" fg:x="738" fg:w="31"/><text x="89.3132%" y="351.50">core::option::Optio..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (31 samples, 3.75%)</title><rect x="89.2382%" y="325" width="3.7485%" height="15" fill="rgb(221,92,48)" fg:x="738" fg:w="31"/><text x="89.3132%" y="335.50">core::ops::function..</text></g><g><title>simbelmyne::board::Board::compute_attacked_by::_{{closure}} (31 samples, 3.75%)</title><rect x="89.2382%" y="309" width="3.7485%" height="15" fill="rgb(209,209,32)" fg:x="738" fg:w="31"/><text x="89.3132%" y="319.50">simbelmyne::board::..</text></g><g><title>simbelmyne::movegen::moves::&lt;impl simbelmyne::board::Piece&gt;::visible_squares (31 samples, 3.75%)</title><rect x="89.2382%" y="293" width="3.7485%" height="15" fill="rgb(221,70,22)" fg:x="738" fg:w="31"/><text x="89.3132%" y="303.50">simbelmyne::movegen..</text></g><g><title>simbelmyne::movegen::moves::&lt;impl simbelmyne::board::Piece&gt;::range (2 samples, 0.24%)</title><rect x="92.7449%" y="277" width="0.2418%" height="15" fill="rgb(248,145,5)" fg:x="767" fg:w="2"/><text x="92.8199%" y="287.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::on_pawn_rank (1 samples, 0.12%)</title><rect x="92.8658%" y="261" width="0.1209%" height="15" fill="rgb(226,116,26)" fg:x="768" fg:w="1"/><text x="92.9408%" y="271.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::contains (1 samples, 0.12%)</title><rect x="92.8658%" y="245" width="0.1209%" height="15" fill="rgb(244,5,17)" fg:x="768" fg:w="1"/><text x="92.9408%" y="255.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::cmp::PartialEq&gt;::eq (1 samples, 0.12%)</title><rect x="92.8658%" y="229" width="0.1209%" height="15" fill="rgb(252,159,33)" fg:x="768" fg:w="1"/><text x="92.9408%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (42 samples, 5.08%)</title><rect x="88.0290%" y="597" width="5.0786%" height="15" fill="rgb(206,71,0)" fg:x="728" fg:w="42"/><text x="88.1040%" y="607.50">&lt;alloc::vec::Vec&lt;T,A&gt; as c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (42 samples, 5.08%)</title><rect x="88.0290%" y="581" width="5.0786%" height="15" fill="rgb(233,118,54)" fg:x="728" fg:w="42"/><text x="88.1040%" y="591.50">&lt;alloc::vec::Vec&lt;T,A&gt; as a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (42 samples, 5.08%)</title><rect x="88.0290%" y="565" width="5.0786%" height="15" fill="rgb(234,83,48)" fg:x="728" fg:w="42"/><text x="88.1040%" y="575.50">alloc::vec::Vec&lt;T,A&gt;::exte..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 5.08%)</title><rect x="88.0290%" y="549" width="5.0786%" height="15" fill="rgb(228,3,54)" fg:x="728" fg:w="42"/><text x="88.1040%" y="559.50">&lt;core::iter::adapters::map..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 5.08%)</title><rect x="88.0290%" y="533" width="5.0786%" height="15" fill="rgb(226,155,13)" fg:x="728" fg:w="42"/><text x="88.1040%" y="543.50">&lt;core::iter::adapters::fil..</text></g><g><title>core::iter::traits::iterator::Iterator::find (42 samples, 5.08%)</title><rect x="88.0290%" y="517" width="5.0786%" height="15" fill="rgb(241,28,37)" fg:x="728" fg:w="42"/><text x="88.1040%" y="527.50">core::iter::traits::iterat..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (42 samples, 5.08%)</title><rect x="88.0290%" y="501" width="5.0786%" height="15" fill="rgb(233,93,10)" fg:x="728" fg:w="42"/><text x="88.1040%" y="511.50">core::iter::traits::iterat..</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (42 samples, 5.08%)</title><rect x="88.0290%" y="485" width="5.0786%" height="15" fill="rgb(225,113,19)" fg:x="728" fg:w="42"/><text x="88.1040%" y="495.50">core::iter::traits::iterat..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (42 samples, 5.08%)</title><rect x="88.0290%" y="469" width="5.0786%" height="15" fill="rgb(241,2,18)" fg:x="728" fg:w="42"/><text x="88.1040%" y="479.50">core::ops::function::impls..</text></g><g><title>simbelmyne::movegen::legal_moves::_&lt;impl simbelmyne::board::Board&gt;::legal_moves::_{{closure}} (42 samples, 5.08%)</title><rect x="88.0290%" y="453" width="5.0786%" height="15" fill="rgb(228,207,21)" fg:x="728" fg:w="42"/><text x="88.1040%" y="463.50">simbelmyne::movegen::legal..</text></g><g><title>simbelmyne::movegen::castling::CastleType::is_allowed (42 samples, 5.08%)</title><rect x="88.0290%" y="437" width="5.0786%" height="15" fill="rgb(213,211,35)" fg:x="728" fg:w="42"/><text x="88.1040%" y="447.50">simbelmyne::movegen::castl..</text></g><g><title>simbelmyne::movegen::castling::CastleType::attackable_squares (1 samples, 0.12%)</title><rect x="92.9867%" y="421" width="0.1209%" height="15" fill="rgb(209,83,10)" fg:x="769" fg:w="1"/><text x="93.0617%" y="431.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="93.1076%" y="597" width="0.1209%" height="15" fill="rgb(209,164,1)" fg:x="770" fg:w="1"/><text x="93.1826%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.24%)</title><rect x="93.2285%" y="597" width="0.2418%" height="15" fill="rgb(213,184,43)" fg:x="771" fg:w="2"/><text x="93.3035%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.24%)</title><rect x="93.2285%" y="581" width="0.2418%" height="15" fill="rgb(231,61,34)" fg:x="771" fg:w="2"/><text x="93.3035%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.24%)</title><rect x="93.2285%" y="565" width="0.2418%" height="15" fill="rgb(235,75,3)" fg:x="771" fg:w="2"/><text x="93.3035%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.24%)</title><rect x="93.2285%" y="549" width="0.2418%" height="15" fill="rgb(220,106,47)" fg:x="771" fg:w="2"/><text x="93.3035%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.12%)</title><rect x="93.3495%" y="533" width="0.1209%" height="15" fill="rgb(210,196,33)" fg:x="772" fg:w="1"/><text x="93.4245%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.12%)</title><rect x="93.3495%" y="517" width="0.1209%" height="15" fill="rgb(229,154,42)" fg:x="772" fg:w="1"/><text x="93.4245%" y="527.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.12%)</title><rect x="93.3495%" y="501" width="0.1209%" height="15" fill="rgb(228,114,26)" fg:x="772" fg:w="1"/><text x="93.4245%" y="511.50"></text></g><g><title>__rg_realloc (1 samples, 0.12%)</title><rect x="93.3495%" y="485" width="0.1209%" height="15" fill="rgb(208,144,1)" fg:x="772" fg:w="1"/><text x="93.4245%" y="495.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (1 samples, 0.12%)</title><rect x="93.3495%" y="469" width="0.1209%" height="15" fill="rgb(239,112,37)" fg:x="772" fg:w="1"/><text x="93.4245%" y="479.50"></text></g><g><title>do_rallocx (1 samples, 0.12%)</title><rect x="93.3495%" y="453" width="0.1209%" height="15" fill="rgb(210,96,50)" fg:x="772" fg:w="1"/><text x="93.4245%" y="463.50"></text></g><g><title>aligned_usize_get (1 samples, 0.12%)</title><rect x="93.3495%" y="437" width="0.1209%" height="15" fill="rgb(222,178,2)" fg:x="772" fg:w="1"/><text x="93.4245%" y="447.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::contains (1 samples, 0.12%)</title><rect x="93.4704%" y="597" width="0.1209%" height="15" fill="rgb(226,74,18)" fg:x="773" fg:w="1"/><text x="93.5454%" y="607.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::cmp::PartialEq&gt;::eq (1 samples, 0.12%)</title><rect x="93.4704%" y="581" width="0.1209%" height="15" fill="rgb(225,67,54)" fg:x="773" fg:w="1"/><text x="93.5454%" y="591.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::ops::bit::Not&gt;::not (1 samples, 0.12%)</title><rect x="94.4377%" y="245" width="0.1209%" height="15" fill="rgb(251,92,32)" fg:x="781" fg:w="1"/><text x="94.5127%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="94.5586%" y="213" width="0.1209%" height="15" fill="rgb(228,149,22)" fg:x="782" fg:w="1"/><text x="94.6336%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="94.5586%" y="197" width="0.1209%" height="15" fill="rgb(243,54,13)" fg:x="782" fg:w="1"/><text x="94.6336%" y="207.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add_signed (1 samples, 0.12%)</title><rect x="94.8005%" y="133" width="0.1209%" height="15" fill="rgb(243,180,28)" fg:x="784" fg:w="1"/><text x="94.8755%" y="143.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add_signed (1 samples, 0.12%)</title><rect x="94.8005%" y="117" width="0.1209%" height="15" fill="rgb(208,167,24)" fg:x="784" fg:w="1"/><text x="94.8755%" y="127.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.12%)</title><rect x="94.8005%" y="101" width="0.1209%" height="15" fill="rgb(245,73,45)" fg:x="784" fg:w="1"/><text x="94.8755%" y="111.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::new (2 samples, 0.24%)</title><rect x="94.9214%" y="133" width="0.2418%" height="15" fill="rgb(237,203,48)" fg:x="785" fg:w="2"/><text x="94.9964%" y="143.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (2 samples, 0.24%)</title><rect x="94.9214%" y="117" width="0.2418%" height="15" fill="rgb(211,197,16)" fg:x="785" fg:w="2"/><text x="94.9964%" y="127.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.73%)</title><rect x="94.5586%" y="245" width="0.7255%" height="15" fill="rgb(243,99,51)" fg:x="782" fg:w="6"/><text x="94.6336%" y="255.50">co..</text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::collect::FromIterator&lt;simbelmyne::bitboard::Bitboard&gt;&gt;::from_iter (6 samples, 0.73%)</title><rect x="94.5586%" y="229" width="0.7255%" height="15" fill="rgb(215,123,29)" fg:x="782" fg:w="6"/><text x="94.6336%" y="239.50">&lt;s..</text></g><g><title>&lt;itertools::take_while_inclusive::TakeWhileInclusive&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.60%)</title><rect x="94.6796%" y="213" width="0.6046%" height="15" fill="rgb(239,186,37)" fg:x="783" fg:w="5"/><text x="94.7546%" y="223.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.60%)</title><rect x="94.6796%" y="197" width="0.6046%" height="15" fill="rgb(252,136,39)" fg:x="783" fg:w="5"/><text x="94.7546%" y="207.50">&lt;..</text></g><g><title>&lt;core::iter::sources::successors::Successors&lt;T,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.60%)</title><rect x="94.6796%" y="181" width="0.6046%" height="15" fill="rgb(223,213,32)" fg:x="783" fg:w="5"/><text x="94.7546%" y="191.50">&lt;..</text></g><g><title>simbelmyne::movegen::moves::_&lt;impl simbelmyne::board::Piece&gt;::visible_squares::_{{closure}} (4 samples, 0.48%)</title><rect x="94.8005%" y="165" width="0.4837%" height="15" fill="rgb(233,115,5)" fg:x="784" fg:w="4"/><text x="94.8755%" y="175.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::offset (4 samples, 0.48%)</title><rect x="94.8005%" y="149" width="0.4837%" height="15" fill="rgb(207,226,44)" fg:x="784" fg:w="4"/><text x="94.8755%" y="159.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::rank (1 samples, 0.12%)</title><rect x="95.1632%" y="133" width="0.1209%" height="15" fill="rgb(208,126,0)" fg:x="787" fg:w="1"/><text x="95.2382%" y="143.50"></text></g><g><title>&lt;u32 as core::ops::arith::Div&gt;::div (1 samples, 0.12%)</title><rect x="95.1632%" y="117" width="0.1209%" height="15" fill="rgb(244,66,21)" fg:x="787" fg:w="1"/><text x="95.2382%" y="127.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::offset (2 samples, 0.24%)</title><rect x="95.2842%" y="245" width="0.2418%" height="15" fill="rgb(222,97,12)" fg:x="788" fg:w="2"/><text x="95.3592%" y="255.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::new (1 samples, 0.12%)</title><rect x="95.4051%" y="229" width="0.1209%" height="15" fill="rgb(219,213,19)" fg:x="789" fg:w="1"/><text x="95.4801%" y="239.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (1 samples, 0.12%)</title><rect x="95.4051%" y="213" width="0.1209%" height="15" fill="rgb(252,169,30)" fg:x="789" fg:w="1"/><text x="95.4801%" y="223.50"></text></g><g><title>simbelmyne::bitboard::Step::forward (1 samples, 0.12%)</title><rect x="95.5260%" y="245" width="0.1209%" height="15" fill="rgb(206,32,51)" fg:x="790" fg:w="1"/><text x="95.6010%" y="255.50"></text></g><g><title>simbelmyne::board::Board::compute_checkers (18 samples, 2.18%)</title><rect x="93.5913%" y="597" width="2.1765%" height="15" fill="rgb(250,172,42)" fg:x="774" fg:w="18"/><text x="93.6663%" y="607.50">simbelmyne..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (18 samples, 2.18%)</title><rect x="93.5913%" y="581" width="2.1765%" height="15" fill="rgb(209,34,43)" fg:x="774" fg:w="18"/><text x="93.6663%" y="591.50">core::iter..</text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::collect::FromIterator&lt;simbelmyne::bitboard::Bitboard&gt;&gt;::from_iter (18 samples, 2.18%)</title><rect x="93.5913%" y="565" width="2.1765%" height="15" fill="rgb(223,11,35)" fg:x="774" fg:w="18"/><text x="93.6663%" y="575.50">&lt;simbelmyn..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 2.18%)</title><rect x="93.5913%" y="549" width="2.1765%" height="15" fill="rgb(251,219,26)" fg:x="774" fg:w="18"/><text x="93.6663%" y="559.50">&lt;core::ite..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 2.18%)</title><rect x="93.5913%" y="533" width="2.1765%" height="15" fill="rgb(231,119,3)" fg:x="774" fg:w="18"/><text x="93.6663%" y="543.50">&lt;core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::find (18 samples, 2.18%)</title><rect x="93.5913%" y="517" width="2.1765%" height="15" fill="rgb(216,97,11)" fg:x="774" fg:w="18"/><text x="93.6663%" y="527.50">core::iter..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 2.18%)</title><rect x="93.5913%" y="501" width="2.1765%" height="15" fill="rgb(223,59,9)" fg:x="774" fg:w="18"/><text x="93.6663%" y="511.50">&lt;core::ite..</text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 2.18%)</title><rect x="93.5913%" y="485" width="2.1765%" height="15" fill="rgb(233,93,31)" fg:x="774" fg:w="18"/><text x="93.6663%" y="495.50">&lt;core::ite..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 2.18%)</title><rect x="93.5913%" y="469" width="2.1765%" height="15" fill="rgb(239,81,33)" fg:x="774" fg:w="18"/><text x="93.6663%" y="479.50">&lt;core::ite..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_try_fold (18 samples, 2.18%)</title><rect x="93.5913%" y="453" width="2.1765%" height="15" fill="rgb(213,120,34)" fg:x="774" fg:w="18"/><text x="93.6663%" y="463.50">core::iter..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 2.18%)</title><rect x="93.5913%" y="437" width="2.1765%" height="15" fill="rgb(243,49,53)" fg:x="774" fg:w="18"/><text x="93.6663%" y="447.50">&lt;core::ite..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (18 samples, 2.18%)</title><rect x="93.5913%" y="421" width="2.1765%" height="15" fill="rgb(247,216,33)" fg:x="774" fg:w="18"/><text x="93.6663%" y="431.50">&lt;core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (18 samples, 2.18%)</title><rect x="93.5913%" y="405" width="2.1765%" height="15" fill="rgb(226,26,14)" fg:x="774" fg:w="18"/><text x="93.6663%" y="415.50">core::iter..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_try_fold::flatten::_{{closure}} (18 samples, 2.18%)</title><rect x="93.5913%" y="389" width="2.1765%" height="15" fill="rgb(215,49,53)" fg:x="774" fg:w="18"/><text x="93.6663%" y="399.50">core::iter..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::_{{closure}} (18 samples, 2.18%)</title><rect x="93.5913%" y="373" width="2.1765%" height="15" fill="rgb(245,162,40)" fg:x="774" fg:w="18"/><text x="93.6663%" y="383.50">&lt;core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (18 samples, 2.18%)</title><rect x="93.5913%" y="357" width="2.1765%" height="15" fill="rgb(229,68,17)" fg:x="774" fg:w="18"/><text x="93.6663%" y="367.50">core::iter..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (14 samples, 1.69%)</title><rect x="94.0750%" y="341" width="1.6929%" height="15" fill="rgb(213,182,10)" fg:x="778" fg:w="14"/><text x="94.1500%" y="351.50">core::o..</text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (14 samples, 1.69%)</title><rect x="94.0750%" y="325" width="1.6929%" height="15" fill="rgb(245,125,30)" fg:x="778" fg:w="14"/><text x="94.1500%" y="335.50">core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (14 samples, 1.69%)</title><rect x="94.0750%" y="309" width="1.6929%" height="15" fill="rgb(232,202,2)" fg:x="778" fg:w="14"/><text x="94.1500%" y="319.50">core::i..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (14 samples, 1.69%)</title><rect x="94.0750%" y="293" width="1.6929%" height="15" fill="rgb(237,140,51)" fg:x="778" fg:w="14"/><text x="94.1500%" y="303.50">core::o..</text></g><g><title>simbelmyne::board::Board::compute_checkers::_{{closure}} (14 samples, 1.69%)</title><rect x="94.0750%" y="277" width="1.6929%" height="15" fill="rgb(236,157,25)" fg:x="778" fg:w="14"/><text x="94.1500%" y="287.50">simbelm..</text></g><g><title>simbelmyne::movegen::moves::&lt;impl simbelmyne::board::Piece&gt;::visible_squares (14 samples, 1.69%)</title><rect x="94.0750%" y="261" width="1.6929%" height="15" fill="rgb(219,209,0)" fg:x="778" fg:w="14"/><text x="94.1500%" y="271.50">simbelm..</text></g><g><title>simbelmyne::movegen::moves::&lt;impl simbelmyne::board::Piece&gt;::range (1 samples, 0.12%)</title><rect x="95.6469%" y="245" width="0.1209%" height="15" fill="rgb(240,116,54)" fg:x="791" fg:w="1"/><text x="95.7219%" y="255.50"></text></g><g><title>simbelmyne::board::Board::compute_pinrays (4 samples, 0.48%)</title><rect x="95.7678%" y="597" width="0.4837%" height="15" fill="rgb(216,10,36)" fg:x="792" fg:w="4"/><text x="95.8428%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (4 samples, 0.48%)</title><rect x="95.7678%" y="581" width="0.4837%" height="15" fill="rgb(222,72,44)" fg:x="792" fg:w="4"/><text x="95.8428%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.48%)</title><rect x="95.7678%" y="565" width="0.4837%" height="15" fill="rgb(232,159,9)" fg:x="792" fg:w="4"/><text x="95.8428%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4 samples, 0.48%)</title><rect x="95.7678%" y="549" width="0.4837%" height="15" fill="rgb(210,39,32)" fg:x="792" fg:w="4"/><text x="95.8428%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.48%)</title><rect x="95.7678%" y="533" width="0.4837%" height="15" fill="rgb(216,194,45)" fg:x="792" fg:w="4"/><text x="95.8428%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (4 samples, 0.48%)</title><rect x="95.7678%" y="517" width="0.4837%" height="15" fill="rgb(218,18,35)" fg:x="792" fg:w="4"/><text x="95.8428%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.48%)</title><rect x="95.7678%" y="501" width="0.4837%" height="15" fill="rgb(207,83,51)" fg:x="792" fg:w="4"/><text x="95.8428%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.48%)</title><rect x="95.7678%" y="485" width="0.4837%" height="15" fill="rgb(225,63,43)" fg:x="792" fg:w="4"/><text x="95.8428%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.48%)</title><rect x="95.7678%" y="469" width="0.4837%" height="15" fill="rgb(207,57,36)" fg:x="792" fg:w="4"/><text x="95.8428%" y="479.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (4 samples, 0.48%)</title><rect x="95.7678%" y="453" width="0.4837%" height="15" fill="rgb(216,99,33)" fg:x="792" fg:w="4"/><text x="95.8428%" y="463.50"></text></g><g><title>simbelmyne::board::Board::compute_pinrays::_{{closure}} (4 samples, 0.48%)</title><rect x="95.7678%" y="437" width="0.4837%" height="15" fill="rgb(225,42,16)" fg:x="792" fg:w="4"/><text x="95.8428%" y="447.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::visible_ray (4 samples, 0.48%)</title><rect x="95.7678%" y="421" width="0.4837%" height="15" fill="rgb(220,201,45)" fg:x="792" fg:w="4"/><text x="95.8428%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.48%)</title><rect x="95.7678%" y="405" width="0.4837%" height="15" fill="rgb(225,33,4)" fg:x="792" fg:w="4"/><text x="95.8428%" y="415.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::collect::FromIterator&lt;simbelmyne::bitboard::Bitboard&gt;&gt;::from_iter (4 samples, 0.48%)</title><rect x="95.7678%" y="389" width="0.4837%" height="15" fill="rgb(224,33,50)" fg:x="792" fg:w="4"/><text x="95.8428%" y="399.50"></text></g><g><title>&lt;itertools::take_while_inclusive::TakeWhileInclusive&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.48%)</title><rect x="95.7678%" y="373" width="0.4837%" height="15" fill="rgb(246,198,51)" fg:x="792" fg:w="4"/><text x="95.8428%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.36%)</title><rect x="95.8888%" y="357" width="0.3628%" height="15" fill="rgb(205,22,4)" fg:x="793" fg:w="3"/><text x="95.9638%" y="367.50"></text></g><g><title>&lt;core::iter::sources::successors::Successors&lt;T,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="96.1306%" y="341" width="0.1209%" height="15" fill="rgb(206,3,8)" fg:x="795" fg:w="1"/><text x="96.2056%" y="351.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::visible_ray::_{{closure}} (1 samples, 0.12%)</title><rect x="96.1306%" y="325" width="0.1209%" height="15" fill="rgb(251,23,15)" fg:x="795" fg:w="1"/><text x="96.2056%" y="335.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::offset (1 samples, 0.12%)</title><rect x="96.1306%" y="309" width="0.1209%" height="15" fill="rgb(252,88,28)" fg:x="795" fg:w="1"/><text x="96.2056%" y="319.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::rank (1 samples, 0.12%)</title><rect x="96.1306%" y="293" width="0.1209%" height="15" fill="rgb(212,127,14)" fg:x="795" fg:w="1"/><text x="96.2056%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (1 samples, 0.12%)</title><rect x="96.1306%" y="277" width="0.1209%" height="15" fill="rgb(247,145,37)" fg:x="795" fg:w="1"/><text x="96.2056%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.24%)</title><rect x="96.2515%" y="405" width="0.2418%" height="15" fill="rgb(209,117,53)" fg:x="796" fg:w="2"/><text x="96.3265%" y="415.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (2 samples, 0.24%)</title><rect x="96.2515%" y="389" width="0.2418%" height="15" fill="rgb(212,90,42)" fg:x="796" fg:w="2"/><text x="96.3265%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.24%)</title><rect x="96.2515%" y="373" width="0.2418%" height="15" fill="rgb(218,164,37)" fg:x="796" fg:w="2"/><text x="96.3265%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.24%)</title><rect x="96.2515%" y="357" width="0.2418%" height="15" fill="rgb(246,65,34)" fg:x="796" fg:w="2"/><text x="96.3265%" y="367.50"></text></g><g><title>&lt;&amp;core::option::Option&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.12%)</title><rect x="96.4933%" y="389" width="0.1209%" height="15" fill="rgb(231,100,33)" fg:x="798" fg:w="1"/><text x="96.5683%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::iter (1 samples, 0.12%)</title><rect x="96.4933%" y="373" width="0.1209%" height="15" fill="rgb(228,126,14)" fg:x="798" fg:w="1"/><text x="96.5683%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.12%)</title><rect x="96.4933%" y="357" width="0.1209%" height="15" fill="rgb(215,173,21)" fg:x="798" fg:w="1"/><text x="96.5683%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.48%)</title><rect x="96.2515%" y="533" width="0.4837%" height="15" fill="rgb(210,6,40)" fg:x="796" fg:w="4"/><text x="96.3265%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (4 samples, 0.48%)</title><rect x="96.2515%" y="517" width="0.4837%" height="15" fill="rgb(212,48,18)" fg:x="796" fg:w="4"/><text x="96.3265%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.48%)</title><rect x="96.2515%" y="501" width="0.4837%" height="15" fill="rgb(230,214,11)" fg:x="796" fg:w="4"/><text x="96.3265%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.48%)</title><rect x="96.2515%" y="485" width="0.4837%" height="15" fill="rgb(254,105,39)" fg:x="796" fg:w="4"/><text x="96.3265%" y="495.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_try_fold (4 samples, 0.48%)</title><rect x="96.2515%" y="469" width="0.4837%" height="15" fill="rgb(245,158,5)" fg:x="796" fg:w="4"/><text x="96.3265%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.48%)</title><rect x="96.2515%" y="453" width="0.4837%" height="15" fill="rgb(249,208,11)" fg:x="796" fg:w="4"/><text x="96.3265%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (4 samples, 0.48%)</title><rect x="96.2515%" y="437" width="0.4837%" height="15" fill="rgb(210,39,28)" fg:x="796" fg:w="4"/><text x="96.3265%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.48%)</title><rect x="96.2515%" y="421" width="0.4837%" height="15" fill="rgb(211,56,53)" fg:x="796" fg:w="4"/><text x="96.3265%" y="431.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_try_fold::flatten::_{{closure}} (2 samples, 0.24%)</title><rect x="96.4933%" y="405" width="0.2418%" height="15" fill="rgb(226,201,30)" fg:x="798" fg:w="2"/><text x="96.5683%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::_{{closure}} (1 samples, 0.12%)</title><rect x="96.6143%" y="389" width="0.1209%" height="15" fill="rgb(239,101,34)" fg:x="799" fg:w="1"/><text x="96.6893%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.12%)</title><rect x="96.6143%" y="373" width="0.1209%" height="15" fill="rgb(226,209,5)" fg:x="799" fg:w="1"/><text x="96.6893%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="96.8561%" y="437" width="0.1209%" height="15" fill="rgb(250,105,47)" fg:x="801" fg:w="1"/><text x="96.9311%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="96.8561%" y="421" width="0.1209%" height="15" fill="rgb(230,72,3)" fg:x="801" fg:w="1"/><text x="96.9311%" y="431.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (1 samples, 0.12%)</title><rect x="96.8561%" y="405" width="0.1209%" height="15" fill="rgb(232,218,39)" fg:x="801" fg:w="1"/><text x="96.9311%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.24%)</title><rect x="96.8561%" y="469" width="0.2418%" height="15" fill="rgb(248,166,6)" fg:x="801" fg:w="2"/><text x="96.9311%" y="479.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::collect::FromIterator&lt;simbelmyne::bitboard::Bitboard&gt;&gt;::from_iter (2 samples, 0.24%)</title><rect x="96.8561%" y="453" width="0.2418%" height="15" fill="rgb(247,89,20)" fg:x="801" fg:w="2"/><text x="96.9311%" y="463.50"></text></g><g><title>&lt;itertools::take_while_inclusive::TakeWhileInclusive&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="96.9770%" y="437" width="0.1209%" height="15" fill="rgb(248,130,54)" fg:x="802" fg:w="1"/><text x="97.0520%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="96.9770%" y="421" width="0.1209%" height="15" fill="rgb(234,196,4)" fg:x="802" fg:w="1"/><text x="97.0520%" y="431.50"></text></g><g><title>&lt;core::iter::sources::successors::Successors&lt;T,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="96.9770%" y="405" width="0.1209%" height="15" fill="rgb(250,143,31)" fg:x="802" fg:w="1"/><text x="97.0520%" y="415.50"></text></g><g><title>simbelmyne::movegen::moves::_&lt;impl simbelmyne::board::Piece&gt;::visible_squares::_{{closure}} (1 samples, 0.12%)</title><rect x="96.9770%" y="389" width="0.1209%" height="15" fill="rgb(211,110,34)" fg:x="802" fg:w="1"/><text x="97.0520%" y="399.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::offset (1 samples, 0.12%)</title><rect x="96.9770%" y="373" width="0.1209%" height="15" fill="rgb(215,124,48)" fg:x="802" fg:w="1"/><text x="97.0520%" y="383.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::rank (1 samples, 0.12%)</title><rect x="96.9770%" y="357" width="0.1209%" height="15" fill="rgb(216,46,13)" fg:x="802" fg:w="1"/><text x="97.0520%" y="367.50"></text></g><g><title>&lt;u32 as core::ops::arith::Div&gt;::div (1 samples, 0.12%)</title><rect x="96.9770%" y="341" width="0.1209%" height="15" fill="rgb(205,184,25)" fg:x="802" fg:w="1"/><text x="97.0520%" y="351.50"></text></g><g><title>simbelmyne::board::Board::king_danger_squares (9 samples, 1.09%)</title><rect x="96.2515%" y="597" width="1.0883%" height="15" fill="rgb(228,1,10)" fg:x="796" fg:w="9"/><text x="96.3265%" y="607.50">simb..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (9 samples, 1.09%)</title><rect x="96.2515%" y="581" width="1.0883%" height="15" fill="rgb(213,116,27)" fg:x="796" fg:w="9"/><text x="96.3265%" y="591.50">core..</text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::collect::FromIterator&lt;simbelmyne::bitboard::Bitboard&gt;&gt;::from_iter (9 samples, 1.09%)</title><rect x="96.2515%" y="565" width="1.0883%" height="15" fill="rgb(241,95,50)" fg:x="796" fg:w="9"/><text x="96.3265%" y="575.50">&lt;sim..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 1.09%)</title><rect x="96.2515%" y="549" width="1.0883%" height="15" fill="rgb(238,48,32)" fg:x="796" fg:w="9"/><text x="96.3265%" y="559.50">&lt;cor..</text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.60%)</title><rect x="96.7352%" y="533" width="0.6046%" height="15" fill="rgb(235,113,49)" fg:x="800" fg:w="5"/><text x="96.8102%" y="543.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5 samples, 0.60%)</title><rect x="96.7352%" y="517" width="0.6046%" height="15" fill="rgb(205,127,43)" fg:x="800" fg:w="5"/><text x="96.8102%" y="527.50">c..</text></g><g><title>simbelmyne::board::Board::king_danger_squares::_{{closure}} (5 samples, 0.60%)</title><rect x="96.7352%" y="501" width="0.6046%" height="15" fill="rgb(250,162,2)" fg:x="800" fg:w="5"/><text x="96.8102%" y="511.50">s..</text></g><g><title>simbelmyne::movegen::moves::&lt;impl simbelmyne::board::Piece&gt;::visible_squares (5 samples, 0.60%)</title><rect x="96.7352%" y="485" width="0.6046%" height="15" fill="rgb(220,13,41)" fg:x="800" fg:w="5"/><text x="96.8102%" y="495.50">s..</text></g><g><title>simbelmyne::bitboard::Bitboard::offset (2 samples, 0.24%)</title><rect x="97.0979%" y="469" width="0.2418%" height="15" fill="rgb(249,221,25)" fg:x="803" fg:w="2"/><text x="97.1729%" y="479.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::new (1 samples, 0.12%)</title><rect x="97.2189%" y="453" width="0.1209%" height="15" fill="rgb(215,208,19)" fg:x="804" fg:w="1"/><text x="97.2939%" y="463.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (1 samples, 0.12%)</title><rect x="97.2189%" y="437" width="0.1209%" height="15" fill="rgb(236,175,2)" fg:x="804" fg:w="1"/><text x="97.2939%" y="447.50"></text></g><g><title>simbelmyne::board::Square::is_double_push (1 samples, 0.12%)</title><rect x="97.3398%" y="597" width="0.1209%" height="15" fill="rgb(241,52,2)" fg:x="805" fg:w="1"/><text x="97.4148%" y="607.50"></text></g><g><title>simbelmyne::movegen::castling::CastlingRights::get_available (1 samples, 0.12%)</title><rect x="97.4607%" y="597" width="0.1209%" height="15" fill="rgb(248,140,14)" fg:x="806" fg:w="1"/><text x="97.5357%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.12%)</title><rect x="97.4607%" y="581" width="0.1209%" height="15" fill="rgb(253,22,42)" fg:x="806" fg:w="1"/><text x="97.5357%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="97.4607%" y="565" width="0.1209%" height="15" fill="rgb(234,61,47)" fg:x="806" fg:w="1"/><text x="97.5357%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="97.4607%" y="549" width="0.1209%" height="15" fill="rgb(208,226,15)" fg:x="806" fg:w="1"/><text x="97.5357%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="97.4607%" y="533" width="0.1209%" height="15" fill="rgb(217,221,4)" fg:x="806" fg:w="1"/><text x="97.5357%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.12%)</title><rect x="97.4607%" y="517" width="0.1209%" height="15" fill="rgb(212,174,34)" fg:x="806" fg:w="1"/><text x="97.5357%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.12%)</title><rect x="97.4607%" y="501" width="0.1209%" height="15" fill="rgb(253,83,4)" fg:x="806" fg:w="1"/><text x="97.5357%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="97.9444%" y="549" width="0.1209%" height="15" fill="rgb(250,195,49)" fg:x="810" fg:w="1"/><text x="98.0194%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="97.9444%" y="533" width="0.1209%" height="15" fill="rgb(241,192,25)" fg:x="810" fg:w="1"/><text x="98.0194%" y="543.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::new (2 samples, 0.24%)</title><rect x="98.3071%" y="469" width="0.2418%" height="15" fill="rgb(208,124,10)" fg:x="813" fg:w="2"/><text x="98.3821%" y="479.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (2 samples, 0.24%)</title><rect x="98.3071%" y="453" width="0.2418%" height="15" fill="rgb(222,33,0)" fg:x="813" fg:w="2"/><text x="98.3821%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.73%)</title><rect x="97.9444%" y="581" width="0.7255%" height="15" fill="rgb(234,209,28)" fg:x="810" fg:w="6"/><text x="98.0194%" y="591.50">co..</text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::collect::FromIterator&lt;simbelmyne::bitboard::Bitboard&gt;&gt;::from_iter (6 samples, 0.73%)</title><rect x="97.9444%" y="565" width="0.7255%" height="15" fill="rgb(224,11,23)" fg:x="810" fg:w="6"/><text x="98.0194%" y="575.50">&lt;s..</text></g><g><title>&lt;itertools::take_while_inclusive::TakeWhileInclusive&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.60%)</title><rect x="98.0653%" y="549" width="0.6046%" height="15" fill="rgb(232,99,1)" fg:x="811" fg:w="5"/><text x="98.1403%" y="559.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.48%)</title><rect x="98.1862%" y="533" width="0.4837%" height="15" fill="rgb(237,95,45)" fg:x="812" fg:w="4"/><text x="98.2612%" y="543.50"></text></g><g><title>&lt;core::iter::sources::successors::Successors&lt;T,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.36%)</title><rect x="98.3071%" y="517" width="0.3628%" height="15" fill="rgb(208,109,11)" fg:x="813" fg:w="3"/><text x="98.3821%" y="527.50"></text></g><g><title>simbelmyne::movegen::moves::_&lt;impl simbelmyne::board::Piece&gt;::visible_squares::_{{closure}} (3 samples, 0.36%)</title><rect x="98.3071%" y="501" width="0.3628%" height="15" fill="rgb(216,190,48)" fg:x="813" fg:w="3"/><text x="98.3821%" y="511.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::offset (3 samples, 0.36%)</title><rect x="98.3071%" y="485" width="0.3628%" height="15" fill="rgb(251,171,36)" fg:x="813" fg:w="3"/><text x="98.3821%" y="495.50"></text></g><g><title>simbelmyne::bitboard::Bitboard::rank (1 samples, 0.12%)</title><rect x="98.5490%" y="469" width="0.1209%" height="15" fill="rgb(230,62,22)" fg:x="815" fg:w="1"/><text x="98.6240%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (1 samples, 0.12%)</title><rect x="98.5490%" y="453" width="0.1209%" height="15" fill="rgb(225,114,35)" fg:x="815" fg:w="1"/><text x="98.6240%" y="463.50"></text></g><g><title>simbelmyne::movegen::legal_moves::&lt;impl simbelmyne::board::Board&gt;::legal_moves (91 samples, 11.00%)</title><rect x="88.0290%" y="613" width="11.0036%" height="15" fill="rgb(215,118,42)" fg:x="728" fg:w="91"/><text x="88.1040%" y="623.50">simbelmyne::movegen::legal_moves::&lt;impl simbelmyne::board::B..</text></g><g><title>simbelmyne::movegen::moves::&lt;impl simbelmyne::board::Piece&gt;::visible_squares (12 samples, 1.45%)</title><rect x="97.5816%" y="597" width="1.4510%" height="15" fill="rgb(243,119,21)" fg:x="807" fg:w="12"/><text x="97.6566%" y="607.50">simbel..</text></g><g><title>simbelmyne::movegen::moves::&lt;impl simbelmyne::board::Piece&gt;::range (3 samples, 0.36%)</title><rect x="98.6699%" y="581" width="0.3628%" height="15" fill="rgb(252,177,53)" fg:x="816" fg:w="3"/><text x="98.7449%" y="591.50"></text></g><g><title>&lt;simbelmyne::board::Board as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="99.0326%" y="597" width="0.1209%" height="15" fill="rgb(237,209,29)" fg:x="819" fg:w="1"/><text x="99.1076%" y="607.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="99.0326%" y="581" width="0.1209%" height="15" fill="rgb(212,65,23)" fg:x="819" fg:w="1"/><text x="99.1076%" y="591.50"></text></g><g><title>simbelmyne::bench::perft::perft (245 samples, 29.63%)</title><rect x="69.6493%" y="629" width="29.6252%" height="15" fill="rgb(230,222,46)" fg:x="576" fg:w="245"/><text x="69.7243%" y="639.50">simbelmyne::bench::perft::perft</text></g><g><title>simbelmyne::movegen::play_move::&lt;impl simbelmyne::board::Board&gt;::play_move (2 samples, 0.24%)</title><rect x="99.0326%" y="613" width="0.2418%" height="15" fill="rgb(215,135,32)" fg:x="819" fg:w="2"/><text x="99.1076%" y="623.50"></text></g><g><title>simbelmyne::board::Board::add_at (1 samples, 0.12%)</title><rect x="99.1536%" y="597" width="0.1209%" height="15" fill="rgb(246,101,22)" fg:x="820" fg:w="1"/><text x="99.2286%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.12%)</title><rect x="99.2745%" y="613" width="0.1209%" height="15" fill="rgb(206,107,13)" fg:x="821" fg:w="1"/><text x="99.3495%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.12%)</title><rect x="99.2745%" y="597" width="0.1209%" height="15" fill="rgb(250,100,44)" fg:x="821" fg:w="1"/><text x="99.3495%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.12%)</title><rect x="99.2745%" y="581" width="0.1209%" height="15" fill="rgb(231,147,38)" fg:x="821" fg:w="1"/><text x="99.3495%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="99.2745%" y="565" width="0.1209%" height="15" fill="rgb(229,8,40)" fg:x="821" fg:w="1"/><text x="99.3495%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="99.2745%" y="549" width="0.1209%" height="15" fill="rgb(221,135,30)" fg:x="821" fg:w="1"/><text x="99.3495%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.12%)</title><rect x="99.2745%" y="533" width="0.1209%" height="15" fill="rgb(249,193,18)" fg:x="821" fg:w="1"/><text x="99.3495%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.12%)</title><rect x="99.2745%" y="517" width="0.1209%" height="15" fill="rgb(209,133,39)" fg:x="821" fg:w="1"/><text x="99.3495%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (1 samples, 0.12%)</title><rect x="99.2745%" y="501" width="0.1209%" height="15" fill="rgb(232,100,14)" fg:x="821" fg:w="1"/><text x="99.3495%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.12%)</title><rect x="99.2745%" y="485" width="0.1209%" height="15" fill="rgb(224,185,1)" fg:x="821" fg:w="1"/><text x="99.3495%" y="495.50"></text></g><g><title>simbelmyne::movegen::legal_moves::_&lt;impl simbelmyne::board::Board&gt;::legal_moves::_{{closure}} (1 samples, 0.12%)</title><rect x="99.2745%" y="469" width="0.1209%" height="15" fill="rgb(223,139,8)" fg:x="821" fg:w="1"/><text x="99.3495%" y="479.50"></text></g><g><title>simbelmyne::movegen::castling::CastleType::is_allowed (1 samples, 0.12%)</title><rect x="99.2745%" y="453" width="0.1209%" height="15" fill="rgb(232,213,38)" fg:x="821" fg:w="1"/><text x="99.3495%" y="463.50"></text></g><g><title>simbelmyne::board::Board::attacked_by (1 samples, 0.12%)</title><rect x="99.2745%" y="437" width="0.1209%" height="15" fill="rgb(207,94,22)" fg:x="821" fg:w="1"/><text x="99.3495%" y="447.50"></text></g><g><title>simbelmyne::board::Board::compute_attacked_by (1 samples, 0.12%)</title><rect x="99.2745%" y="421" width="0.1209%" height="15" fill="rgb(219,183,54)" fg:x="821" fg:w="1"/><text x="99.3495%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.12%)</title><rect x="99.2745%" y="405" width="0.1209%" height="15" fill="rgb(216,185,54)" fg:x="821" fg:w="1"/><text x="99.3495%" y="415.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::collect::FromIterator&lt;simbelmyne::bitboard::Bitboard&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="99.2745%" y="389" width="0.1209%" height="15" fill="rgb(254,217,39)" fg:x="821" fg:w="1"/><text x="99.3495%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="99.2745%" y="373" width="0.1209%" height="15" fill="rgb(240,178,23)" fg:x="821" fg:w="1"/><text x="99.3495%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.12%)</title><rect x="99.2745%" y="357" width="0.1209%" height="15" fill="rgb(218,11,47)" fg:x="821" fg:w="1"/><text x="99.3495%" y="367.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.12%)</title><rect x="99.2745%" y="341" width="0.1209%" height="15" fill="rgb(218,51,51)" fg:x="821" fg:w="1"/><text x="99.3495%" y="351.50"></text></g><g><title>simbelmyne::board::Board::compute_attacked_by::_{{closure}} (1 samples, 0.12%)</title><rect x="99.2745%" y="325" width="0.1209%" height="15" fill="rgb(238,126,27)" fg:x="821" fg:w="1"/><text x="99.3495%" y="335.50"></text></g><g><title>simbelmyne::movegen::moves::&lt;impl simbelmyne::board::Piece&gt;::visible_squares (1 samples, 0.12%)</title><rect x="99.2745%" y="309" width="0.1209%" height="15" fill="rgb(249,202,22)" fg:x="821" fg:w="1"/><text x="99.3495%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.12%)</title><rect x="99.2745%" y="293" width="0.1209%" height="15" fill="rgb(254,195,49)" fg:x="821" fg:w="1"/><text x="99.3495%" y="303.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::collect::FromIterator&lt;simbelmyne::bitboard::Bitboard&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="99.2745%" y="277" width="0.1209%" height="15" fill="rgb(208,123,14)" fg:x="821" fg:w="1"/><text x="99.3495%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="99.2745%" y="261" width="0.1209%" height="15" fill="rgb(224,200,8)" fg:x="821" fg:w="1"/><text x="99.3495%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="99.2745%" y="245" width="0.1209%" height="15" fill="rgb(217,61,36)" fg:x="821" fg:w="1"/><text x="99.3495%" y="255.50"></text></g><g><title>simbelmyne::board::Board::compute_checkers (1 samples, 0.12%)</title><rect x="99.3954%" y="613" width="0.1209%" height="15" fill="rgb(206,35,45)" fg:x="822" fg:w="1"/><text x="99.4704%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.12%)</title><rect x="99.3954%" y="597" width="0.1209%" height="15" fill="rgb(217,65,33)" fg:x="822" fg:w="1"/><text x="99.4704%" y="607.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::collect::FromIterator&lt;simbelmyne::bitboard::Bitboard&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="99.3954%" y="581" width="0.1209%" height="15" fill="rgb(222,158,48)" fg:x="822" fg:w="1"/><text x="99.4704%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="99.3954%" y="565" width="0.1209%" height="15" fill="rgb(254,2,54)" fg:x="822" fg:w="1"/><text x="99.4704%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="99.3954%" y="549" width="0.1209%" height="15" fill="rgb(250,143,38)" fg:x="822" fg:w="1"/><text x="99.4704%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.12%)</title><rect x="99.3954%" y="533" width="0.1209%" height="15" fill="rgb(248,25,0)" fg:x="822" fg:w="1"/><text x="99.4704%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.12%)</title><rect x="99.3954%" y="517" width="0.1209%" height="15" fill="rgb(206,152,27)" fg:x="822" fg:w="1"/><text x="99.4704%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.12%)</title><rect x="99.3954%" y="501" width="0.1209%" height="15" fill="rgb(240,77,30)" fg:x="822" fg:w="1"/><text x="99.4704%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.12%)</title><rect x="99.3954%" y="485" width="0.1209%" height="15" fill="rgb(231,5,3)" fg:x="822" fg:w="1"/><text x="99.4704%" y="495.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_try_fold (1 samples, 0.12%)</title><rect x="99.3954%" y="469" width="0.1209%" height="15" fill="rgb(207,226,32)" fg:x="822" fg:w="1"/><text x="99.4704%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.12%)</title><rect x="99.3954%" y="453" width="0.1209%" height="15" fill="rgb(222,207,47)" fg:x="822" fg:w="1"/><text x="99.4704%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (1 samples, 0.12%)</title><rect x="99.3954%" y="437" width="0.1209%" height="15" fill="rgb(229,115,45)" fg:x="822" fg:w="1"/><text x="99.4704%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.12%)</title><rect x="99.3954%" y="421" width="0.1209%" height="15" fill="rgb(224,191,6)" fg:x="822" fg:w="1"/><text x="99.4704%" y="431.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_try_fold::flatten::_{{closure}} (1 samples, 0.12%)</title><rect x="99.3954%" y="405" width="0.1209%" height="15" fill="rgb(230,227,24)" fg:x="822" fg:w="1"/><text x="99.4704%" y="415.50"></text></g><g><title>&lt;&amp;core::option::Option&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.12%)</title><rect x="99.3954%" y="389" width="0.1209%" height="15" fill="rgb(228,80,19)" fg:x="822" fg:w="1"/><text x="99.4704%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::iter (1 samples, 0.12%)</title><rect x="99.3954%" y="373" width="0.1209%" height="15" fill="rgb(247,229,0)" fg:x="822" fg:w="1"/><text x="99.4704%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.12%)</title><rect x="99.3954%" y="357" width="0.1209%" height="15" fill="rgb(237,194,15)" fg:x="822" fg:w="1"/><text x="99.4704%" y="367.50"></text></g><g><title>simbelmyne::movegen::legal_moves::&lt;impl simbelmyne::board::Board&gt;::legal_moves (3 samples, 0.36%)</title><rect x="99.2745%" y="629" width="0.3628%" height="15" fill="rgb(219,203,20)" fg:x="821" fg:w="3"/><text x="99.3495%" y="639.50"></text></g><g><title>simbelmyne::board::Board::king_danger_squares (1 samples, 0.12%)</title><rect x="99.5163%" y="613" width="0.1209%" height="15" fill="rgb(234,128,8)" fg:x="823" fg:w="1"/><text x="99.5913%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.12%)</title><rect x="99.5163%" y="597" width="0.1209%" height="15" fill="rgb(248,202,8)" fg:x="823" fg:w="1"/><text x="99.5913%" y="607.50"></text></g><g><title>&lt;simbelmyne::bitboard::Bitboard as core::iter::traits::collect::FromIterator&lt;simbelmyne::bitboard::Bitboard&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="99.5163%" y="581" width="0.1209%" height="15" fill="rgb(206,104,37)" fg:x="823" fg:w="1"/><text x="99.5913%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="99.5163%" y="565" width="0.1209%" height="15" fill="rgb(223,8,27)" fg:x="823" fg:w="1"/><text x="99.5913%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="99.5163%" y="549" width="0.1209%" height="15" fill="rgb(216,217,28)" fg:x="823" fg:w="1"/><text x="99.5913%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.12%)</title><rect x="99.5163%" y="533" width="0.1209%" height="15" fill="rgb(249,199,1)" fg:x="823" fg:w="1"/><text x="99.5913%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.12%)</title><rect x="99.5163%" y="517" width="0.1209%" height="15" fill="rgb(240,85,17)" fg:x="823" fg:w="1"/><text x="99.5913%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.12%)</title><rect x="99.5163%" y="501" width="0.1209%" height="15" fill="rgb(206,108,45)" fg:x="823" fg:w="1"/><text x="99.5913%" y="511.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_try_fold (1 samples, 0.12%)</title><rect x="99.5163%" y="485" width="0.1209%" height="15" fill="rgb(245,210,41)" fg:x="823" fg:w="1"/><text x="99.5913%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.12%)</title><rect x="99.5163%" y="469" width="0.1209%" height="15" fill="rgb(206,13,37)" fg:x="823" fg:w="1"/><text x="99.5913%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (1 samples, 0.12%)</title><rect x="99.5163%" y="453" width="0.1209%" height="15" fill="rgb(250,61,18)" fg:x="823" fg:w="1"/><text x="99.5913%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.12%)</title><rect x="99.5163%" y="437" width="0.1209%" height="15" fill="rgb(235,172,48)" fg:x="823" fg:w="1"/><text x="99.5913%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="99.5163%" y="421" width="0.1209%" height="15" fill="rgb(249,201,17)" fg:x="823" fg:w="1"/><text x="99.5913%" y="431.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.12%)</title><rect x="99.5163%" y="405" width="0.1209%" height="15" fill="rgb(219,208,6)" fg:x="823" fg:w="1"/><text x="99.5913%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.12%)</title><rect x="99.5163%" y="389" width="0.1209%" height="15" fill="rgb(248,31,23)" fg:x="823" fg:w="1"/><text x="99.5913%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.12%)</title><rect x="99.5163%" y="373" width="0.1209%" height="15" fill="rgb(245,15,42)" fg:x="823" fg:w="1"/><text x="99.5913%" y="383.50"></text></g><g><title>_start (249 samples, 30.11%)</title><rect x="69.6493%" y="789" width="30.1088%" height="15" fill="rgb(222,217,39)" fg:x="576" fg:w="249"/><text x="69.7243%" y="799.50">_start</text></g><g><title>__libc_start_main (249 samples, 30.11%)</title><rect x="69.6493%" y="773" width="30.1088%" height="15" fill="rgb(210,219,27)" fg:x="576" fg:w="249"/><text x="69.7243%" y="783.50">__libc_start_main</text></g><g><title>[libc.so.6] (249 samples, 30.11%)</title><rect x="69.6493%" y="757" width="30.1088%" height="15" fill="rgb(252,166,36)" fg:x="576" fg:w="249"/><text x="69.7243%" y="767.50">[libc.so.6]</text></g><g><title>main (249 samples, 30.11%)</title><rect x="69.6493%" y="741" width="30.1088%" height="15" fill="rgb(245,132,34)" fg:x="576" fg:w="249"/><text x="69.7243%" y="751.50">main</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (249 samples, 30.11%)</title><rect x="69.6493%" y="725" width="30.1088%" height="15" fill="rgb(236,54,3)" fg:x="576" fg:w="249"/><text x="69.7243%" y="735.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (249 samples, 30.11%)</title><rect x="69.6493%" y="709" width="30.1088%" height="15" fill="rgb(241,173,43)" fg:x="576" fg:w="249"/><text x="69.7243%" y="719.50">core::ops::function::FnOnce::call_once</text></g><g><title>simbelmyne::main (249 samples, 30.11%)</title><rect x="69.6493%" y="693" width="30.1088%" height="15" fill="rgb(215,190,9)" fg:x="576" fg:w="249"/><text x="69.7243%" y="703.50">simbelmyne::main</text></g><g><title>simbelmyne::bench::perft::perft (249 samples, 30.11%)</title><rect x="69.6493%" y="677" width="30.1088%" height="15" fill="rgb(242,101,16)" fg:x="576" fg:w="249"/><text x="69.7243%" y="687.50">simbelmyne::bench::perft::perft</text></g><g><title>simbelmyne::bench::perft::perft (249 samples, 30.11%)</title><rect x="69.6493%" y="661" width="30.1088%" height="15" fill="rgb(223,190,21)" fg:x="576" fg:w="249"/><text x="69.7243%" y="671.50">simbelmyne::bench::perft::perft</text></g><g><title>simbelmyne::bench::perft::perft (249 samples, 30.11%)</title><rect x="69.6493%" y="645" width="30.1088%" height="15" fill="rgb(215,228,25)" fg:x="576" fg:w="249"/><text x="69.7243%" y="655.50">simbelmyne::bench::perft::perft</text></g><g><title>simbelmyne::movegen::play_move::&lt;impl simbelmyne::board::Board&gt;::play_move (1 samples, 0.12%)</title><rect x="99.6372%" y="629" width="0.1209%" height="15" fill="rgb(225,36,22)" fg:x="824" fg:w="1"/><text x="99.7122%" y="639.50"></text></g><g><title>all (827 samples, 100%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(251,106,46)" fg:x="0" fg:w="827"/><text x="0.0750%" y="831.50"></text></g><g><title>simbelmyne (827 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(208,90,1)" fg:x="0" fg:w="827"/><text x="0.0750%" y="815.50">simbelmyne</text></g><g><title>simbelmyne::movegen::moves::&lt;impl simbelmyne::board::Piece&gt;::visible_squares (2 samples, 0.24%)</title><rect x="99.7582%" y="789" width="0.2418%" height="15" fill="rgb(243,10,4)" fg:x="825" fg:w="2"/><text x="99.8332%" y="799.50"></text></g></svg></svg>